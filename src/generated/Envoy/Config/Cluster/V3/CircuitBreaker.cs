// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/config/cluster/v3/circuit_breaker.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.Cluster.V3 {

  /// <summary>Holder for reflection information generated from envoy/config/cluster/v3/circuit_breaker.proto</summary>
  public static partial class CircuitBreakerReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/config/cluster/v3/circuit_breaker.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CircuitBreakerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1lbnZveS9jb25maWcvY2x1c3Rlci92My9jaXJjdWl0X2JyZWFrZXIucHJv",
            "dG8SF2Vudm95LmNvbmZpZy5jbHVzdGVyLnYzGh9lbnZveS9jb25maWcvY29y",
            "ZS92My9iYXNlLnByb3RvGhtlbnZveS90eXBlL3YzL3BlcmNlbnQucHJvdG8a",
            "Hmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxoddWRwYS9hbm5vdGF0",
            "aW9ucy9zdGF0dXMucHJvdG8aIXVkcGEvYW5ub3RhdGlvbnMvdmVyc2lvbmlu",
            "Zy5wcm90bxoXdmFsaWRhdGUvdmFsaWRhdGUucHJvdG8iqgcKD0NpcmN1aXRC",
            "cmVha2VycxJHCgp0aHJlc2hvbGRzGAEgAygLMjMuZW52b3kuY29uZmlnLmNs",
            "dXN0ZXIudjMuQ2lyY3VpdEJyZWFrZXJzLlRocmVzaG9sZHMSUAoTcGVyX2hv",
            "c3RfdGhyZXNob2xkcxgCIAMoCzIzLmVudm95LmNvbmZpZy5jbHVzdGVyLnYz",
            "LkNpcmN1aXRCcmVha2Vycy5UaHJlc2hvbGRzGs4FCgpUaHJlc2hvbGRzEkEK",
            "CHByaW9yaXR5GAEgASgOMiUuZW52b3kuY29uZmlnLmNvcmUudjMuUm91dGlu",
            "Z1ByaW9yaXR5Qgj6QgWCAQIQARI1Cg9tYXhfY29ubmVjdGlvbnMYAiABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuVUludDMyVmFsdWUSOgoUbWF4X3BlbmRpbmdf",
            "cmVxdWVzdHMYAyABKAsyHC5nb29nbGUucHJvdG9idWYuVUludDMyVmFsdWUS",
            "MgoMbWF4X3JlcXVlc3RzGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlVJbnQz",
            "MlZhbHVlEjEKC21heF9yZXRyaWVzGAUgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlVJbnQzMlZhbHVlElUKDHJldHJ5X2J1ZGdldBgIIAEoCzI/LmVudm95LmNv",
            "bmZpZy5jbHVzdGVyLnYzLkNpcmN1aXRCcmVha2Vycy5UaHJlc2hvbGRzLlJl",
            "dHJ5QnVkZ2V0EhcKD3RyYWNrX3JlbWFpbmluZxgGIAEoCBI6ChRtYXhfY29u",
            "bmVjdGlvbl9wb29scxgHIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5VSW50MzJW",
            "YWx1ZRq+AQoLUmV0cnlCdWRnZXQSLgoOYnVkZ2V0X3BlcmNlbnQYASABKAsy",
            "Fi5lbnZveS50eXBlLnYzLlBlcmNlbnQSOwoVbWluX3JldHJ5X2NvbmN1cnJl",
            "bmN5GAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlVJbnQzMlZhbHVlOkKaxYge",
            "PQo7ZW52b3kuYXBpLnYyLmNsdXN0ZXIuQ2lyY3VpdEJyZWFrZXJzLlRocmVz",
            "aG9sZHMuUmV0cnlCdWRnZXQ6NprFiB4xCi9lbnZveS5hcGkudjIuY2x1c3Rl",
            "ci5DaXJjdWl0QnJlYWtlcnMuVGhyZXNob2xkczormsWIHiYKJGVudm95LmFw",
            "aS52Mi5jbHVzdGVyLkNpcmN1aXRCcmVha2Vyc0KQAQolaW8uZW52b3lwcm94",
            "eS5lbnZveS5jb25maWcuY2x1c3Rlci52M0ITQ2lyY3VpdEJyZWFrZXJQcm90",
            "b1ABWkhnaXRodWIuY29tL2Vudm95cHJveHkvZ28tY29udHJvbC1wbGFuZS9l",
            "bnZveS9jb25maWcvY2x1c3Rlci92MztjbHVzdGVydjO6gMjRBgIQAmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Core.V3.BaseReflection.Descriptor, global::Envoy.Type.V3.PercentReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Udpa.Annotations.VersioningReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Cluster.V3.CircuitBreakers), global::Envoy.Config.Cluster.V3.CircuitBreakers.Parser, new[]{ "Thresholds", "PerHostThresholds" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds), global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds.Parser, new[]{ "Priority", "MaxConnections", "MaxPendingRequests", "MaxRequests", "MaxRetries", "RetryBudget", "TrackRemaining", "MaxConnectionPools" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds.Types.RetryBudget), global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds.Types.RetryBudget.Parser, new[]{ "BudgetPercent", "MinRetryConcurrency" }, null, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// :ref:`Circuit breaking&lt;arch_overview_circuit_break>` settings can be
  /// specified individually for each defined priority.
  /// </summary>
  public sealed partial class CircuitBreakers : pb::IMessage<CircuitBreakers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CircuitBreakers> _parser = new pb::MessageParser<CircuitBreakers>(() => new CircuitBreakers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CircuitBreakers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Cluster.V3.CircuitBreakerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CircuitBreakers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CircuitBreakers(CircuitBreakers other) : this() {
      thresholds_ = other.thresholds_.Clone();
      perHostThresholds_ = other.perHostThresholds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CircuitBreakers Clone() {
      return new CircuitBreakers(this);
    }

    /// <summary>Field number for the "thresholds" field.</summary>
    public const int ThresholdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds> _repeated_thresholds_codec
        = pb::FieldCodec.ForMessage(10, global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds> thresholds_ = new pbc::RepeatedField<global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds>();
    /// <summary>
    /// If multiple :ref:`Thresholds&lt;envoy_v3_api_msg_config.cluster.v3.CircuitBreakers.Thresholds>`
    /// are defined with the same :ref:`RoutingPriority&lt;envoy_v3_api_enum_config.core.v3.RoutingPriority>`,
    /// the first one in the list is used. If no Thresholds is defined for a given
    /// :ref:`RoutingPriority&lt;envoy_v3_api_enum_config.core.v3.RoutingPriority>`, the default values
    /// are used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds> Thresholds {
      get { return thresholds_; }
    }

    /// <summary>Field number for the "per_host_thresholds" field.</summary>
    public const int PerHostThresholdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds> _repeated_perHostThresholds_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds> perHostThresholds_ = new pbc::RepeatedField<global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds>();
    /// <summary>
    /// Optional per-host limits which apply to each individual host in a cluster.
    ///
    /// .. note::
    ///  currently only the :ref:`max_connections
    ///  &lt;envoy_v3_api_field_config.cluster.v3.CircuitBreakers.Thresholds.max_connections>` field is supported for per-host limits.
    ///
    /// If multiple per-host :ref:`Thresholds&lt;envoy_v3_api_msg_config.cluster.v3.CircuitBreakers.Thresholds>`
    /// are defined with the same :ref:`RoutingPriority&lt;envoy_v3_api_enum_config.core.v3.RoutingPriority>`,
    /// the first one in the list is used. If no per-host Thresholds are defined for a given
    /// :ref:`RoutingPriority&lt;envoy_v3_api_enum_config.core.v3.RoutingPriority>`,
    /// the cluster will not have per-host limits.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds> PerHostThresholds {
      get { return perHostThresholds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CircuitBreakers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CircuitBreakers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!thresholds_.Equals(other.thresholds_)) return false;
      if(!perHostThresholds_.Equals(other.perHostThresholds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= thresholds_.GetHashCode();
      hash ^= perHostThresholds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      thresholds_.WriteTo(output, _repeated_thresholds_codec);
      perHostThresholds_.WriteTo(output, _repeated_perHostThresholds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      thresholds_.WriteTo(ref output, _repeated_thresholds_codec);
      perHostThresholds_.WriteTo(ref output, _repeated_perHostThresholds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += thresholds_.CalculateSize(_repeated_thresholds_codec);
      size += perHostThresholds_.CalculateSize(_repeated_perHostThresholds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CircuitBreakers other) {
      if (other == null) {
        return;
      }
      thresholds_.Add(other.thresholds_);
      perHostThresholds_.Add(other.perHostThresholds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            thresholds_.AddEntriesFrom(input, _repeated_thresholds_codec);
            break;
          }
          case 18: {
            perHostThresholds_.AddEntriesFrom(input, _repeated_perHostThresholds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            thresholds_.AddEntriesFrom(ref input, _repeated_thresholds_codec);
            break;
          }
          case 18: {
            perHostThresholds_.AddEntriesFrom(ref input, _repeated_perHostThresholds_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CircuitBreakers message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// A Thresholds defines CircuitBreaker settings for a
      /// :ref:`RoutingPriority&lt;envoy_v3_api_enum_config.core.v3.RoutingPriority>`.
      /// [#next-free-field: 9]
      /// </summary>
      public sealed partial class Thresholds : pb::IMessage<Thresholds>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Thresholds> _parser = new pb::MessageParser<Thresholds>(() => new Thresholds());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Thresholds> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Config.Cluster.V3.CircuitBreakers.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Thresholds() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Thresholds(Thresholds other) : this() {
          priority_ = other.priority_;
          MaxConnections = other.MaxConnections;
          MaxPendingRequests = other.MaxPendingRequests;
          MaxRequests = other.MaxRequests;
          MaxRetries = other.MaxRetries;
          retryBudget_ = other.retryBudget_ != null ? other.retryBudget_.Clone() : null;
          trackRemaining_ = other.trackRemaining_;
          MaxConnectionPools = other.MaxConnectionPools;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Thresholds Clone() {
          return new Thresholds(this);
        }

        /// <summary>Field number for the "priority" field.</summary>
        public const int PriorityFieldNumber = 1;
        private global::Envoy.Config.Core.V3.RoutingPriority priority_ = global::Envoy.Config.Core.V3.RoutingPriority.Default;
        /// <summary>
        /// The :ref:`RoutingPriority&lt;envoy_v3_api_enum_config.core.v3.RoutingPriority>`
        /// the specified CircuitBreaker settings apply to.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Config.Core.V3.RoutingPriority Priority {
          get { return priority_; }
          set {
            priority_ = value;
          }
        }

        /// <summary>Field number for the "max_connections" field.</summary>
        public const int MaxConnectionsFieldNumber = 2;
        private static readonly pb::FieldCodec<uint?> _single_maxConnections_codec = pb::FieldCodec.ForStructWrapper<uint>(18);
        private uint? maxConnections_;
        /// <summary>
        /// The maximum number of connections that Envoy will make to the upstream
        /// cluster. If not specified, the default is 1024.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint? MaxConnections {
          get { return maxConnections_; }
          set {
            maxConnections_ = value;
          }
        }


        /// <summary>Field number for the "max_pending_requests" field.</summary>
        public const int MaxPendingRequestsFieldNumber = 3;
        private static readonly pb::FieldCodec<uint?> _single_maxPendingRequests_codec = pb::FieldCodec.ForStructWrapper<uint>(26);
        private uint? maxPendingRequests_;
        /// <summary>
        /// The maximum number of pending requests that Envoy will allow to the
        /// upstream cluster. If not specified, the default is 1024.
        /// This limit is applied as a connection limit for non-HTTP traffic.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint? MaxPendingRequests {
          get { return maxPendingRequests_; }
          set {
            maxPendingRequests_ = value;
          }
        }


        /// <summary>Field number for the "max_requests" field.</summary>
        public const int MaxRequestsFieldNumber = 4;
        private static readonly pb::FieldCodec<uint?> _single_maxRequests_codec = pb::FieldCodec.ForStructWrapper<uint>(34);
        private uint? maxRequests_;
        /// <summary>
        /// The maximum number of parallel requests that Envoy will make to the
        /// upstream cluster. If not specified, the default is 1024.
        /// This limit does not apply to non-HTTP traffic.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint? MaxRequests {
          get { return maxRequests_; }
          set {
            maxRequests_ = value;
          }
        }


        /// <summary>Field number for the "max_retries" field.</summary>
        public const int MaxRetriesFieldNumber = 5;
        private static readonly pb::FieldCodec<uint?> _single_maxRetries_codec = pb::FieldCodec.ForStructWrapper<uint>(42);
        private uint? maxRetries_;
        /// <summary>
        /// The maximum number of parallel retries that Envoy will allow to the
        /// upstream cluster. If not specified, the default is 3.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint? MaxRetries {
          get { return maxRetries_; }
          set {
            maxRetries_ = value;
          }
        }


        /// <summary>Field number for the "retry_budget" field.</summary>
        public const int RetryBudgetFieldNumber = 8;
        private global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds.Types.RetryBudget retryBudget_;
        /// <summary>
        /// Specifies a limit on concurrent retries in relation to the number of active requests. This
        /// parameter is optional.
        ///
        /// .. note::
        ///
        ///    If this field is set, the retry budget will override any configured retry circuit
        ///    breaker.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds.Types.RetryBudget RetryBudget {
          get { return retryBudget_; }
          set {
            retryBudget_ = value;
          }
        }

        /// <summary>Field number for the "track_remaining" field.</summary>
        public const int TrackRemainingFieldNumber = 6;
        private bool trackRemaining_;
        /// <summary>
        /// If track_remaining is true, then stats will be published that expose
        /// the number of resources remaining until the circuit breakers open. If
        /// not specified, the default is false.
        ///
        /// .. note::
        ///
        ///    If a retry budget is used in lieu of the max_retries circuit breaker,
        ///    the remaining retry resources remaining will not be tracked.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool TrackRemaining {
          get { return trackRemaining_; }
          set {
            trackRemaining_ = value;
          }
        }

        /// <summary>Field number for the "max_connection_pools" field.</summary>
        public const int MaxConnectionPoolsFieldNumber = 7;
        private static readonly pb::FieldCodec<uint?> _single_maxConnectionPools_codec = pb::FieldCodec.ForStructWrapper<uint>(58);
        private uint? maxConnectionPools_;
        /// <summary>
        /// The maximum number of connection pools per cluster that Envoy will concurrently support at
        /// once. If not specified, the default is unlimited. Set this for clusters which create a
        /// large number of connection pools. See
        /// :ref:`Circuit Breaking &lt;arch_overview_circuit_break_cluster_maximum_connection_pools>` for
        /// more details.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint? MaxConnectionPools {
          get { return maxConnectionPools_; }
          set {
            maxConnectionPools_ = value;
          }
        }


        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Thresholds);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Thresholds other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Priority != other.Priority) return false;
          if (MaxConnections != other.MaxConnections) return false;
          if (MaxPendingRequests != other.MaxPendingRequests) return false;
          if (MaxRequests != other.MaxRequests) return false;
          if (MaxRetries != other.MaxRetries) return false;
          if (!object.Equals(RetryBudget, other.RetryBudget)) return false;
          if (TrackRemaining != other.TrackRemaining) return false;
          if (MaxConnectionPools != other.MaxConnectionPools) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Priority != global::Envoy.Config.Core.V3.RoutingPriority.Default) hash ^= Priority.GetHashCode();
          if (maxConnections_ != null) hash ^= MaxConnections.GetHashCode();
          if (maxPendingRequests_ != null) hash ^= MaxPendingRequests.GetHashCode();
          if (maxRequests_ != null) hash ^= MaxRequests.GetHashCode();
          if (maxRetries_ != null) hash ^= MaxRetries.GetHashCode();
          if (retryBudget_ != null) hash ^= RetryBudget.GetHashCode();
          if (TrackRemaining != false) hash ^= TrackRemaining.GetHashCode();
          if (maxConnectionPools_ != null) hash ^= MaxConnectionPools.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Priority != global::Envoy.Config.Core.V3.RoutingPriority.Default) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Priority);
          }
          if (maxConnections_ != null) {
            _single_maxConnections_codec.WriteTagAndValue(output, MaxConnections);
          }
          if (maxPendingRequests_ != null) {
            _single_maxPendingRequests_codec.WriteTagAndValue(output, MaxPendingRequests);
          }
          if (maxRequests_ != null) {
            _single_maxRequests_codec.WriteTagAndValue(output, MaxRequests);
          }
          if (maxRetries_ != null) {
            _single_maxRetries_codec.WriteTagAndValue(output, MaxRetries);
          }
          if (TrackRemaining != false) {
            output.WriteRawTag(48);
            output.WriteBool(TrackRemaining);
          }
          if (maxConnectionPools_ != null) {
            _single_maxConnectionPools_codec.WriteTagAndValue(output, MaxConnectionPools);
          }
          if (retryBudget_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(RetryBudget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Priority != global::Envoy.Config.Core.V3.RoutingPriority.Default) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Priority);
          }
          if (maxConnections_ != null) {
            _single_maxConnections_codec.WriteTagAndValue(ref output, MaxConnections);
          }
          if (maxPendingRequests_ != null) {
            _single_maxPendingRequests_codec.WriteTagAndValue(ref output, MaxPendingRequests);
          }
          if (maxRequests_ != null) {
            _single_maxRequests_codec.WriteTagAndValue(ref output, MaxRequests);
          }
          if (maxRetries_ != null) {
            _single_maxRetries_codec.WriteTagAndValue(ref output, MaxRetries);
          }
          if (TrackRemaining != false) {
            output.WriteRawTag(48);
            output.WriteBool(TrackRemaining);
          }
          if (maxConnectionPools_ != null) {
            _single_maxConnectionPools_codec.WriteTagAndValue(ref output, MaxConnectionPools);
          }
          if (retryBudget_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(RetryBudget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Priority != global::Envoy.Config.Core.V3.RoutingPriority.Default) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Priority);
          }
          if (maxConnections_ != null) {
            size += _single_maxConnections_codec.CalculateSizeWithTag(MaxConnections);
          }
          if (maxPendingRequests_ != null) {
            size += _single_maxPendingRequests_codec.CalculateSizeWithTag(MaxPendingRequests);
          }
          if (maxRequests_ != null) {
            size += _single_maxRequests_codec.CalculateSizeWithTag(MaxRequests);
          }
          if (maxRetries_ != null) {
            size += _single_maxRetries_codec.CalculateSizeWithTag(MaxRetries);
          }
          if (retryBudget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetryBudget);
          }
          if (TrackRemaining != false) {
            size += 1 + 1;
          }
          if (maxConnectionPools_ != null) {
            size += _single_maxConnectionPools_codec.CalculateSizeWithTag(MaxConnectionPools);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Thresholds other) {
          if (other == null) {
            return;
          }
          if (other.Priority != global::Envoy.Config.Core.V3.RoutingPriority.Default) {
            Priority = other.Priority;
          }
          if (other.maxConnections_ != null) {
            if (maxConnections_ == null || other.MaxConnections != 0) {
              MaxConnections = other.MaxConnections;
            }
          }
          if (other.maxPendingRequests_ != null) {
            if (maxPendingRequests_ == null || other.MaxPendingRequests != 0) {
              MaxPendingRequests = other.MaxPendingRequests;
            }
          }
          if (other.maxRequests_ != null) {
            if (maxRequests_ == null || other.MaxRequests != 0) {
              MaxRequests = other.MaxRequests;
            }
          }
          if (other.maxRetries_ != null) {
            if (maxRetries_ == null || other.MaxRetries != 0) {
              MaxRetries = other.MaxRetries;
            }
          }
          if (other.retryBudget_ != null) {
            if (retryBudget_ == null) {
              RetryBudget = new global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds.Types.RetryBudget();
            }
            RetryBudget.MergeFrom(other.RetryBudget);
          }
          if (other.TrackRemaining != false) {
            TrackRemaining = other.TrackRemaining;
          }
          if (other.maxConnectionPools_ != null) {
            if (maxConnectionPools_ == null || other.MaxConnectionPools != 0) {
              MaxConnectionPools = other.MaxConnectionPools;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Priority = (global::Envoy.Config.Core.V3.RoutingPriority) input.ReadEnum();
                break;
              }
              case 18: {
                uint? value = _single_maxConnections_codec.Read(input);
                if (maxConnections_ == null || value != 0) {
                  MaxConnections = value;
                }
                break;
              }
              case 26: {
                uint? value = _single_maxPendingRequests_codec.Read(input);
                if (maxPendingRequests_ == null || value != 0) {
                  MaxPendingRequests = value;
                }
                break;
              }
              case 34: {
                uint? value = _single_maxRequests_codec.Read(input);
                if (maxRequests_ == null || value != 0) {
                  MaxRequests = value;
                }
                break;
              }
              case 42: {
                uint? value = _single_maxRetries_codec.Read(input);
                if (maxRetries_ == null || value != 0) {
                  MaxRetries = value;
                }
                break;
              }
              case 48: {
                TrackRemaining = input.ReadBool();
                break;
              }
              case 58: {
                uint? value = _single_maxConnectionPools_codec.Read(input);
                if (maxConnectionPools_ == null || value != 0) {
                  MaxConnectionPools = value;
                }
                break;
              }
              case 66: {
                if (retryBudget_ == null) {
                  RetryBudget = new global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds.Types.RetryBudget();
                }
                input.ReadMessage(RetryBudget);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Priority = (global::Envoy.Config.Core.V3.RoutingPriority) input.ReadEnum();
                break;
              }
              case 18: {
                uint? value = _single_maxConnections_codec.Read(ref input);
                if (maxConnections_ == null || value != 0) {
                  MaxConnections = value;
                }
                break;
              }
              case 26: {
                uint? value = _single_maxPendingRequests_codec.Read(ref input);
                if (maxPendingRequests_ == null || value != 0) {
                  MaxPendingRequests = value;
                }
                break;
              }
              case 34: {
                uint? value = _single_maxRequests_codec.Read(ref input);
                if (maxRequests_ == null || value != 0) {
                  MaxRequests = value;
                }
                break;
              }
              case 42: {
                uint? value = _single_maxRetries_codec.Read(ref input);
                if (maxRetries_ == null || value != 0) {
                  MaxRetries = value;
                }
                break;
              }
              case 48: {
                TrackRemaining = input.ReadBool();
                break;
              }
              case 58: {
                uint? value = _single_maxConnectionPools_codec.Read(ref input);
                if (maxConnectionPools_ == null || value != 0) {
                  MaxConnectionPools = value;
                }
                break;
              }
              case 66: {
                if (retryBudget_ == null) {
                  RetryBudget = new global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds.Types.RetryBudget();
                }
                input.ReadMessage(RetryBudget);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Thresholds message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public sealed partial class RetryBudget : pb::IMessage<RetryBudget>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<RetryBudget> _parser = new pb::MessageParser<RetryBudget>(() => new RetryBudget());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<RetryBudget> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Envoy.Config.Cluster.V3.CircuitBreakers.Types.Thresholds.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public RetryBudget() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public RetryBudget(RetryBudget other) : this() {
              budgetPercent_ = other.budgetPercent_ != null ? other.budgetPercent_.Clone() : null;
              MinRetryConcurrency = other.MinRetryConcurrency;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public RetryBudget Clone() {
              return new RetryBudget(this);
            }

            /// <summary>Field number for the "budget_percent" field.</summary>
            public const int BudgetPercentFieldNumber = 1;
            private global::Envoy.Type.V3.Percent budgetPercent_;
            /// <summary>
            /// Specifies the limit on concurrent retries as a percentage of the sum of active requests and
            /// active pending requests. For example, if there are 100 active requests and the
            /// budget_percent is set to 25, there may be 25 active retries.
            ///
            /// This parameter is optional. Defaults to 20%.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Envoy.Type.V3.Percent BudgetPercent {
              get { return budgetPercent_; }
              set {
                budgetPercent_ = value;
              }
            }

            /// <summary>Field number for the "min_retry_concurrency" field.</summary>
            public const int MinRetryConcurrencyFieldNumber = 2;
            private static readonly pb::FieldCodec<uint?> _single_minRetryConcurrency_codec = pb::FieldCodec.ForStructWrapper<uint>(18);
            private uint? minRetryConcurrency_;
            /// <summary>
            /// Specifies the minimum retry concurrency allowed for the retry budget. The limit on the
            /// number of active retries may never go below this number.
            ///
            /// This parameter is optional. Defaults to 3.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint? MinRetryConcurrency {
              get { return minRetryConcurrency_; }
              set {
                minRetryConcurrency_ = value;
              }
            }


            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as RetryBudget);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(RetryBudget other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(BudgetPercent, other.BudgetPercent)) return false;
              if (MinRetryConcurrency != other.MinRetryConcurrency) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (budgetPercent_ != null) hash ^= BudgetPercent.GetHashCode();
              if (minRetryConcurrency_ != null) hash ^= MinRetryConcurrency.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (budgetPercent_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(BudgetPercent);
              }
              if (minRetryConcurrency_ != null) {
                _single_minRetryConcurrency_codec.WriteTagAndValue(output, MinRetryConcurrency);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (budgetPercent_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(BudgetPercent);
              }
              if (minRetryConcurrency_ != null) {
                _single_minRetryConcurrency_codec.WriteTagAndValue(ref output, MinRetryConcurrency);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (budgetPercent_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(BudgetPercent);
              }
              if (minRetryConcurrency_ != null) {
                size += _single_minRetryConcurrency_codec.CalculateSizeWithTag(MinRetryConcurrency);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(RetryBudget other) {
              if (other == null) {
                return;
              }
              if (other.budgetPercent_ != null) {
                if (budgetPercent_ == null) {
                  BudgetPercent = new global::Envoy.Type.V3.Percent();
                }
                BudgetPercent.MergeFrom(other.BudgetPercent);
              }
              if (other.minRetryConcurrency_ != null) {
                if (minRetryConcurrency_ == null || other.MinRetryConcurrency != 0) {
                  MinRetryConcurrency = other.MinRetryConcurrency;
                }
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (budgetPercent_ == null) {
                      BudgetPercent = new global::Envoy.Type.V3.Percent();
                    }
                    input.ReadMessage(BudgetPercent);
                    break;
                  }
                  case 18: {
                    uint? value = _single_minRetryConcurrency_codec.Read(input);
                    if (minRetryConcurrency_ == null || value != 0) {
                      MinRetryConcurrency = value;
                    }
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (budgetPercent_ == null) {
                      BudgetPercent = new global::Envoy.Type.V3.Percent();
                    }
                    input.ReadMessage(BudgetPercent);
                    break;
                  }
                  case 18: {
                    uint? value = _single_minRetryConcurrency_codec.Read(ref input);
                    if (minRetryConcurrency_ == null || value != 0) {
                      MinRetryConcurrency = value;
                    }
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
