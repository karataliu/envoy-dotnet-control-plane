// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/service/ratelimit/v3/rls.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Service.Ratelimit.V3 {

  /// <summary>Holder for reflection information generated from envoy/service/ratelimit/v3/rls.proto</summary>
  public static partial class RlsReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/service/ratelimit/v3/rls.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RlsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRlbnZveS9zZXJ2aWNlL3JhdGVsaW1pdC92My9ybHMucHJvdG8SGmVudm95",
            "LnNlcnZpY2UucmF0ZWxpbWl0LnYzGh9lbnZveS9jb25maWcvY29yZS92My9i",
            "YXNlLnByb3RvGjRlbnZveS9leHRlbnNpb25zL2NvbW1vbi9yYXRlbGltaXQv",
            "djMvcmF0ZWxpbWl0LnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24u",
            "cHJvdG8aHGdvb2dsZS9wcm90b2J1Zi9zdHJ1Y3QucHJvdG8aH2dvb2dsZS9w",
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8aHXVkcGEvYW5ub3RhdGlvbnMvc3Rh",
            "dHVzLnByb3RvGiF1ZHBhL2Fubm90YXRpb25zL3ZlcnNpb25pbmcucHJvdG8a",
            "F3ZhbGlkYXRlL3ZhbGlkYXRlLnByb3RvIrsBChBSYXRlTGltaXRSZXF1ZXN0",
            "Eg4KBmRvbWFpbhgBIAEoCRJOCgtkZXNjcmlwdG9ycxgCIAMoCzI5LmVudm95",
            "LmV4dGVuc2lvbnMuY29tbW9uLnJhdGVsaW1pdC52My5SYXRlTGltaXREZXNj",
            "cmlwdG9yEhMKC2hpdHNfYWRkZW5kGAMgASgNOjKaxYgeLQorZW52b3kuc2Vy",
            "dmljZS5yYXRlbGltaXQudjIuUmF0ZUxpbWl0UmVxdWVzdCK2CgoRUmF0ZUxp",
            "bWl0UmVzcG9uc2USSAoMb3ZlcmFsbF9jb2RlGAEgASgOMjIuZW52b3kuc2Vy",
            "dmljZS5yYXRlbGltaXQudjMuUmF0ZUxpbWl0UmVzcG9uc2UuQ29kZRJQCghz",
            "dGF0dXNlcxgCIAMoCzI+LmVudm95LnNlcnZpY2UucmF0ZWxpbWl0LnYzLlJh",
            "dGVMaW1pdFJlc3BvbnNlLkRlc2NyaXB0b3JTdGF0dXMSQgoXcmVzcG9uc2Vf",
            "aGVhZGVyc190b19hZGQYAyADKAsyIS5lbnZveS5jb25maWcuY29yZS52My5I",
            "ZWFkZXJWYWx1ZRJBChZyZXF1ZXN0X2hlYWRlcnNfdG9fYWRkGAQgAygLMiEu",
            "ZW52b3kuY29uZmlnLmNvcmUudjMuSGVhZGVyVmFsdWUSEAoIcmF3X2JvZHkY",
            "BSABKAwSMQoQZHluYW1pY19tZXRhZGF0YRgGIAEoCzIXLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJ1Y3QSQgoFcXVvdGEYByABKAsyMy5lbnZveS5zZXJ2aWNlLnJh",
            "dGVsaW1pdC52My5SYXRlTGltaXRSZXNwb25zZS5RdW90YRqUAgoJUmF0ZUxp",
            "bWl0EgwKBG5hbWUYAyABKAkSGQoRcmVxdWVzdHNfcGVyX3VuaXQYASABKA0S",
            "SgoEdW5pdBgCIAEoDjI8LmVudm95LnNlcnZpY2UucmF0ZWxpbWl0LnYzLlJh",
            "dGVMaW1pdFJlc3BvbnNlLlJhdGVMaW1pdC5Vbml0IlMKBFVuaXQSCwoHVU5L",
            "Tk9XThAAEgoKBlNFQ09ORBABEgoKBk1JTlVURRACEggKBEhPVVIQAxIHCgNE",
            "QVkQBBIJCgVNT05USBAFEggKBFlFQVIQBjo9msWIHjgKNmVudm95LnNlcnZp",
            "Y2UucmF0ZWxpbWl0LnYyLlJhdGVMaW1pdFJlc3BvbnNlLlJhdGVMaW1pdBp5",
            "CgVRdW90YRIZCghyZXF1ZXN0cxgBIAEoDUIH+kIEKgIgABIxCgt2YWxpZF91",
            "bnRpbBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIABIKCgJp",
            "ZBgDIAEoCUIWChRleHBpcmF0aW9uX3NwZWNpZmllchqAAwoQRGVzY3JpcHRv",
            "clN0YXR1cxJACgRjb2RlGAEgASgOMjIuZW52b3kuc2VydmljZS5yYXRlbGlt",
            "aXQudjMuUmF0ZUxpbWl0UmVzcG9uc2UuQ29kZRJOCg1jdXJyZW50X2xpbWl0",
            "GAIgASgLMjcuZW52b3kuc2VydmljZS5yYXRlbGltaXQudjMuUmF0ZUxpbWl0",
            "UmVzcG9uc2UuUmF0ZUxpbWl0EhcKD2xpbWl0X3JlbWFpbmluZxgDIAEoDRI3",
            "ChRkdXJhdGlvbl91bnRpbF9yZXNldBgEIAEoCzIZLmdvb2dsZS5wcm90b2J1",
            "Zi5EdXJhdGlvbhJCCgVxdW90YRgFIAEoCzIzLmVudm95LnNlcnZpY2UucmF0",
            "ZWxpbWl0LnYzLlJhdGVMaW1pdFJlc3BvbnNlLlF1b3RhOkSaxYgePwo9ZW52",
            "b3kuc2VydmljZS5yYXRlbGltaXQudjIuUmF0ZUxpbWl0UmVzcG9uc2UuRGVz",
            "Y3JpcHRvclN0YXR1cyIrCgRDb2RlEgsKB1VOS05PV04QABIGCgJPSxABEg4K",
            "Ck9WRVJfTElNSVQQAjozmsWIHi4KLGVudm95LnNlcnZpY2UucmF0ZWxpbWl0",
            "LnYyLlJhdGVMaW1pdFJlc3BvbnNlMoQBChBSYXRlTGltaXRTZXJ2aWNlEnAK",
            "D1Nob3VsZFJhdGVMaW1pdBIsLmVudm95LnNlcnZpY2UucmF0ZWxpbWl0LnYz",
            "LlJhdGVMaW1pdFJlcXVlc3QaLS5lbnZveS5zZXJ2aWNlLnJhdGVsaW1pdC52",
            "My5SYXRlTGltaXRSZXNwb25zZSIAQo0BCihpby5lbnZveXByb3h5LmVudm95",
            "LnNlcnZpY2UucmF0ZWxpbWl0LnYzQghSbHNQcm90b1ABWk1naXRodWIuY29t",
            "L2Vudm95cHJveHkvZ28tY29udHJvbC1wbGFuZS9lbnZveS9zZXJ2aWNlL3Jh",
            "dGVsaW1pdC92MztyYXRlbGltaXR2M7qAyNEGAhACYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Core.V3.BaseReflection.Descriptor, global::Envoy.Extensions.Common.Ratelimit.V3.RatelimitReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Udpa.Annotations.VersioningReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Ratelimit.V3.RateLimitRequest), global::Envoy.Service.Ratelimit.V3.RateLimitRequest.Parser, new[]{ "Domain", "Descriptors", "HitsAddend" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Ratelimit.V3.RateLimitResponse), global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Parser, new[]{ "OverallCode", "Statuses", "ResponseHeadersToAdd", "RequestHeadersToAdd", "RawBody", "DynamicMetadata", "Quota" }, null, new[]{ typeof(global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit), global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Parser, new[]{ "Name", "RequestsPerUnit", "Unit" }, null, new[]{ typeof(global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Types.Unit) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota), global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota.Parser, new[]{ "Requests", "ValidUntil", "Id" }, new[]{ "ExpirationSpecifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.DescriptorStatus), global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.DescriptorStatus.Parser, new[]{ "Code", "CurrentLimit", "LimitRemaining", "DurationUntilReset", "Quota" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Main message for a rate limit request. The rate limit service is designed to be fully generic
  /// in the sense that it can operate on arbitrary hierarchical key/value pairs. The loaded
  /// configuration will parse the request and find the most specific limit to apply. In addition,
  /// a RateLimitRequest can contain multiple "descriptors" to limit on. When multiple descriptors
  /// are provided, the server will limit on *ALL* of them and return an OVER_LIMIT response if any
  /// of them are over limit. This enables more complex application level rate limiting scenarios
  /// if desired.
  /// </summary>
  public sealed partial class RateLimitRequest : pb::IMessage<RateLimitRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RateLimitRequest> _parser = new pb::MessageParser<RateLimitRequest>(() => new RateLimitRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RateLimitRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.Ratelimit.V3.RlsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitRequest(RateLimitRequest other) : this() {
      domain_ = other.domain_;
      descriptors_ = other.descriptors_.Clone();
      hitsAddend_ = other.hitsAddend_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitRequest Clone() {
      return new RateLimitRequest(this);
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 1;
    private string domain_ = "";
    /// <summary>
    /// All rate limit requests must specify a domain. This enables the configuration to be per
    /// application without fear of overlap. E.g., "envoy".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "descriptors" field.</summary>
    public const int DescriptorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Extensions.Common.Ratelimit.V3.RateLimitDescriptor> _repeated_descriptors_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Extensions.Common.Ratelimit.V3.RateLimitDescriptor.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Extensions.Common.Ratelimit.V3.RateLimitDescriptor> descriptors_ = new pbc::RepeatedField<global::Envoy.Extensions.Common.Ratelimit.V3.RateLimitDescriptor>();
    /// <summary>
    /// All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
    /// processed by the service (see below). If any of the descriptors are over limit, the entire
    /// request is considered to be over limit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Extensions.Common.Ratelimit.V3.RateLimitDescriptor> Descriptors {
      get { return descriptors_; }
    }

    /// <summary>Field number for the "hits_addend" field.</summary>
    public const int HitsAddendFieldNumber = 3;
    private uint hitsAddend_;
    /// <summary>
    /// Rate limit requests can optionally specify the number of hits a request adds to the matched
    /// limit. If the value is not set in the message, a request increases the matched limit by 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HitsAddend {
      get { return hitsAddend_; }
      set {
        hitsAddend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RateLimitRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RateLimitRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Domain != other.Domain) return false;
      if(!descriptors_.Equals(other.descriptors_)) return false;
      if (HitsAddend != other.HitsAddend) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      hash ^= descriptors_.GetHashCode();
      if (HitsAddend != 0) hash ^= HitsAddend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      descriptors_.WriteTo(output, _repeated_descriptors_codec);
      if (HitsAddend != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(HitsAddend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      descriptors_.WriteTo(ref output, _repeated_descriptors_codec);
      if (HitsAddend != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(HitsAddend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      size += descriptors_.CalculateSize(_repeated_descriptors_codec);
      if (HitsAddend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HitsAddend);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RateLimitRequest other) {
      if (other == null) {
        return;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      descriptors_.Add(other.descriptors_);
      if (other.HitsAddend != 0) {
        HitsAddend = other.HitsAddend;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
          case 18: {
            descriptors_.AddEntriesFrom(input, _repeated_descriptors_codec);
            break;
          }
          case 24: {
            HitsAddend = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
          case 18: {
            descriptors_.AddEntriesFrom(ref input, _repeated_descriptors_codec);
            break;
          }
          case 24: {
            HitsAddend = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A response from a ShouldRateLimit call.
  /// [#next-free-field: 8]
  /// </summary>
  public sealed partial class RateLimitResponse : pb::IMessage<RateLimitResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RateLimitResponse> _parser = new pb::MessageParser<RateLimitResponse>(() => new RateLimitResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RateLimitResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.Ratelimit.V3.RlsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitResponse(RateLimitResponse other) : this() {
      overallCode_ = other.overallCode_;
      statuses_ = other.statuses_.Clone();
      responseHeadersToAdd_ = other.responseHeadersToAdd_.Clone();
      requestHeadersToAdd_ = other.requestHeadersToAdd_.Clone();
      rawBody_ = other.rawBody_;
      dynamicMetadata_ = other.dynamicMetadata_ != null ? other.dynamicMetadata_.Clone() : null;
      quota_ = other.quota_ != null ? other.quota_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RateLimitResponse Clone() {
      return new RateLimitResponse(this);
    }

    /// <summary>Field number for the "overall_code" field.</summary>
    public const int OverallCodeFieldNumber = 1;
    private global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code overallCode_ = global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown;
    /// <summary>
    /// The overall response code which takes into account all of the descriptors that were passed
    /// in the RateLimitRequest message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code OverallCode {
      get { return overallCode_; }
      set {
        overallCode_ = value;
      }
    }

    /// <summary>Field number for the "statuses" field.</summary>
    public const int StatusesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.DescriptorStatus> _repeated_statuses_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.DescriptorStatus.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.DescriptorStatus> statuses_ = new pbc::RepeatedField<global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.DescriptorStatus>();
    /// <summary>
    /// A list of DescriptorStatus messages which matches the length of the descriptor list passed
    /// in the RateLimitRequest. This can be used by the caller to determine which individual
    /// descriptors failed and/or what the currently configured limits are for all of them.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.DescriptorStatus> Statuses {
      get { return statuses_; }
    }

    /// <summary>Field number for the "response_headers_to_add" field.</summary>
    public const int ResponseHeadersToAddFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Envoy.Config.Core.V3.HeaderValue> _repeated_responseHeadersToAdd_codec
        = pb::FieldCodec.ForMessage(26, global::Envoy.Config.Core.V3.HeaderValue.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Config.Core.V3.HeaderValue> responseHeadersToAdd_ = new pbc::RepeatedField<global::Envoy.Config.Core.V3.HeaderValue>();
    /// <summary>
    /// A list of headers to add to the response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Config.Core.V3.HeaderValue> ResponseHeadersToAdd {
      get { return responseHeadersToAdd_; }
    }

    /// <summary>Field number for the "request_headers_to_add" field.</summary>
    public const int RequestHeadersToAddFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Envoy.Config.Core.V3.HeaderValue> _repeated_requestHeadersToAdd_codec
        = pb::FieldCodec.ForMessage(34, global::Envoy.Config.Core.V3.HeaderValue.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Config.Core.V3.HeaderValue> requestHeadersToAdd_ = new pbc::RepeatedField<global::Envoy.Config.Core.V3.HeaderValue>();
    /// <summary>
    /// A list of headers to add to the request when forwarded
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Config.Core.V3.HeaderValue> RequestHeadersToAdd {
      get { return requestHeadersToAdd_; }
    }

    /// <summary>Field number for the "raw_body" field.</summary>
    public const int RawBodyFieldNumber = 5;
    private pb::ByteString rawBody_ = pb::ByteString.Empty;
    /// <summary>
    /// A response body to send to the downstream client when the response code is not OK.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RawBody {
      get { return rawBody_; }
      set {
        rawBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dynamic_metadata" field.</summary>
    public const int DynamicMetadataFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Struct dynamicMetadata_;
    /// <summary>
    /// Optional response metadata that will be emitted as dynamic metadata to be consumed by the next
    /// filter. This metadata lives in a namespace specified by the canonical name of extension filter
    /// that requires it:
    ///
    /// - :ref:`envoy.filters.http.ratelimit &lt;config_http_filters_ratelimit_dynamic_metadata>` for HTTP filter.
    /// - :ref:`envoy.filters.network.ratelimit &lt;config_network_filters_ratelimit_dynamic_metadata>` for network filter.
    /// - :ref:`envoy.filters.thrift.rate_limit &lt;config_thrift_filters_rate_limit_dynamic_metadata>` for Thrift filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Struct DynamicMetadata {
      get { return dynamicMetadata_; }
      set {
        dynamicMetadata_ = value;
      }
    }

    /// <summary>Field number for the "quota" field.</summary>
    public const int QuotaFieldNumber = 7;
    private global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota quota_;
    /// <summary>
    /// Quota is available for a request if its entire descriptor set has cached quota available.
    /// This is a union of all descriptors in the descriptor set. Clients can use the quota for future matches if and only if the descriptor set matches what was sent in the request that originated this response.
    ///
    /// If quota is available, a RLS request will not be made and the quota will be reduced by 1.
    /// If quota is not available (i.e., a cached entry doesn't exist for a RLS descriptor set), a RLS request will be triggered.
    /// If the server did not provide a quota, such as the quota message is empty then the request admission is determined by the
    /// :ref:`overall_code &lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.overall_code>`.
    ///
    /// If there is not sufficient quota and the cached entry exists for a RLS descriptor set is out-of-quota but not expired,
    /// the request will be treated as OVER_LIMIT.
    /// [#not-implemented-hide:]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota Quota {
      get { return quota_; }
      set {
        quota_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RateLimitResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RateLimitResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OverallCode != other.OverallCode) return false;
      if(!statuses_.Equals(other.statuses_)) return false;
      if(!responseHeadersToAdd_.Equals(other.responseHeadersToAdd_)) return false;
      if(!requestHeadersToAdd_.Equals(other.requestHeadersToAdd_)) return false;
      if (RawBody != other.RawBody) return false;
      if (!object.Equals(DynamicMetadata, other.DynamicMetadata)) return false;
      if (!object.Equals(Quota, other.Quota)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OverallCode != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown) hash ^= OverallCode.GetHashCode();
      hash ^= statuses_.GetHashCode();
      hash ^= responseHeadersToAdd_.GetHashCode();
      hash ^= requestHeadersToAdd_.GetHashCode();
      if (RawBody.Length != 0) hash ^= RawBody.GetHashCode();
      if (dynamicMetadata_ != null) hash ^= DynamicMetadata.GetHashCode();
      if (quota_ != null) hash ^= Quota.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OverallCode != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OverallCode);
      }
      statuses_.WriteTo(output, _repeated_statuses_codec);
      responseHeadersToAdd_.WriteTo(output, _repeated_responseHeadersToAdd_codec);
      requestHeadersToAdd_.WriteTo(output, _repeated_requestHeadersToAdd_codec);
      if (RawBody.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(RawBody);
      }
      if (dynamicMetadata_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DynamicMetadata);
      }
      if (quota_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Quota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OverallCode != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OverallCode);
      }
      statuses_.WriteTo(ref output, _repeated_statuses_codec);
      responseHeadersToAdd_.WriteTo(ref output, _repeated_responseHeadersToAdd_codec);
      requestHeadersToAdd_.WriteTo(ref output, _repeated_requestHeadersToAdd_codec);
      if (RawBody.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(RawBody);
      }
      if (dynamicMetadata_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DynamicMetadata);
      }
      if (quota_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Quota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OverallCode != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OverallCode);
      }
      size += statuses_.CalculateSize(_repeated_statuses_codec);
      size += responseHeadersToAdd_.CalculateSize(_repeated_responseHeadersToAdd_codec);
      size += requestHeadersToAdd_.CalculateSize(_repeated_requestHeadersToAdd_codec);
      if (RawBody.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RawBody);
      }
      if (dynamicMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DynamicMetadata);
      }
      if (quota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quota);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RateLimitResponse other) {
      if (other == null) {
        return;
      }
      if (other.OverallCode != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown) {
        OverallCode = other.OverallCode;
      }
      statuses_.Add(other.statuses_);
      responseHeadersToAdd_.Add(other.responseHeadersToAdd_);
      requestHeadersToAdd_.Add(other.requestHeadersToAdd_);
      if (other.RawBody.Length != 0) {
        RawBody = other.RawBody;
      }
      if (other.dynamicMetadata_ != null) {
        if (dynamicMetadata_ == null) {
          DynamicMetadata = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        DynamicMetadata.MergeFrom(other.DynamicMetadata);
      }
      if (other.quota_ != null) {
        if (quota_ == null) {
          Quota = new global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota();
        }
        Quota.MergeFrom(other.Quota);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OverallCode = (global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            statuses_.AddEntriesFrom(input, _repeated_statuses_codec);
            break;
          }
          case 26: {
            responseHeadersToAdd_.AddEntriesFrom(input, _repeated_responseHeadersToAdd_codec);
            break;
          }
          case 34: {
            requestHeadersToAdd_.AddEntriesFrom(input, _repeated_requestHeadersToAdd_codec);
            break;
          }
          case 42: {
            RawBody = input.ReadBytes();
            break;
          }
          case 50: {
            if (dynamicMetadata_ == null) {
              DynamicMetadata = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(DynamicMetadata);
            break;
          }
          case 58: {
            if (quota_ == null) {
              Quota = new global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OverallCode = (global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            statuses_.AddEntriesFrom(ref input, _repeated_statuses_codec);
            break;
          }
          case 26: {
            responseHeadersToAdd_.AddEntriesFrom(ref input, _repeated_responseHeadersToAdd_codec);
            break;
          }
          case 34: {
            requestHeadersToAdd_.AddEntriesFrom(ref input, _repeated_requestHeadersToAdd_codec);
            break;
          }
          case 42: {
            RawBody = input.ReadBytes();
            break;
          }
          case 50: {
            if (dynamicMetadata_ == null) {
              DynamicMetadata = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(DynamicMetadata);
            break;
          }
          case 58: {
            if (quota_ == null) {
              Quota = new global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RateLimitResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Code {
        /// <summary>
        /// The response code is not known.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// The response code to notify that the number of requests are under limit.
        /// </summary>
        [pbr::OriginalName("OK")] Ok = 1,
        /// <summary>
        /// The response code to notify that the number of requests are over limit.
        /// </summary>
        [pbr::OriginalName("OVER_LIMIT")] OverLimit = 2,
      }

      /// <summary>
      /// Defines an actual rate limit in terms of requests per unit of time and the unit itself.
      /// </summary>
      public sealed partial class RateLimit : pb::IMessage<RateLimit>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RateLimit> _parser = new pb::MessageParser<RateLimit>(() => new RateLimit());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RateLimit> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RateLimit() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RateLimit(RateLimit other) : this() {
          name_ = other.name_;
          requestsPerUnit_ = other.requestsPerUnit_;
          unit_ = other.unit_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RateLimit Clone() {
          return new RateLimit(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private string name_ = "";
        /// <summary>
        /// A name or description of this limit.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "requests_per_unit" field.</summary>
        public const int RequestsPerUnitFieldNumber = 1;
        private uint requestsPerUnit_;
        /// <summary>
        /// The number of requests per unit of time.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint RequestsPerUnit {
          get { return requestsPerUnit_; }
          set {
            requestsPerUnit_ = value;
          }
        }

        /// <summary>Field number for the "unit" field.</summary>
        public const int UnitFieldNumber = 2;
        private global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Types.Unit unit_ = global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown;
        /// <summary>
        /// The unit of time.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Types.Unit Unit {
          get { return unit_; }
          set {
            unit_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RateLimit);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RateLimit other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (RequestsPerUnit != other.RequestsPerUnit) return false;
          if (Unit != other.Unit) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (RequestsPerUnit != 0) hash ^= RequestsPerUnit.GetHashCode();
          if (Unit != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown) hash ^= Unit.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (RequestsPerUnit != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(RequestsPerUnit);
          }
          if (Unit != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Unit);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (RequestsPerUnit != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(RequestsPerUnit);
          }
          if (Unit != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Unit);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (RequestsPerUnit != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestsPerUnit);
          }
          if (Unit != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Unit);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RateLimit other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.RequestsPerUnit != 0) {
            RequestsPerUnit = other.RequestsPerUnit;
          }
          if (other.Unit != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Types.Unit.Unknown) {
            Unit = other.Unit;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RequestsPerUnit = input.ReadUInt32();
                break;
              }
              case 16: {
                Unit = (global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Types.Unit) input.ReadEnum();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                RequestsPerUnit = input.ReadUInt32();
                break;
              }
              case 16: {
                Unit = (global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit.Types.Unit) input.ReadEnum();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the RateLimit message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Identifies the unit of of time for rate limit.
          /// [#comment: replace by envoy/type/v3/ratelimit_unit.proto in v4]
          /// </summary>
          public enum Unit {
            /// <summary>
            /// The time unit is not known.
            /// </summary>
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            /// <summary>
            /// The time unit representing a second.
            /// </summary>
            [pbr::OriginalName("SECOND")] Second = 1,
            /// <summary>
            /// The time unit representing a minute.
            /// </summary>
            [pbr::OriginalName("MINUTE")] Minute = 2,
            /// <summary>
            /// The time unit representing an hour.
            /// </summary>
            [pbr::OriginalName("HOUR")] Hour = 3,
            /// <summary>
            /// The time unit representing a day.
            /// </summary>
            [pbr::OriginalName("DAY")] Day = 4,
            /// <summary>
            /// The time unit representing a month.
            /// </summary>
            [pbr::OriginalName("MONTH")] Month = 5,
            /// <summary>
            /// The time unit representing a year.
            /// </summary>
            [pbr::OriginalName("YEAR")] Year = 6,
          }

        }
        #endregion

      }

      /// <summary>
      /// Cacheable quota for responses.
      /// Quota can be granted at different levels: either for each individual descriptor or for the whole descriptor set.
      /// This is a certain number of requests over a period of time.
      /// The client may cache this result and apply the effective RateLimitResponse to future matching
      /// requests without querying rate limit service.
      ///
      /// When quota expires due to timeout, a new RLS request will also be made.
      /// The implementation may choose to preemptively query the rate limit server for more quota on or
      /// before expiration or before the available quota runs out.
      /// [#not-implemented-hide:]
      /// </summary>
      public sealed partial class Quota : pb::IMessage<Quota>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Quota> _parser = new pb::MessageParser<Quota>(() => new Quota());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Quota> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Quota() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Quota(Quota other) : this() {
          requests_ = other.requests_;
          id_ = other.id_;
          switch (other.ExpirationSpecifierCase) {
            case ExpirationSpecifierOneofCase.ValidUntil:
              ValidUntil = other.ValidUntil.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Quota Clone() {
          return new Quota(this);
        }

        /// <summary>Field number for the "requests" field.</summary>
        public const int RequestsFieldNumber = 1;
        private uint requests_;
        /// <summary>
        /// Number of matching requests granted in quota. Must be 1 or more.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Requests {
          get { return requests_; }
          set {
            requests_ = value;
          }
        }

        /// <summary>Field number for the "valid_until" field.</summary>
        public const int ValidUntilFieldNumber = 2;
        /// <summary>
        /// Point in time at which the quota expires.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp ValidUntil {
          get { return expirationSpecifierCase_ == ExpirationSpecifierOneofCase.ValidUntil ? (global::Google.Protobuf.WellKnownTypes.Timestamp) expirationSpecifier_ : null; }
          set {
            expirationSpecifier_ = value;
            expirationSpecifierCase_ = value == null ? ExpirationSpecifierOneofCase.None : ExpirationSpecifierOneofCase.ValidUntil;
          }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 3;
        private string id_ = "";
        /// <summary>
        /// The unique id that is associated with each Quota either at individual descriptor level or whole descriptor set level.
        ///
        /// For a matching policy with boolean logic, for example, match: "request.headers['environment'] == 'staging' || request.headers['environment'] == 'dev'"),
        /// the request_headers action produces a distinct list of descriptors for each possible value of the ‘environment’ header even though the granted quota is same.
        /// Thus, the client will use this id information (returned from RLS server) to correctly correlate the multiple descriptors/descriptor sets that have been granted with same quota (i.e., share the same quota among multiple descriptors or descriptor sets.)
        ///
        /// If id is empty, this id field will be ignored. If quota for the same id changes (e.g. due to configuration update), the old quota will be overridden by the new one. Shared quotas referenced by ID will still adhere to expiration after `valid_until`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        private object expirationSpecifier_;
        /// <summary>Enum of possible cases for the "expiration_specifier" oneof.</summary>
        public enum ExpirationSpecifierOneofCase {
          None = 0,
          ValidUntil = 2,
        }
        private ExpirationSpecifierOneofCase expirationSpecifierCase_ = ExpirationSpecifierOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ExpirationSpecifierOneofCase ExpirationSpecifierCase {
          get { return expirationSpecifierCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearExpirationSpecifier() {
          expirationSpecifierCase_ = ExpirationSpecifierOneofCase.None;
          expirationSpecifier_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Quota);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Quota other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Requests != other.Requests) return false;
          if (!object.Equals(ValidUntil, other.ValidUntil)) return false;
          if (Id != other.Id) return false;
          if (ExpirationSpecifierCase != other.ExpirationSpecifierCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Requests != 0) hash ^= Requests.GetHashCode();
          if (expirationSpecifierCase_ == ExpirationSpecifierOneofCase.ValidUntil) hash ^= ValidUntil.GetHashCode();
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          hash ^= (int) expirationSpecifierCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Requests != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Requests);
          }
          if (expirationSpecifierCase_ == ExpirationSpecifierOneofCase.ValidUntil) {
            output.WriteRawTag(18);
            output.WriteMessage(ValidUntil);
          }
          if (Id.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Requests != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Requests);
          }
          if (expirationSpecifierCase_ == ExpirationSpecifierOneofCase.ValidUntil) {
            output.WriteRawTag(18);
            output.WriteMessage(ValidUntil);
          }
          if (Id.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Requests != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Requests);
          }
          if (expirationSpecifierCase_ == ExpirationSpecifierOneofCase.ValidUntil) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValidUntil);
          }
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Quota other) {
          if (other == null) {
            return;
          }
          if (other.Requests != 0) {
            Requests = other.Requests;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          switch (other.ExpirationSpecifierCase) {
            case ExpirationSpecifierOneofCase.ValidUntil:
              if (ValidUntil == null) {
                ValidUntil = new global::Google.Protobuf.WellKnownTypes.Timestamp();
              }
              ValidUntil.MergeFrom(other.ValidUntil);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Requests = input.ReadUInt32();
                break;
              }
              case 18: {
                global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                if (expirationSpecifierCase_ == ExpirationSpecifierOneofCase.ValidUntil) {
                  subBuilder.MergeFrom(ValidUntil);
                }
                input.ReadMessage(subBuilder);
                ValidUntil = subBuilder;
                break;
              }
              case 26: {
                Id = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Requests = input.ReadUInt32();
                break;
              }
              case 18: {
                global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                if (expirationSpecifierCase_ == ExpirationSpecifierOneofCase.ValidUntil) {
                  subBuilder.MergeFrom(ValidUntil);
                }
                input.ReadMessage(subBuilder);
                ValidUntil = subBuilder;
                break;
              }
              case 26: {
                Id = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// [#next-free-field: 6]
      /// </summary>
      public sealed partial class DescriptorStatus : pb::IMessage<DescriptorStatus>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DescriptorStatus> _parser = new pb::MessageParser<DescriptorStatus>(() => new DescriptorStatus());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DescriptorStatus> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DescriptorStatus() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DescriptorStatus(DescriptorStatus other) : this() {
          code_ = other.code_;
          currentLimit_ = other.currentLimit_ != null ? other.currentLimit_.Clone() : null;
          limitRemaining_ = other.limitRemaining_;
          durationUntilReset_ = other.durationUntilReset_ != null ? other.durationUntilReset_.Clone() : null;
          quota_ = other.quota_ != null ? other.quota_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DescriptorStatus Clone() {
          return new DescriptorStatus(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code code_ = global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown;
        /// <summary>
        /// The response code for an individual descriptor.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code Code {
          get { return code_; }
          set {
            code_ = value;
          }
        }

        /// <summary>Field number for the "current_limit" field.</summary>
        public const int CurrentLimitFieldNumber = 2;
        private global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit currentLimit_;
        /// <summary>
        /// The current limit as configured by the server. Useful for debugging, etc.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit CurrentLimit {
          get { return currentLimit_; }
          set {
            currentLimit_ = value;
          }
        }

        /// <summary>Field number for the "limit_remaining" field.</summary>
        public const int LimitRemainingFieldNumber = 3;
        private uint limitRemaining_;
        /// <summary>
        /// The limit remaining in the current time unit.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint LimitRemaining {
          get { return limitRemaining_; }
          set {
            limitRemaining_ = value;
          }
        }

        /// <summary>Field number for the "duration_until_reset" field.</summary>
        public const int DurationUntilResetFieldNumber = 4;
        private global::Google.Protobuf.WellKnownTypes.Duration durationUntilReset_;
        /// <summary>
        /// Duration until reset of the current limit window.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Duration DurationUntilReset {
          get { return durationUntilReset_; }
          set {
            durationUntilReset_ = value;
          }
        }

        /// <summary>Field number for the "quota" field.</summary>
        public const int QuotaFieldNumber = 5;
        private global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota quota_;
        /// <summary>
        /// Quota is available for a request if its descriptor set has cached quota available for all
        /// descriptors.
        /// This is for each individual descriptor in the descriptor set. The client will perform matches for each individual descriptor against available per-descriptor quota.
        ///
        /// If quota is available, a RLS request will not be made and the quota will be reduced by 1 for
        /// all matching descriptors.
        ///
        /// If there is not sufficient quota, there are three cases:
        /// 1. A cached entry exists for a RLS descriptor that is out-of-quota, but not expired.
        ///    In this case, the request will be treated as OVER_LIMIT.
        /// 2. Some RLS descriptors have a cached entry that has valid quota but some RLS descriptors
        ///    have no cached entry. This will trigger a new RLS request.
        ///    When the result is returned, a single unit will be consumed from the quota for all
        ///    matching descriptors.
        ///    If the server did not provide a quota, such as the quota message is empty for some of
        ///    the descriptors, then the request admission is determined by the
        ///    :ref:`overall_code &lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.overall_code>`.
        /// 3. All RLS descriptors lack a cached entry, this will trigger a new RLS request,
        ///    When the result is returned, a single unit will be consumed from the quota for all
        ///    matching descriptors.
        ///    If the server did not provide a quota, such as the quota message is empty for some of
        ///    the descriptors, then the request admission is determined by the
        ///    :ref:`overall_code &lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.overall_code>`.
        /// [#not-implemented-hide:]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota Quota {
          get { return quota_; }
          set {
            quota_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DescriptorStatus);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DescriptorStatus other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Code != other.Code) return false;
          if (!object.Equals(CurrentLimit, other.CurrentLimit)) return false;
          if (LimitRemaining != other.LimitRemaining) return false;
          if (!object.Equals(DurationUntilReset, other.DurationUntilReset)) return false;
          if (!object.Equals(Quota, other.Quota)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Code != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown) hash ^= Code.GetHashCode();
          if (currentLimit_ != null) hash ^= CurrentLimit.GetHashCode();
          if (LimitRemaining != 0) hash ^= LimitRemaining.GetHashCode();
          if (durationUntilReset_ != null) hash ^= DurationUntilReset.GetHashCode();
          if (quota_ != null) hash ^= Quota.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Code != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Code);
          }
          if (currentLimit_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(CurrentLimit);
          }
          if (LimitRemaining != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(LimitRemaining);
          }
          if (durationUntilReset_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(DurationUntilReset);
          }
          if (quota_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(Quota);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Code != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Code);
          }
          if (currentLimit_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(CurrentLimit);
          }
          if (LimitRemaining != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(LimitRemaining);
          }
          if (durationUntilReset_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(DurationUntilReset);
          }
          if (quota_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(Quota);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Code != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
          }
          if (currentLimit_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentLimit);
          }
          if (LimitRemaining != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LimitRemaining);
          }
          if (durationUntilReset_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DurationUntilReset);
          }
          if (quota_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quota);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DescriptorStatus other) {
          if (other == null) {
            return;
          }
          if (other.Code != global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code.Unknown) {
            Code = other.Code;
          }
          if (other.currentLimit_ != null) {
            if (currentLimit_ == null) {
              CurrentLimit = new global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit();
            }
            CurrentLimit.MergeFrom(other.CurrentLimit);
          }
          if (other.LimitRemaining != 0) {
            LimitRemaining = other.LimitRemaining;
          }
          if (other.durationUntilReset_ != null) {
            if (durationUntilReset_ == null) {
              DurationUntilReset = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            DurationUntilReset.MergeFrom(other.DurationUntilReset);
          }
          if (other.quota_ != null) {
            if (quota_ == null) {
              Quota = new global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota();
            }
            Quota.MergeFrom(other.Quota);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Code = (global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code) input.ReadEnum();
                break;
              }
              case 18: {
                if (currentLimit_ == null) {
                  CurrentLimit = new global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit();
                }
                input.ReadMessage(CurrentLimit);
                break;
              }
              case 24: {
                LimitRemaining = input.ReadUInt32();
                break;
              }
              case 34: {
                if (durationUntilReset_ == null) {
                  DurationUntilReset = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(DurationUntilReset);
                break;
              }
              case 42: {
                if (quota_ == null) {
                  Quota = new global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota();
                }
                input.ReadMessage(Quota);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Code = (global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Code) input.ReadEnum();
                break;
              }
              case 18: {
                if (currentLimit_ == null) {
                  CurrentLimit = new global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.RateLimit();
                }
                input.ReadMessage(CurrentLimit);
                break;
              }
              case 24: {
                LimitRemaining = input.ReadUInt32();
                break;
              }
              case 34: {
                if (durationUntilReset_ == null) {
                  DurationUntilReset = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(DurationUntilReset);
                break;
              }
              case 42: {
                if (quota_ == null) {
                  Quota = new global::Envoy.Service.Ratelimit.V3.RateLimitResponse.Types.Quota();
                }
                input.ReadMessage(Quota);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
