// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/service/discovery/v3/discovery.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Service.Discovery.V3 {

  /// <summary>Holder for reflection information generated from envoy/service/discovery/v3/discovery.proto</summary>
  public static partial class DiscoveryReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/service/discovery/v3/discovery.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DiscoveryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiplbnZveS9zZXJ2aWNlL2Rpc2NvdmVyeS92My9kaXNjb3ZlcnkucHJvdG8S",
            "GmVudm95LnNlcnZpY2UuZGlzY292ZXJ5LnYzGh9lbnZveS9jb25maWcvY29y",
            "ZS92My9iYXNlLnByb3RvGhlnb29nbGUvcHJvdG9idWYvYW55LnByb3RvGh5n",
            "b29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8aF2dvb2dsZS9ycGMvc3Rh",
            "dHVzLnByb3RvGh11ZHBhL2Fubm90YXRpb25zL3N0YXR1cy5wcm90bxohdWRw",
            "YS9hbm5vdGF0aW9ucy92ZXJzaW9uaW5nLnByb3RvIuQBChBEaXNjb3ZlcnlS",
            "ZXF1ZXN0EhQKDHZlcnNpb25faW5mbxgBIAEoCRIoCgRub2RlGAIgASgLMhou",
            "ZW52b3kuY29uZmlnLmNvcmUudjMuTm9kZRIWCg5yZXNvdXJjZV9uYW1lcxgD",
            "IAMoCRIQCgh0eXBlX3VybBgEIAEoCRIWCg5yZXNwb25zZV9ub25jZRgFIAEo",
            "CRIoCgxlcnJvcl9kZXRhaWwYBiABKAsyEi5nb29nbGUucnBjLlN0YXR1czok",
            "msWIHh8KHWVudm95LmFwaS52Mi5EaXNjb3ZlcnlSZXF1ZXN0IuUBChFEaXNj",
            "b3ZlcnlSZXNwb25zZRIUCgx2ZXJzaW9uX2luZm8YASABKAkSJwoJcmVzb3Vy",
            "Y2VzGAIgAygLMhQuZ29vZ2xlLnByb3RvYnVmLkFueRIOCgZjYW5hcnkYAyAB",
            "KAgSEAoIdHlwZV91cmwYBCABKAkSDQoFbm9uY2UYBSABKAkSOQoNY29udHJv",
            "bF9wbGFuZRgGIAEoCzIiLmVudm95LmNvbmZpZy5jb3JlLnYzLkNvbnRyb2xQ",
            "bGFuZTolmsWIHiAKHmVudm95LmFwaS52Mi5EaXNjb3ZlcnlSZXNwb25zZSK5",
            "AwoVRGVsdGFEaXNjb3ZlcnlSZXF1ZXN0EigKBG5vZGUYASABKAsyGi5lbnZv",
            "eS5jb25maWcuY29yZS52My5Ob2RlEhAKCHR5cGVfdXJsGAIgASgJEiAKGHJl",
            "c291cmNlX25hbWVzX3N1YnNjcmliZRgDIAMoCRIiChpyZXNvdXJjZV9uYW1l",
            "c191bnN1YnNjcmliZRgEIAMoCRJxChlpbml0aWFsX3Jlc291cmNlX3ZlcnNp",
            "b25zGAUgAygLMk4uZW52b3kuc2VydmljZS5kaXNjb3ZlcnkudjMuRGVsdGFE",
            "aXNjb3ZlcnlSZXF1ZXN0LkluaXRpYWxSZXNvdXJjZVZlcnNpb25zRW50cnkS",
            "FgoOcmVzcG9uc2Vfbm9uY2UYBiABKAkSKAoMZXJyb3JfZGV0YWlsGAcgASgL",
            "MhIuZ29vZ2xlLnJwYy5TdGF0dXMaPgocSW5pdGlhbFJlc291cmNlVmVyc2lv",
            "bnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBOimaxYge",
            "JAoiZW52b3kuYXBpLnYyLkRlbHRhRGlzY292ZXJ5UmVxdWVzdCKRAgoWRGVs",
            "dGFEaXNjb3ZlcnlSZXNwb25zZRIbChNzeXN0ZW1fdmVyc2lvbl9pbmZvGAEg",
            "ASgJEjcKCXJlc291cmNlcxgCIAMoCzIkLmVudm95LnNlcnZpY2UuZGlzY292",
            "ZXJ5LnYzLlJlc291cmNlEhAKCHR5cGVfdXJsGAQgASgJEhkKEXJlbW92ZWRf",
            "cmVzb3VyY2VzGAYgAygJEg0KBW5vbmNlGAUgASgJEjkKDWNvbnRyb2xfcGxh",
            "bmUYByABKAsyIi5lbnZveS5jb25maWcuY29yZS52My5Db250cm9sUGxhbmU6",
            "KprFiB4lCiNlbnZveS5hcGkudjIuRGVsdGFEaXNjb3ZlcnlSZXNwb25zZSKY",
            "AgoIUmVzb3VyY2USDAoEbmFtZRgDIAEoCRIPCgdhbGlhc2VzGAQgAygJEg8K",
            "B3ZlcnNpb24YASABKAkSJgoIcmVzb3VyY2UYAiABKAsyFC5nb29nbGUucHJv",
            "dG9idWYuQW55EiYKA3R0bBgGIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJh",
            "dGlvbhJICg1jYWNoZV9jb250cm9sGAcgASgLMjEuZW52b3kuc2VydmljZS5k",
            "aXNjb3ZlcnkudjMuUmVzb3VyY2UuQ2FjaGVDb250cm9sGiQKDENhY2hlQ29u",
            "dHJvbBIUCgxkb19ub3RfY2FjaGUYASABKAg6HJrFiB4XChVlbnZveS5hcGku",
            "djIuUmVzb3VyY2VCkwEKKGlvLmVudm95cHJveHkuZW52b3kuc2VydmljZS5k",
            "aXNjb3ZlcnkudjNCDkRpc2NvdmVyeVByb3RvUAFaTWdpdGh1Yi5jb20vZW52",
            "b3lwcm94eS9nby1jb250cm9sLXBsYW5lL2Vudm95L3NlcnZpY2UvZGlzY292",
            "ZXJ5L3YzO2Rpc2NvdmVyeXYzuoDI0QYCEAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Core.V3.BaseReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Udpa.Annotations.VersioningReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Discovery.V3.DiscoveryRequest), global::Envoy.Service.Discovery.V3.DiscoveryRequest.Parser, new[]{ "VersionInfo", "Node", "ResourceNames", "TypeUrl", "ResponseNonce", "ErrorDetail" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Discovery.V3.DiscoveryResponse), global::Envoy.Service.Discovery.V3.DiscoveryResponse.Parser, new[]{ "VersionInfo", "Resources", "Canary", "TypeUrl", "Nonce", "ControlPlane" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Discovery.V3.DeltaDiscoveryRequest), global::Envoy.Service.Discovery.V3.DeltaDiscoveryRequest.Parser, new[]{ "Node", "TypeUrl", "ResourceNamesSubscribe", "ResourceNamesUnsubscribe", "InitialResourceVersions", "ResponseNonce", "ErrorDetail" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Discovery.V3.DeltaDiscoveryResponse), global::Envoy.Service.Discovery.V3.DeltaDiscoveryResponse.Parser, new[]{ "SystemVersionInfo", "Resources", "TypeUrl", "RemovedResources", "Nonce", "ControlPlane" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Discovery.V3.Resource), global::Envoy.Service.Discovery.V3.Resource.Parser, new[]{ "Name", "Aliases", "Version", "Resource_", "Ttl", "CacheControl" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.Discovery.V3.Resource.Types.CacheControl), global::Envoy.Service.Discovery.V3.Resource.Types.CacheControl.Parser, new[]{ "DoNotCache" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A DiscoveryRequest requests a set of versioned resources of the same type for
  /// a given Envoy node on some API.
  /// [#next-free-field: 7]
  /// </summary>
  public sealed partial class DiscoveryRequest : pb::IMessage<DiscoveryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiscoveryRequest> _parser = new pb::MessageParser<DiscoveryRequest>(() => new DiscoveryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DiscoveryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.Discovery.V3.DiscoveryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscoveryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscoveryRequest(DiscoveryRequest other) : this() {
      versionInfo_ = other.versionInfo_;
      node_ = other.node_ != null ? other.node_.Clone() : null;
      resourceNames_ = other.resourceNames_.Clone();
      typeUrl_ = other.typeUrl_;
      responseNonce_ = other.responseNonce_;
      errorDetail_ = other.errorDetail_ != null ? other.errorDetail_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscoveryRequest Clone() {
      return new DiscoveryRequest(this);
    }

    /// <summary>Field number for the "version_info" field.</summary>
    public const int VersionInfoFieldNumber = 1;
    private string versionInfo_ = "";
    /// <summary>
    /// The version_info provided in the request messages will be the version_info
    /// received with the most recent successfully processed response or empty on
    /// the first request. It is expected that no new request is sent after a
    /// response is received until the Envoy instance is ready to ACK/NACK the new
    /// configuration. ACK/NACK takes place by returning the new API config version
    /// as applied or the previous API config version respectively. Each type_url
    /// (see below) has an independent version associated with it.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VersionInfo {
      get { return versionInfo_; }
      set {
        versionInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 2;
    private global::Envoy.Config.Core.V3.Node node_;
    /// <summary>
    /// The node making the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.Node Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    /// <summary>Field number for the "resource_names" field.</summary>
    public const int ResourceNamesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_resourceNames_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> resourceNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of resources to subscribe to, e.g. list of cluster names or a route
    /// configuration name. If this is empty, all resources for the API are
    /// returned. LDS/CDS may have empty resource_names, which will cause all
    /// resources for the Envoy instance to be returned. The LDS and CDS responses
    /// will then imply a number of resources that need to be fetched via EDS/RDS,
    /// which will be explicitly enumerated in resource_names.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ResourceNames {
      get { return resourceNames_; }
    }

    /// <summary>Field number for the "type_url" field.</summary>
    public const int TypeUrlFieldNumber = 4;
    private string typeUrl_ = "";
    /// <summary>
    /// Type of the resource that is being requested, e.g.
    /// "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
    /// in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
    /// required for ADS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TypeUrl {
      get { return typeUrl_; }
      set {
        typeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response_nonce" field.</summary>
    public const int ResponseNonceFieldNumber = 5;
    private string responseNonce_ = "";
    /// <summary>
    /// nonce corresponding to DiscoveryResponse being ACK/NACKed. See above
    /// discussion on version_info and the DiscoveryResponse nonce comment. This
    /// may be empty only if 1) this is a non-persistent-stream xDS such as HTTP,
    /// or 2) the client has not yet accepted an update in this xDS stream (unlike
    /// delta, where it is populated only for new explicit ACKs).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResponseNonce {
      get { return responseNonce_; }
      set {
        responseNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error_detail" field.</summary>
    public const int ErrorDetailFieldNumber = 6;
    private global::Google.Rpc.Status errorDetail_;
    /// <summary>
    /// This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_v3_api_msg_service.discovery.v3.DiscoveryResponse>`
    /// failed to update configuration. The *message* field in *error_details* provides the Envoy
    /// internal exception related to the failure. It is only intended for consumption during manual
    /// debugging, the string provided is not guaranteed to be stable across Envoy versions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Rpc.Status ErrorDetail {
      get { return errorDetail_; }
      set {
        errorDetail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DiscoveryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DiscoveryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionInfo != other.VersionInfo) return false;
      if (!object.Equals(Node, other.Node)) return false;
      if(!resourceNames_.Equals(other.resourceNames_)) return false;
      if (TypeUrl != other.TypeUrl) return false;
      if (ResponseNonce != other.ResponseNonce) return false;
      if (!object.Equals(ErrorDetail, other.ErrorDetail)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VersionInfo.Length != 0) hash ^= VersionInfo.GetHashCode();
      if (node_ != null) hash ^= Node.GetHashCode();
      hash ^= resourceNames_.GetHashCode();
      if (TypeUrl.Length != 0) hash ^= TypeUrl.GetHashCode();
      if (ResponseNonce.Length != 0) hash ^= ResponseNonce.GetHashCode();
      if (errorDetail_ != null) hash ^= ErrorDetail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VersionInfo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VersionInfo);
      }
      if (node_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Node);
      }
      resourceNames_.WriteTo(output, _repeated_resourceNames_codec);
      if (TypeUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TypeUrl);
      }
      if (ResponseNonce.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ResponseNonce);
      }
      if (errorDetail_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ErrorDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VersionInfo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VersionInfo);
      }
      if (node_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Node);
      }
      resourceNames_.WriteTo(ref output, _repeated_resourceNames_codec);
      if (TypeUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TypeUrl);
      }
      if (ResponseNonce.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ResponseNonce);
      }
      if (errorDetail_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ErrorDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VersionInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionInfo);
      }
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      size += resourceNames_.CalculateSize(_repeated_resourceNames_codec);
      if (TypeUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeUrl);
      }
      if (ResponseNonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseNonce);
      }
      if (errorDetail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorDetail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DiscoveryRequest other) {
      if (other == null) {
        return;
      }
      if (other.VersionInfo.Length != 0) {
        VersionInfo = other.VersionInfo;
      }
      if (other.node_ != null) {
        if (node_ == null) {
          Node = new global::Envoy.Config.Core.V3.Node();
        }
        Node.MergeFrom(other.Node);
      }
      resourceNames_.Add(other.resourceNames_);
      if (other.TypeUrl.Length != 0) {
        TypeUrl = other.TypeUrl;
      }
      if (other.ResponseNonce.Length != 0) {
        ResponseNonce = other.ResponseNonce;
      }
      if (other.errorDetail_ != null) {
        if (errorDetail_ == null) {
          ErrorDetail = new global::Google.Rpc.Status();
        }
        ErrorDetail.MergeFrom(other.ErrorDetail);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VersionInfo = input.ReadString();
            break;
          }
          case 18: {
            if (node_ == null) {
              Node = new global::Envoy.Config.Core.V3.Node();
            }
            input.ReadMessage(Node);
            break;
          }
          case 26: {
            resourceNames_.AddEntriesFrom(input, _repeated_resourceNames_codec);
            break;
          }
          case 34: {
            TypeUrl = input.ReadString();
            break;
          }
          case 42: {
            ResponseNonce = input.ReadString();
            break;
          }
          case 50: {
            if (errorDetail_ == null) {
              ErrorDetail = new global::Google.Rpc.Status();
            }
            input.ReadMessage(ErrorDetail);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VersionInfo = input.ReadString();
            break;
          }
          case 18: {
            if (node_ == null) {
              Node = new global::Envoy.Config.Core.V3.Node();
            }
            input.ReadMessage(Node);
            break;
          }
          case 26: {
            resourceNames_.AddEntriesFrom(ref input, _repeated_resourceNames_codec);
            break;
          }
          case 34: {
            TypeUrl = input.ReadString();
            break;
          }
          case 42: {
            ResponseNonce = input.ReadString();
            break;
          }
          case 50: {
            if (errorDetail_ == null) {
              ErrorDetail = new global::Google.Rpc.Status();
            }
            input.ReadMessage(ErrorDetail);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [#next-free-field: 7]
  /// </summary>
  public sealed partial class DiscoveryResponse : pb::IMessage<DiscoveryResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiscoveryResponse> _parser = new pb::MessageParser<DiscoveryResponse>(() => new DiscoveryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DiscoveryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.Discovery.V3.DiscoveryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscoveryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscoveryResponse(DiscoveryResponse other) : this() {
      versionInfo_ = other.versionInfo_;
      resources_ = other.resources_.Clone();
      canary_ = other.canary_;
      typeUrl_ = other.typeUrl_;
      nonce_ = other.nonce_;
      controlPlane_ = other.controlPlane_ != null ? other.controlPlane_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscoveryResponse Clone() {
      return new DiscoveryResponse(this);
    }

    /// <summary>Field number for the "version_info" field.</summary>
    public const int VersionInfoFieldNumber = 1;
    private string versionInfo_ = "";
    /// <summary>
    /// The version of the response data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VersionInfo {
      get { return versionInfo_; }
      set {
        versionInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> resources_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    /// <summary>
    /// The response resources. These resources are typed and depend on the API being called.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Resources {
      get { return resources_; }
    }

    /// <summary>Field number for the "canary" field.</summary>
    public const int CanaryFieldNumber = 3;
    private bool canary_;
    /// <summary>
    /// [#not-implemented-hide:]
    /// Canary is used to support two Envoy command line flags:
    ///
    /// * --terminate-on-canary-transition-failure. When set, Envoy is able to
    ///   terminate if it detects that configuration is stuck at canary. Consider
    ///   this example sequence of updates:
    ///   - Management server applies a canary config successfully.
    ///   - Management server rolls back to a production config.
    ///   - Envoy rejects the new production config.
    ///   Since there is no sensible way to continue receiving configuration
    ///   updates, Envoy will then terminate and apply production config from a
    ///   clean slate.
    /// * --dry-run-canary. When set, a canary response will never be applied, only
    ///   validated via a dry run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Canary {
      get { return canary_; }
      set {
        canary_ = value;
      }
    }

    /// <summary>Field number for the "type_url" field.</summary>
    public const int TypeUrlFieldNumber = 4;
    private string typeUrl_ = "";
    /// <summary>
    /// Type URL for resources. Identifies the xDS API when muxing over ADS.
    /// Must be consistent with the type_url in the 'resources' repeated Any (if non-empty).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TypeUrl {
      get { return typeUrl_; }
      set {
        typeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 5;
    private string nonce_ = "";
    /// <summary>
    /// For gRPC based subscriptions, the nonce provides a way to explicitly ack a
    /// specific DiscoveryResponse in a following DiscoveryRequest. Additional
    /// messages may have been sent by Envoy to the management server for the
    /// previous version on the stream prior to this DiscoveryResponse, that were
    /// unprocessed at response send time. The nonce allows the management server
    /// to ignore any further DiscoveryRequests for the previous version until a
    /// DiscoveryRequest bearing the nonce. The nonce is optional and is not
    /// required for non-stream based xDS implementations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nonce {
      get { return nonce_; }
      set {
        nonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "control_plane" field.</summary>
    public const int ControlPlaneFieldNumber = 6;
    private global::Envoy.Config.Core.V3.ControlPlane controlPlane_;
    /// <summary>
    /// The control plane instance that sent the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.ControlPlane ControlPlane {
      get { return controlPlane_; }
      set {
        controlPlane_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DiscoveryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DiscoveryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionInfo != other.VersionInfo) return false;
      if(!resources_.Equals(other.resources_)) return false;
      if (Canary != other.Canary) return false;
      if (TypeUrl != other.TypeUrl) return false;
      if (Nonce != other.Nonce) return false;
      if (!object.Equals(ControlPlane, other.ControlPlane)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VersionInfo.Length != 0) hash ^= VersionInfo.GetHashCode();
      hash ^= resources_.GetHashCode();
      if (Canary != false) hash ^= Canary.GetHashCode();
      if (TypeUrl.Length != 0) hash ^= TypeUrl.GetHashCode();
      if (Nonce.Length != 0) hash ^= Nonce.GetHashCode();
      if (controlPlane_ != null) hash ^= ControlPlane.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VersionInfo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VersionInfo);
      }
      resources_.WriteTo(output, _repeated_resources_codec);
      if (Canary != false) {
        output.WriteRawTag(24);
        output.WriteBool(Canary);
      }
      if (TypeUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TypeUrl);
      }
      if (Nonce.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Nonce);
      }
      if (controlPlane_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ControlPlane);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VersionInfo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VersionInfo);
      }
      resources_.WriteTo(ref output, _repeated_resources_codec);
      if (Canary != false) {
        output.WriteRawTag(24);
        output.WriteBool(Canary);
      }
      if (TypeUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TypeUrl);
      }
      if (Nonce.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Nonce);
      }
      if (controlPlane_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ControlPlane);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VersionInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionInfo);
      }
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (Canary != false) {
        size += 1 + 1;
      }
      if (TypeUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeUrl);
      }
      if (Nonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nonce);
      }
      if (controlPlane_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlPlane);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DiscoveryResponse other) {
      if (other == null) {
        return;
      }
      if (other.VersionInfo.Length != 0) {
        VersionInfo = other.VersionInfo;
      }
      resources_.Add(other.resources_);
      if (other.Canary != false) {
        Canary = other.Canary;
      }
      if (other.TypeUrl.Length != 0) {
        TypeUrl = other.TypeUrl;
      }
      if (other.Nonce.Length != 0) {
        Nonce = other.Nonce;
      }
      if (other.controlPlane_ != null) {
        if (controlPlane_ == null) {
          ControlPlane = new global::Envoy.Config.Core.V3.ControlPlane();
        }
        ControlPlane.MergeFrom(other.ControlPlane);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VersionInfo = input.ReadString();
            break;
          }
          case 18: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
          case 24: {
            Canary = input.ReadBool();
            break;
          }
          case 34: {
            TypeUrl = input.ReadString();
            break;
          }
          case 42: {
            Nonce = input.ReadString();
            break;
          }
          case 50: {
            if (controlPlane_ == null) {
              ControlPlane = new global::Envoy.Config.Core.V3.ControlPlane();
            }
            input.ReadMessage(ControlPlane);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VersionInfo = input.ReadString();
            break;
          }
          case 18: {
            resources_.AddEntriesFrom(ref input, _repeated_resources_codec);
            break;
          }
          case 24: {
            Canary = input.ReadBool();
            break;
          }
          case 34: {
            TypeUrl = input.ReadString();
            break;
          }
          case 42: {
            Nonce = input.ReadString();
            break;
          }
          case 50: {
            if (controlPlane_ == null) {
              ControlPlane = new global::Envoy.Config.Core.V3.ControlPlane();
            }
            input.ReadMessage(ControlPlane);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DeltaDiscoveryRequest and DeltaDiscoveryResponse are used in a new gRPC
  /// endpoint for Delta xDS.
  ///
  /// With Delta xDS, the DeltaDiscoveryResponses do not need to include a full
  /// snapshot of the tracked resources. Instead, DeltaDiscoveryResponses are a
  /// diff to the state of a xDS client.
  /// In Delta XDS there are per-resource versions, which allow tracking state at
  /// the resource granularity.
  /// An xDS Delta session is always in the context of a gRPC bidirectional
  /// stream. This allows the xDS server to keep track of the state of xDS clients
  /// connected to it.
  ///
  /// In Delta xDS the nonce field is required and used to pair
  /// DeltaDiscoveryResponse to a DeltaDiscoveryRequest ACK or NACK.
  /// Optionally, a response message level system_version_info is present for
  /// debugging purposes only.
  ///
  /// DeltaDiscoveryRequest plays two independent roles. Any DeltaDiscoveryRequest
  /// can be either or both of: [1] informing the server of what resources the
  /// client has gained/lost interest in (using resource_names_subscribe and
  /// resource_names_unsubscribe), or [2] (N)ACKing an earlier resource update from
  /// the server (using response_nonce, with presence of error_detail making it a NACK).
  /// Additionally, the first message (for a given type_url) of a reconnected gRPC stream
  /// has a third role: informing the server of the resources (and their versions)
  /// that the client already possesses, using the initial_resource_versions field.
  ///
  /// As with state-of-the-world, when multiple resource types are multiplexed (ADS),
  /// all requests/acknowledgments/updates are logically walled off by type_url:
  /// a Cluster ACK exists in a completely separate world from a prior Route NACK.
  /// In particular, initial_resource_versions being sent at the "start" of every
  /// gRPC stream actually entails a message for each type_url, each with its own
  /// initial_resource_versions.
  /// [#next-free-field: 8]
  /// </summary>
  public sealed partial class DeltaDiscoveryRequest : pb::IMessage<DeltaDiscoveryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeltaDiscoveryRequest> _parser = new pb::MessageParser<DeltaDiscoveryRequest>(() => new DeltaDiscoveryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeltaDiscoveryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.Discovery.V3.DiscoveryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeltaDiscoveryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeltaDiscoveryRequest(DeltaDiscoveryRequest other) : this() {
      node_ = other.node_ != null ? other.node_.Clone() : null;
      typeUrl_ = other.typeUrl_;
      resourceNamesSubscribe_ = other.resourceNamesSubscribe_.Clone();
      resourceNamesUnsubscribe_ = other.resourceNamesUnsubscribe_.Clone();
      initialResourceVersions_ = other.initialResourceVersions_.Clone();
      responseNonce_ = other.responseNonce_;
      errorDetail_ = other.errorDetail_ != null ? other.errorDetail_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeltaDiscoveryRequest Clone() {
      return new DeltaDiscoveryRequest(this);
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 1;
    private global::Envoy.Config.Core.V3.Node node_;
    /// <summary>
    /// The node making the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.Node Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    /// <summary>Field number for the "type_url" field.</summary>
    public const int TypeUrlFieldNumber = 2;
    private string typeUrl_ = "";
    /// <summary>
    /// Type of the resource that is being requested, e.g.
    /// "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This does not need to be set if
    /// resources are only referenced via *xds_resource_subscribe* and
    /// *xds_resources_unsubscribe*.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TypeUrl {
      get { return typeUrl_; }
      set {
        typeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource_names_subscribe" field.</summary>
    public const int ResourceNamesSubscribeFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_resourceNamesSubscribe_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> resourceNamesSubscribe_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// DeltaDiscoveryRequests allow the client to add or remove individual
    /// resources to the set of tracked resources in the context of a stream.
    /// All resource names in the resource_names_subscribe list are added to the
    /// set of tracked resources and all resource names in the resource_names_unsubscribe
    /// list are removed from the set of tracked resources.
    ///
    /// *Unlike* state-of-the-world xDS, an empty resource_names_subscribe or
    /// resource_names_unsubscribe list simply means that no resources are to be
    /// added or removed to the resource list.
    /// *Like* state-of-the-world xDS, the server must send updates for all tracked
    /// resources, but can also send updates for resources the client has not subscribed to.
    ///
    /// NOTE: the server must respond with all resources listed in resource_names_subscribe,
    /// even if it believes the client has the most recent version of them. The reason:
    /// the client may have dropped them, but then regained interest before it had a chance
    /// to send the unsubscribe message. See DeltaSubscriptionStateTest.RemoveThenAdd.
    ///
    /// These two fields can be set in any DeltaDiscoveryRequest, including ACKs
    /// and initial_resource_versions.
    ///
    /// A list of Resource names to add to the list of tracked resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ResourceNamesSubscribe {
      get { return resourceNamesSubscribe_; }
    }

    /// <summary>Field number for the "resource_names_unsubscribe" field.</summary>
    public const int ResourceNamesUnsubscribeFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_resourceNamesUnsubscribe_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> resourceNamesUnsubscribe_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of Resource names to remove from the list of tracked resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ResourceNamesUnsubscribe {
      get { return resourceNamesUnsubscribe_; }
    }

    /// <summary>Field number for the "initial_resource_versions" field.</summary>
    public const int InitialResourceVersionsFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_initialResourceVersions_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<string, string> initialResourceVersions_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Informs the server of the versions of the resources the xDS client knows of, to enable the
    /// client to continue the same logical xDS session even in the face of gRPC stream reconnection.
    /// It will not be populated: [1] in the very first stream of a session, since the client will
    /// not yet have any resources,  [2] in any message after the first in a stream (for a given
    /// type_url), since the server will already be correctly tracking the client's state.
    /// (In ADS, the first message *of each type_url* of a reconnected stream populates this map.)
    /// The map's keys are names of xDS resources known to the xDS client.
    /// The map's values are opaque resource versions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> InitialResourceVersions {
      get { return initialResourceVersions_; }
    }

    /// <summary>Field number for the "response_nonce" field.</summary>
    public const int ResponseNonceFieldNumber = 6;
    private string responseNonce_ = "";
    /// <summary>
    /// When the DeltaDiscoveryRequest is a ACK or NACK message in response
    /// to a previous DeltaDiscoveryResponse, the response_nonce must be the
    /// nonce in the DeltaDiscoveryResponse.
    /// Otherwise (unlike in DiscoveryRequest) response_nonce must be omitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResponseNonce {
      get { return responseNonce_; }
      set {
        responseNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error_detail" field.</summary>
    public const int ErrorDetailFieldNumber = 7;
    private global::Google.Rpc.Status errorDetail_;
    /// <summary>
    /// This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_v3_api_msg_service.discovery.v3.DiscoveryResponse>`
    /// failed to update configuration. The *message* field in *error_details*
    /// provides the Envoy internal exception related to the failure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Rpc.Status ErrorDetail {
      get { return errorDetail_; }
      set {
        errorDetail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeltaDiscoveryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeltaDiscoveryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Node, other.Node)) return false;
      if (TypeUrl != other.TypeUrl) return false;
      if(!resourceNamesSubscribe_.Equals(other.resourceNamesSubscribe_)) return false;
      if(!resourceNamesUnsubscribe_.Equals(other.resourceNamesUnsubscribe_)) return false;
      if (!InitialResourceVersions.Equals(other.InitialResourceVersions)) return false;
      if (ResponseNonce != other.ResponseNonce) return false;
      if (!object.Equals(ErrorDetail, other.ErrorDetail)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (node_ != null) hash ^= Node.GetHashCode();
      if (TypeUrl.Length != 0) hash ^= TypeUrl.GetHashCode();
      hash ^= resourceNamesSubscribe_.GetHashCode();
      hash ^= resourceNamesUnsubscribe_.GetHashCode();
      hash ^= InitialResourceVersions.GetHashCode();
      if (ResponseNonce.Length != 0) hash ^= ResponseNonce.GetHashCode();
      if (errorDetail_ != null) hash ^= ErrorDetail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (node_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Node);
      }
      if (TypeUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TypeUrl);
      }
      resourceNamesSubscribe_.WriteTo(output, _repeated_resourceNamesSubscribe_codec);
      resourceNamesUnsubscribe_.WriteTo(output, _repeated_resourceNamesUnsubscribe_codec);
      initialResourceVersions_.WriteTo(output, _map_initialResourceVersions_codec);
      if (ResponseNonce.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ResponseNonce);
      }
      if (errorDetail_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ErrorDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (node_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Node);
      }
      if (TypeUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TypeUrl);
      }
      resourceNamesSubscribe_.WriteTo(ref output, _repeated_resourceNamesSubscribe_codec);
      resourceNamesUnsubscribe_.WriteTo(ref output, _repeated_resourceNamesUnsubscribe_codec);
      initialResourceVersions_.WriteTo(ref output, _map_initialResourceVersions_codec);
      if (ResponseNonce.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ResponseNonce);
      }
      if (errorDetail_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ErrorDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      if (TypeUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeUrl);
      }
      size += resourceNamesSubscribe_.CalculateSize(_repeated_resourceNamesSubscribe_codec);
      size += resourceNamesUnsubscribe_.CalculateSize(_repeated_resourceNamesUnsubscribe_codec);
      size += initialResourceVersions_.CalculateSize(_map_initialResourceVersions_codec);
      if (ResponseNonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseNonce);
      }
      if (errorDetail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorDetail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeltaDiscoveryRequest other) {
      if (other == null) {
        return;
      }
      if (other.node_ != null) {
        if (node_ == null) {
          Node = new global::Envoy.Config.Core.V3.Node();
        }
        Node.MergeFrom(other.Node);
      }
      if (other.TypeUrl.Length != 0) {
        TypeUrl = other.TypeUrl;
      }
      resourceNamesSubscribe_.Add(other.resourceNamesSubscribe_);
      resourceNamesUnsubscribe_.Add(other.resourceNamesUnsubscribe_);
      initialResourceVersions_.Add(other.initialResourceVersions_);
      if (other.ResponseNonce.Length != 0) {
        ResponseNonce = other.ResponseNonce;
      }
      if (other.errorDetail_ != null) {
        if (errorDetail_ == null) {
          ErrorDetail = new global::Google.Rpc.Status();
        }
        ErrorDetail.MergeFrom(other.ErrorDetail);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (node_ == null) {
              Node = new global::Envoy.Config.Core.V3.Node();
            }
            input.ReadMessage(Node);
            break;
          }
          case 18: {
            TypeUrl = input.ReadString();
            break;
          }
          case 26: {
            resourceNamesSubscribe_.AddEntriesFrom(input, _repeated_resourceNamesSubscribe_codec);
            break;
          }
          case 34: {
            resourceNamesUnsubscribe_.AddEntriesFrom(input, _repeated_resourceNamesUnsubscribe_codec);
            break;
          }
          case 42: {
            initialResourceVersions_.AddEntriesFrom(input, _map_initialResourceVersions_codec);
            break;
          }
          case 50: {
            ResponseNonce = input.ReadString();
            break;
          }
          case 58: {
            if (errorDetail_ == null) {
              ErrorDetail = new global::Google.Rpc.Status();
            }
            input.ReadMessage(ErrorDetail);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (node_ == null) {
              Node = new global::Envoy.Config.Core.V3.Node();
            }
            input.ReadMessage(Node);
            break;
          }
          case 18: {
            TypeUrl = input.ReadString();
            break;
          }
          case 26: {
            resourceNamesSubscribe_.AddEntriesFrom(ref input, _repeated_resourceNamesSubscribe_codec);
            break;
          }
          case 34: {
            resourceNamesUnsubscribe_.AddEntriesFrom(ref input, _repeated_resourceNamesUnsubscribe_codec);
            break;
          }
          case 42: {
            initialResourceVersions_.AddEntriesFrom(ref input, _map_initialResourceVersions_codec);
            break;
          }
          case 50: {
            ResponseNonce = input.ReadString();
            break;
          }
          case 58: {
            if (errorDetail_ == null) {
              ErrorDetail = new global::Google.Rpc.Status();
            }
            input.ReadMessage(ErrorDetail);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [#next-free-field: 8]
  /// </summary>
  public sealed partial class DeltaDiscoveryResponse : pb::IMessage<DeltaDiscoveryResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeltaDiscoveryResponse> _parser = new pb::MessageParser<DeltaDiscoveryResponse>(() => new DeltaDiscoveryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeltaDiscoveryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.Discovery.V3.DiscoveryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeltaDiscoveryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeltaDiscoveryResponse(DeltaDiscoveryResponse other) : this() {
      systemVersionInfo_ = other.systemVersionInfo_;
      resources_ = other.resources_.Clone();
      typeUrl_ = other.typeUrl_;
      removedResources_ = other.removedResources_.Clone();
      nonce_ = other.nonce_;
      controlPlane_ = other.controlPlane_ != null ? other.controlPlane_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeltaDiscoveryResponse Clone() {
      return new DeltaDiscoveryResponse(this);
    }

    /// <summary>Field number for the "system_version_info" field.</summary>
    public const int SystemVersionInfoFieldNumber = 1;
    private string systemVersionInfo_ = "";
    /// <summary>
    /// The version of the response data (used for debugging).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SystemVersionInfo {
      get { return systemVersionInfo_; }
      set {
        systemVersionInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Service.Discovery.V3.Resource> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Service.Discovery.V3.Resource.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Service.Discovery.V3.Resource> resources_ = new pbc::RepeatedField<global::Envoy.Service.Discovery.V3.Resource>();
    /// <summary>
    /// The response resources. These are typed resources, whose types must match
    /// the type_url field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Envoy.Service.Discovery.V3.Resource> Resources {
      get { return resources_; }
    }

    /// <summary>Field number for the "type_url" field.</summary>
    public const int TypeUrlFieldNumber = 4;
    private string typeUrl_ = "";
    /// <summary>
    /// Type URL for resources. Identifies the xDS API when muxing over ADS.
    /// Must be consistent with the type_url in the Any within 'resources' if 'resources' is non-empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TypeUrl {
      get { return typeUrl_; }
      set {
        typeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "removed_resources" field.</summary>
    public const int RemovedResourcesFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_removedResources_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> removedResources_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Resources names of resources that have be deleted and to be removed from the xDS Client.
    /// Removed resources for missing resources can be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> RemovedResources {
      get { return removedResources_; }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 5;
    private string nonce_ = "";
    /// <summary>
    /// The nonce provides a way for DeltaDiscoveryRequests to uniquely
    /// reference a DeltaDiscoveryResponse when (N)ACKing. The nonce is required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nonce {
      get { return nonce_; }
      set {
        nonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "control_plane" field.</summary>
    public const int ControlPlaneFieldNumber = 7;
    private global::Envoy.Config.Core.V3.ControlPlane controlPlane_;
    /// <summary>
    /// [#not-implemented-hide:]
    /// The control plane instance that sent the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.ControlPlane ControlPlane {
      get { return controlPlane_; }
      set {
        controlPlane_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeltaDiscoveryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeltaDiscoveryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SystemVersionInfo != other.SystemVersionInfo) return false;
      if(!resources_.Equals(other.resources_)) return false;
      if (TypeUrl != other.TypeUrl) return false;
      if(!removedResources_.Equals(other.removedResources_)) return false;
      if (Nonce != other.Nonce) return false;
      if (!object.Equals(ControlPlane, other.ControlPlane)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SystemVersionInfo.Length != 0) hash ^= SystemVersionInfo.GetHashCode();
      hash ^= resources_.GetHashCode();
      if (TypeUrl.Length != 0) hash ^= TypeUrl.GetHashCode();
      hash ^= removedResources_.GetHashCode();
      if (Nonce.Length != 0) hash ^= Nonce.GetHashCode();
      if (controlPlane_ != null) hash ^= ControlPlane.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SystemVersionInfo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SystemVersionInfo);
      }
      resources_.WriteTo(output, _repeated_resources_codec);
      if (TypeUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TypeUrl);
      }
      if (Nonce.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Nonce);
      }
      removedResources_.WriteTo(output, _repeated_removedResources_codec);
      if (controlPlane_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ControlPlane);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SystemVersionInfo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SystemVersionInfo);
      }
      resources_.WriteTo(ref output, _repeated_resources_codec);
      if (TypeUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TypeUrl);
      }
      if (Nonce.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Nonce);
      }
      removedResources_.WriteTo(ref output, _repeated_removedResources_codec);
      if (controlPlane_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ControlPlane);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SystemVersionInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SystemVersionInfo);
      }
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (TypeUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeUrl);
      }
      size += removedResources_.CalculateSize(_repeated_removedResources_codec);
      if (Nonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nonce);
      }
      if (controlPlane_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlPlane);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeltaDiscoveryResponse other) {
      if (other == null) {
        return;
      }
      if (other.SystemVersionInfo.Length != 0) {
        SystemVersionInfo = other.SystemVersionInfo;
      }
      resources_.Add(other.resources_);
      if (other.TypeUrl.Length != 0) {
        TypeUrl = other.TypeUrl;
      }
      removedResources_.Add(other.removedResources_);
      if (other.Nonce.Length != 0) {
        Nonce = other.Nonce;
      }
      if (other.controlPlane_ != null) {
        if (controlPlane_ == null) {
          ControlPlane = new global::Envoy.Config.Core.V3.ControlPlane();
        }
        ControlPlane.MergeFrom(other.ControlPlane);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SystemVersionInfo = input.ReadString();
            break;
          }
          case 18: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
          case 34: {
            TypeUrl = input.ReadString();
            break;
          }
          case 42: {
            Nonce = input.ReadString();
            break;
          }
          case 50: {
            removedResources_.AddEntriesFrom(input, _repeated_removedResources_codec);
            break;
          }
          case 58: {
            if (controlPlane_ == null) {
              ControlPlane = new global::Envoy.Config.Core.V3.ControlPlane();
            }
            input.ReadMessage(ControlPlane);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SystemVersionInfo = input.ReadString();
            break;
          }
          case 18: {
            resources_.AddEntriesFrom(ref input, _repeated_resources_codec);
            break;
          }
          case 34: {
            TypeUrl = input.ReadString();
            break;
          }
          case 42: {
            Nonce = input.ReadString();
            break;
          }
          case 50: {
            removedResources_.AddEntriesFrom(ref input, _repeated_removedResources_codec);
            break;
          }
          case 58: {
            if (controlPlane_ == null) {
              ControlPlane = new global::Envoy.Config.Core.V3.ControlPlane();
            }
            input.ReadMessage(ControlPlane);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [#next-free-field: 8]
  /// </summary>
  public sealed partial class Resource : pb::IMessage<Resource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Resource> _parser = new pb::MessageParser<Resource>(() => new Resource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Resource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.Discovery.V3.DiscoveryReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resource(Resource other) : this() {
      name_ = other.name_;
      aliases_ = other.aliases_.Clone();
      version_ = other.version_;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      ttl_ = other.ttl_ != null ? other.ttl_.Clone() : null;
      cacheControl_ = other.cacheControl_ != null ? other.cacheControl_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resource Clone() {
      return new Resource(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// The resource's name, to distinguish it from others of the same type of resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aliases" field.</summary>
    public const int AliasesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_aliases_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> aliases_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The aliases are a list of other names that this resource can go by.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Aliases {
      get { return aliases_; }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    /// <summary>
    /// The resource level version. It allows xDS to track the state of individual
    /// resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int Resource_FieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any resource_;
    /// <summary>
    /// The resource being tracked.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Any Resource_ {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "ttl" field.</summary>
    public const int TtlFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Duration ttl_;
    /// <summary>
    /// Time-to-live value for the resource. For each resource, a timer is started. The timer is
    /// reset each time the resource is received with a new TTL. If the resource is received with
    /// no TTL set, the timer is removed for the resource. Upon expiration of the timer, the
    /// configuration for the resource will be removed.
    ///
    /// The TTL can be refreshed or changed by sending a response that doesn't change the resource
    /// version. In this case the resource field does not need to be populated, which allows for
    /// light-weight "heartbeat" updates to keep a resource with a TTL alive.
    ///
    /// The TTL feature is meant to support configurations that should be removed in the event of
    /// a management server failure. For example, the feature may be used for fault injection
    /// testing where the fault injection should be terminated in the event that Envoy loses contact
    /// with the management server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Ttl {
      get { return ttl_; }
      set {
        ttl_ = value;
      }
    }

    /// <summary>Field number for the "cache_control" field.</summary>
    public const int CacheControlFieldNumber = 7;
    private global::Envoy.Service.Discovery.V3.Resource.Types.CacheControl cacheControl_;
    /// <summary>
    /// Cache control properties for the resource.
    /// [#not-implemented-hide:]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Service.Discovery.V3.Resource.Types.CacheControl CacheControl {
      get { return cacheControl_; }
      set {
        cacheControl_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Resource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Resource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!aliases_.Equals(other.aliases_)) return false;
      if (Version != other.Version) return false;
      if (!object.Equals(Resource_, other.Resource_)) return false;
      if (!object.Equals(Ttl, other.Ttl)) return false;
      if (!object.Equals(CacheControl, other.CacheControl)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= aliases_.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (resource_ != null) hash ^= Resource_.GetHashCode();
      if (ttl_ != null) hash ^= Ttl.GetHashCode();
      if (cacheControl_ != null) hash ^= CacheControl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (resource_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Resource_);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      aliases_.WriteTo(output, _repeated_aliases_codec);
      if (ttl_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Ttl);
      }
      if (cacheControl_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CacheControl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (resource_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Resource_);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      aliases_.WriteTo(ref output, _repeated_aliases_codec);
      if (ttl_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Ttl);
      }
      if (cacheControl_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CacheControl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += aliases_.CalculateSize(_repeated_aliases_codec);
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource_);
      }
      if (ttl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ttl);
      }
      if (cacheControl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CacheControl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Resource other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      aliases_.Add(other.aliases_);
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource_ = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Resource_.MergeFrom(other.Resource_);
      }
      if (other.ttl_ != null) {
        if (ttl_ == null) {
          Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Ttl.MergeFrom(other.Ttl);
      }
      if (other.cacheControl_ != null) {
        if (cacheControl_ == null) {
          CacheControl = new global::Envoy.Service.Discovery.V3.Resource.Types.CacheControl();
        }
        CacheControl.MergeFrom(other.CacheControl);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 18: {
            if (resource_ == null) {
              Resource_ = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Resource_);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            aliases_.AddEntriesFrom(input, _repeated_aliases_codec);
            break;
          }
          case 50: {
            if (ttl_ == null) {
              Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Ttl);
            break;
          }
          case 58: {
            if (cacheControl_ == null) {
              CacheControl = new global::Envoy.Service.Discovery.V3.Resource.Types.CacheControl();
            }
            input.ReadMessage(CacheControl);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 18: {
            if (resource_ == null) {
              Resource_ = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Resource_);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            aliases_.AddEntriesFrom(ref input, _repeated_aliases_codec);
            break;
          }
          case 50: {
            if (ttl_ == null) {
              Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Ttl);
            break;
          }
          case 58: {
            if (cacheControl_ == null) {
              CacheControl = new global::Envoy.Service.Discovery.V3.Resource.Types.CacheControl();
            }
            input.ReadMessage(CacheControl);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Resource message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Cache control properties for the resource.
      /// [#not-implemented-hide:]
      /// </summary>
      public sealed partial class CacheControl : pb::IMessage<CacheControl>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CacheControl> _parser = new pb::MessageParser<CacheControl>(() => new CacheControl());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<CacheControl> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Service.Discovery.V3.Resource.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CacheControl() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CacheControl(CacheControl other) : this() {
          doNotCache_ = other.doNotCache_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CacheControl Clone() {
          return new CacheControl(this);
        }

        /// <summary>Field number for the "do_not_cache" field.</summary>
        public const int DoNotCacheFieldNumber = 1;
        private bool doNotCache_;
        /// <summary>
        /// If true, xDS proxies may not cache this resource.
        /// Note that this does not apply to clients other than xDS proxies, which must cache resources
        /// for their own use, regardless of the value of this field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool DoNotCache {
          get { return doNotCache_; }
          set {
            doNotCache_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as CacheControl);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(CacheControl other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DoNotCache != other.DoNotCache) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (DoNotCache != false) hash ^= DoNotCache.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (DoNotCache != false) {
            output.WriteRawTag(8);
            output.WriteBool(DoNotCache);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (DoNotCache != false) {
            output.WriteRawTag(8);
            output.WriteBool(DoNotCache);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (DoNotCache != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(CacheControl other) {
          if (other == null) {
            return;
          }
          if (other.DoNotCache != false) {
            DoNotCache = other.DoNotCache;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                DoNotCache = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                DoNotCache = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
