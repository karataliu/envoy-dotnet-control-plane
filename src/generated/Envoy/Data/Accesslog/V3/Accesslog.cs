// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/data/accesslog/v3/accesslog.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Data.Accesslog.V3 {

  /// <summary>Holder for reflection information generated from envoy/data/accesslog/v3/accesslog.proto</summary>
  public static partial class AccesslogReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/data/accesslog/v3/accesslog.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccesslogReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidlbnZveS9kYXRhL2FjY2Vzc2xvZy92My9hY2Nlc3Nsb2cucHJvdG8SF2Vu",
            "dm95LmRhdGEuYWNjZXNzbG9nLnYzGiJlbnZveS9jb25maWcvY29yZS92My9h",
            "ZGRyZXNzLnByb3RvGh9lbnZveS9jb25maWcvY29yZS92My9iYXNlLnByb3Rv",
            "Ghlnb29nbGUvcHJvdG9idWYvYW55LnByb3RvGh5nb29nbGUvcHJvdG9idWYv",
            "ZHVyYXRpb24ucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJv",
            "dG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxojZW52b3kvYW5u",
            "b3RhdGlvbnMvZGVwcmVjYXRpb24ucHJvdG8aHXVkcGEvYW5ub3RhdGlvbnMv",
            "c3RhdHVzLnByb3RvGiF1ZHBhL2Fubm90YXRpb25zL3ZlcnNpb25pbmcucHJv",
            "dG8aF3ZhbGlkYXRlL3ZhbGlkYXRlLnByb3RvItgBChFUQ1BBY2Nlc3NMb2dF",
            "bnRyeRJDChFjb21tb25fcHJvcGVydGllcxgBIAEoCzIoLmVudm95LmRhdGEu",
            "YWNjZXNzbG9nLnYzLkFjY2Vzc0xvZ0NvbW1vbhJMChVjb25uZWN0aW9uX3By",
            "b3BlcnRpZXMYAiABKAsyLS5lbnZveS5kYXRhLmFjY2Vzc2xvZy52My5Db25u",
            "ZWN0aW9uUHJvcGVydGllczowmsWIHisKKWVudm95LmRhdGEuYWNjZXNzbG9n",
            "LnYyLlRDUEFjY2Vzc0xvZ0VudHJ5IroDChJIVFRQQWNjZXNzTG9nRW50cnkS",
            "QwoRY29tbW9uX3Byb3BlcnRpZXMYASABKAsyKC5lbnZveS5kYXRhLmFjY2Vz",
            "c2xvZy52My5BY2Nlc3NMb2dDb21tb24SUQoQcHJvdG9jb2xfdmVyc2lvbhgC",
            "IAEoDjI3LmVudm95LmRhdGEuYWNjZXNzbG9nLnYzLkhUVFBBY2Nlc3NMb2dF",
            "bnRyeS5IVFRQVmVyc2lvbhI/CgdyZXF1ZXN0GAMgASgLMi4uZW52b3kuZGF0",
            "YS5hY2Nlc3Nsb2cudjMuSFRUUFJlcXVlc3RQcm9wZXJ0aWVzEkEKCHJlc3Bv",
            "bnNlGAQgASgLMi8uZW52b3kuZGF0YS5hY2Nlc3Nsb2cudjMuSFRUUFJlc3Bv",
            "bnNlUHJvcGVydGllcyJVCgtIVFRQVmVyc2lvbhIYChRQUk9UT0NPTF9VTlNQ",
            "RUNJRklFRBAAEgoKBkhUVFAxMBABEgoKBkhUVFAxMRACEgkKBUhUVFAyEAMS",
            "CQoFSFRUUDMQBDoxmsWIHiwKKmVudm95LmRhdGEuYWNjZXNzbG9nLnYyLkhU",
            "VFBBY2Nlc3NMb2dFbnRyeSJ3ChRDb25uZWN0aW9uUHJvcGVydGllcxIWCg5y",
            "ZWNlaXZlZF9ieXRlcxgBIAEoBBISCgpzZW50X2J5dGVzGAIgASgEOjOaxYge",
            "LgosZW52b3kuZGF0YS5hY2Nlc3Nsb2cudjIuQ29ubmVjdGlvblByb3BlcnRp",
            "ZXMisw8KD0FjY2Vzc0xvZ0NvbW1vbhIsCgtzYW1wbGVfcmF0ZRgBIAEoAUIX",
            "+kIUEhIZAAAAAAAA8D8hAAAAAAAAAAASQAoZZG93bnN0cmVhbV9yZW1vdGVf",
            "YWRkcmVzcxgCIAEoCzIdLmVudm95LmNvbmZpZy5jb3JlLnYzLkFkZHJlc3MS",
            "PwoYZG93bnN0cmVhbV9sb2NhbF9hZGRyZXNzGAMgASgLMh0uZW52b3kuY29u",
            "ZmlnLmNvcmUudjMuQWRkcmVzcxI+Cg50bHNfcHJvcGVydGllcxgEIAEoCzIm",
            "LmVudm95LmRhdGEuYWNjZXNzbG9nLnYzLlRMU1Byb3BlcnRpZXMSLgoKc3Rh",
            "cnRfdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNwoU",
            "dGltZV90b19sYXN0X3J4X2J5dGUYBiABKAsyGS5nb29nbGUucHJvdG9idWYu",
            "RHVyYXRpb24SQQoedGltZV90b19maXJzdF91cHN0cmVhbV90eF9ieXRlGAcg",
            "ASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEkAKHXRpbWVfdG9fbGFz",
            "dF91cHN0cmVhbV90eF9ieXRlGAggASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1",
            "cmF0aW9uEkEKHnRpbWVfdG9fZmlyc3RfdXBzdHJlYW1fcnhfYnl0ZRgJIAEo",
            "CzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhJACh10aW1lX3RvX2xhc3Rf",
            "dXBzdHJlYW1fcnhfYnl0ZRgKIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJh",
            "dGlvbhJDCiB0aW1lX3RvX2ZpcnN0X2Rvd25zdHJlYW1fdHhfYnl0ZRgLIAEo",
            "CzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhJCCh90aW1lX3RvX2xhc3Rf",
            "ZG93bnN0cmVhbV90eF9ieXRlGAwgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1",
            "cmF0aW9uEj4KF3Vwc3RyZWFtX3JlbW90ZV9hZGRyZXNzGA0gASgLMh0uZW52",
            "b3kuY29uZmlnLmNvcmUudjMuQWRkcmVzcxI9ChZ1cHN0cmVhbV9sb2NhbF9h",
            "ZGRyZXNzGA4gASgLMh0uZW52b3kuY29uZmlnLmNvcmUudjMuQWRkcmVzcxIY",
            "ChB1cHN0cmVhbV9jbHVzdGVyGA8gASgJEj4KDnJlc3BvbnNlX2ZsYWdzGBAg",
            "ASgLMiYuZW52b3kuZGF0YS5hY2Nlc3Nsb2cudjMuUmVzcG9uc2VGbGFncxIw",
            "CghtZXRhZGF0YRgRIAEoCzIeLmVudm95LmNvbmZpZy5jb3JlLnYzLk1ldGFk",
            "YXRhEikKIXVwc3RyZWFtX3RyYW5zcG9ydF9mYWlsdXJlX3JlYXNvbhgSIAEo",
            "CRISCgpyb3V0ZV9uYW1lGBMgASgJEkcKIGRvd25zdHJlYW1fZGlyZWN0X3Jl",
            "bW90ZV9hZGRyZXNzGBQgASgLMh0uZW52b3kuY29uZmlnLmNvcmUudjMuQWRk",
            "cmVzcxJeChRmaWx0ZXJfc3RhdGVfb2JqZWN0cxgVIAMoCzJALmVudm95LmRh",
            "dGEuYWNjZXNzbG9nLnYzLkFjY2Vzc0xvZ0NvbW1vbi5GaWx0ZXJTdGF0ZU9i",
            "amVjdHNFbnRyeRJNCgtjdXN0b21fdGFncxgWIAMoCzI4LmVudm95LmRhdGEu",
            "YWNjZXNzbG9nLnYzLkFjY2Vzc0xvZ0NvbW1vbi5DdXN0b21UYWdzRW50cnkS",
            "KwoIZHVyYXRpb24YFyABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24S",
            "JgoedXBzdHJlYW1fcmVxdWVzdF9hdHRlbXB0X2NvdW50GBggASgNEiYKHmNv",
            "bm5lY3Rpb25fdGVybWluYXRpb25fZGV0YWlscxgZIAEoCRIRCglzdHJlYW1f",
            "aWQYGiABKAkSKwoWaW50ZXJtZWRpYXRlX2xvZ19lbnRyeRgbIAEoCEILGAGS",
            "x4bYBAMzLjASKwojZG93bnN0cmVhbV90cmFuc3BvcnRfZmFpbHVyZV9yZWFz",
            "b24YHCABKAkSIgoaZG93bnN0cmVhbV93aXJlX2J5dGVzX3NlbnQYHSABKAQS",
            "JgoeZG93bnN0cmVhbV93aXJlX2J5dGVzX3JlY2VpdmVkGB4gASgEEiAKGHVw",
            "c3RyZWFtX3dpcmVfYnl0ZXNfc2VudBgfIAEoBBIkChx1cHN0cmVhbV93aXJl",
            "X2J5dGVzX3JlY2VpdmVkGCAgASgEEj8KD2FjY2Vzc19sb2dfdHlwZRghIAEo",
            "DjImLmVudm95LmRhdGEuYWNjZXNzbG9nLnYzLkFjY2Vzc0xvZ1R5cGUaTwoX",
            "RmlsdGVyU3RhdGVPYmplY3RzRW50cnkSCwoDa2V5GAEgASgJEiMKBXZhbHVl",
            "GAIgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueToCOAEaMQoPQ3VzdG9tVGFn",
            "c0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAE6LprFiB4p",
            "CidlbnZveS5kYXRhLmFjY2Vzc2xvZy52Mi5BY2Nlc3NMb2dDb21tb24imAkK",
            "DVJlc3BvbnNlRmxhZ3MSIAoYZmFpbGVkX2xvY2FsX2hlYWx0aGNoZWNrGAEg",
            "ASgIEhsKE25vX2hlYWx0aHlfdXBzdHJlYW0YAiABKAgSIAoYdXBzdHJlYW1f",
            "cmVxdWVzdF90aW1lb3V0GAMgASgIEhMKC2xvY2FsX3Jlc2V0GAQgASgIEh0K",
            "FXVwc3RyZWFtX3JlbW90ZV9yZXNldBgFIAEoCBIjCht1cHN0cmVhbV9jb25u",
            "ZWN0aW9uX2ZhaWx1cmUYBiABKAgSJwofdXBzdHJlYW1fY29ubmVjdGlvbl90",
            "ZXJtaW5hdGlvbhgHIAEoCBIZChF1cHN0cmVhbV9vdmVyZmxvdxgIIAEoCBIW",
            "Cg5ub19yb3V0ZV9mb3VuZBgJIAEoCBIWCg5kZWxheV9pbmplY3RlZBgKIAEo",
            "CBIWCg5mYXVsdF9pbmplY3RlZBgLIAEoCBIUCgxyYXRlX2xpbWl0ZWQYDCAB",
            "KAgSUQoUdW5hdXRob3JpemVkX2RldGFpbHMYDSABKAsyMy5lbnZveS5kYXRh",
            "LmFjY2Vzc2xvZy52My5SZXNwb25zZUZsYWdzLlVuYXV0aG9yaXplZBIgChhy",
            "YXRlX2xpbWl0X3NlcnZpY2VfZXJyb3IYDiABKAgSKQohZG93bnN0cmVhbV9j",
            "b25uZWN0aW9uX3Rlcm1pbmF0aW9uGA8gASgIEiUKHXVwc3RyZWFtX3JldHJ5",
            "X2xpbWl0X2V4Y2VlZGVkGBAgASgIEhsKE3N0cmVhbV9pZGxlX3RpbWVvdXQY",
            "ESABKAgSJQodaW52YWxpZF9lbnZveV9yZXF1ZXN0X2hlYWRlcnMYEiABKAgS",
            "IQoZZG93bnN0cmVhbV9wcm90b2NvbF9lcnJvchgTIAEoCBIsCiR1cHN0cmVh",
            "bV9tYXhfc3RyZWFtX2R1cmF0aW9uX3JlYWNoZWQYFCABKAgSIgoacmVzcG9u",
            "c2VfZnJvbV9jYWNoZV9maWx0ZXIYFSABKAgSHgoWbm9fZmlsdGVyX2NvbmZp",
            "Z19mb3VuZBgWIAEoCBIYChBkdXJhdGlvbl90aW1lb3V0GBcgASgIEh8KF3Vw",
            "c3RyZWFtX3Byb3RvY29sX2Vycm9yGBggASgIEhgKEG5vX2NsdXN0ZXJfZm91",
            "bmQYGSABKAgSGAoQb3ZlcmxvYWRfbWFuYWdlchgaIAEoCBIeChZkbnNfcmVz",
            "b2x1dGlvbl9mYWlsdXJlGBsgASgIGs0BCgxVbmF1dGhvcml6ZWQSSgoGcmVh",
            "c29uGAEgASgOMjouZW52b3kuZGF0YS5hY2Nlc3Nsb2cudjMuUmVzcG9uc2VG",
            "bGFncy5VbmF1dGhvcml6ZWQuUmVhc29uIjYKBlJlYXNvbhIWChJSRUFTT05f",
            "VU5TUEVDSUZJRUQQABIUChBFWFRFUk5BTF9TRVJWSUNFEAE6OZrFiB40CjJl",
            "bnZveS5kYXRhLmFjY2Vzc2xvZy52Mi5SZXNwb25zZUZsYWdzLlVuYXV0aG9y",
            "aXplZDosmsWIHicKJWVudm95LmRhdGEuYWNjZXNzbG9nLnYyLlJlc3BvbnNl",
            "RmxhZ3MiiQcKDVRMU1Byb3BlcnRpZXMSRgoLdGxzX3ZlcnNpb24YASABKA4y",
            "MS5lbnZveS5kYXRhLmFjY2Vzc2xvZy52My5UTFNQcm9wZXJ0aWVzLlRMU1Zl",
            "cnNpb24SNgoQdGxzX2NpcGhlcl9zdWl0ZRgCIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5VSW50MzJWYWx1ZRIYChB0bHNfc25pX2hvc3RuYW1lGAMgASgJEmIK",
            "HGxvY2FsX2NlcnRpZmljYXRlX3Byb3BlcnRpZXMYBCABKAsyPC5lbnZveS5k",
            "YXRhLmFjY2Vzc2xvZy52My5UTFNQcm9wZXJ0aWVzLkNlcnRpZmljYXRlUHJv",
            "cGVydGllcxJhChtwZWVyX2NlcnRpZmljYXRlX3Byb3BlcnRpZXMYBSABKAsy",
            "PC5lbnZveS5kYXRhLmFjY2Vzc2xvZy52My5UTFNQcm9wZXJ0aWVzLkNlcnRp",
            "ZmljYXRlUHJvcGVydGllcxIWCg50bHNfc2Vzc2lvbl9pZBgGIAEoCRIXCg9q",
            "YTNfZmluZ2VycHJpbnQYByABKAka3gIKFUNlcnRpZmljYXRlUHJvcGVydGll",
            "cxJlChBzdWJqZWN0X2FsdF9uYW1lGAEgAygLMksuZW52b3kuZGF0YS5hY2Nl",
            "c3Nsb2cudjMuVExTUHJvcGVydGllcy5DZXJ0aWZpY2F0ZVByb3BlcnRpZXMu",
            "U3ViamVjdEFsdE5hbWUSDwoHc3ViamVjdBgCIAEoCRqIAQoOU3ViamVjdEFs",
            "dE5hbWUSDQoDdXJpGAEgASgJSAASDQoDZG5zGAIgASgJSAA6UZrFiB5MCkpl",
            "bnZveS5kYXRhLmFjY2Vzc2xvZy52Mi5UTFNQcm9wZXJ0aWVzLkNlcnRpZmlj",
            "YXRlUHJvcGVydGllcy5TdWJqZWN0QWx0TmFtZUIFCgNzYW46QprFiB49Cjtl",
            "bnZveS5kYXRhLmFjY2Vzc2xvZy52Mi5UTFNQcm9wZXJ0aWVzLkNlcnRpZmlj",
            "YXRlUHJvcGVydGllcyJXCgpUTFNWZXJzaW9uEhcKE1ZFUlNJT05fVU5TUEVD",
            "SUZJRUQQABIJCgVUTFN2MRABEgsKB1RMU3YxXzEQAhILCgdUTFN2MV8yEAMS",
            "CwoHVExTdjFfMxAEOiyaxYgeJwolZW52b3kuZGF0YS5hY2Nlc3Nsb2cudjIu",
            "VExTUHJvcGVydGllcyL1BAoVSFRUUFJlcXVlc3RQcm9wZXJ0aWVzEkUKDnJl",
            "cXVlc3RfbWV0aG9kGAEgASgOMiMuZW52b3kuY29uZmlnLmNvcmUudjMuUmVx",
            "dWVzdE1ldGhvZEII+kIFggECEAESDgoGc2NoZW1lGAIgASgJEhEKCWF1dGhv",
            "cml0eRgDIAEoCRIqCgRwb3J0GAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlVJ",
            "bnQzMlZhbHVlEgwKBHBhdGgYBSABKAkSEgoKdXNlcl9hZ2VudBgGIAEoCRIP",
            "CgdyZWZlcmVyGAcgASgJEhUKDWZvcndhcmRlZF9mb3IYCCABKAkSEgoKcmVx",
            "dWVzdF9pZBgJIAEoCRIVCg1vcmlnaW5hbF9wYXRoGAogASgJEh0KFXJlcXVl",
            "c3RfaGVhZGVyc19ieXRlcxgLIAEoBBIaChJyZXF1ZXN0X2JvZHlfYnl0ZXMY",
            "DCABKAQSWwoPcmVxdWVzdF9oZWFkZXJzGA0gAygLMkIuZW52b3kuZGF0YS5h",
            "Y2Nlc3Nsb2cudjMuSFRUUFJlcXVlc3RQcm9wZXJ0aWVzLlJlcXVlc3RIZWFk",
            "ZXJzRW50cnkSIgoadXBzdHJlYW1faGVhZGVyX2J5dGVzX3NlbnQYDiABKAQS",
            "KAogZG93bnN0cmVhbV9oZWFkZXJfYnl0ZXNfcmVjZWl2ZWQYDyABKAQaNQoT",
            "UmVxdWVzdEhlYWRlcnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAk6AjgBOjSaxYgeLwotZW52b3kuZGF0YS5hY2Nlc3Nsb2cudjIuSFRUUFJl",
            "cXVlc3RQcm9wZXJ0aWVzIuEEChZIVFRQUmVzcG9uc2VQcm9wZXJ0aWVzEjMK",
            "DXJlc3BvbnNlX2NvZGUYASABKAsyHC5nb29nbGUucHJvdG9idWYuVUludDMy",
            "VmFsdWUSHgoWcmVzcG9uc2VfaGVhZGVyc19ieXRlcxgCIAEoBBIbChNyZXNw",
            "b25zZV9ib2R5X2J5dGVzGAMgASgEEl4KEHJlc3BvbnNlX2hlYWRlcnMYBCAD",
            "KAsyRC5lbnZveS5kYXRhLmFjY2Vzc2xvZy52My5IVFRQUmVzcG9uc2VQcm9w",
            "ZXJ0aWVzLlJlc3BvbnNlSGVhZGVyc0VudHJ5EmAKEXJlc3BvbnNlX3RyYWls",
            "ZXJzGAUgAygLMkUuZW52b3kuZGF0YS5hY2Nlc3Nsb2cudjMuSFRUUFJlc3Bv",
            "bnNlUHJvcGVydGllcy5SZXNwb25zZVRyYWlsZXJzRW50cnkSHQoVcmVzcG9u",
            "c2VfY29kZV9kZXRhaWxzGAYgASgJEiYKHnVwc3RyZWFtX2hlYWRlcl9ieXRl",
            "c19yZWNlaXZlZBgHIAEoBBIkChxkb3duc3RyZWFtX2hlYWRlcl9ieXRlc19z",
            "ZW50GAggASgEGjYKFFJlc3BvbnNlSGVhZGVyc0VudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoCToCOAEaNwoVUmVzcG9uc2VUcmFpbGVyc0VudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAE6NZrFiB4wCi5lbnZv",
            "eS5kYXRhLmFjY2Vzc2xvZy52Mi5IVFRQUmVzcG9uc2VQcm9wZXJ0aWVzKocC",
            "Cg1BY2Nlc3NMb2dUeXBlEgoKBk5vdFNldBAAEhgKFFRjcFVwc3RyZWFtQ29u",
            "bmVjdGVkEAESDwoLVGNwUGVyaW9kaWMQAhIUChBUY3BDb25uZWN0aW9uRW5k",
            "EAMSEwoPRG93bnN0cmVhbVN0YXJ0EAQSFgoSRG93bnN0cmVhbVBlcmlvZGlj",
            "EAUSEQoNRG93bnN0cmVhbUVuZBAGEhUKEVVwc3RyZWFtUG9vbFJlYWR5EAcS",
            "FAoQVXBzdHJlYW1QZXJpb2RpYxAIEg8KC1Vwc3RyZWFtRW5kEAkSKwonRG93",
            "bnN0cmVhbVR1bm5lbFN1Y2Nlc3NmdWxseUVzdGFibGlzaGVkEApCjQEKJWlv",
            "LmVudm95cHJveHkuZW52b3kuZGF0YS5hY2Nlc3Nsb2cudjNCDkFjY2Vzc2xv",
            "Z1Byb3RvUAFaSmdpdGh1Yi5jb20vZW52b3lwcm94eS9nby1jb250cm9sLXBs",
            "YW5lL2Vudm95L2RhdGEvYWNjZXNzbG9nL3YzO2FjY2Vzc2xvZ3YzuoDI0QYC",
            "EAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Core.V3.AddressReflection.Descriptor, global::Envoy.Config.Core.V3.BaseReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Envoy.Annotations.DeprecationReflection.Descriptor, global::Udpa.Annotations.StatusReflection.Descriptor, global::Udpa.Annotations.VersioningReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Envoy.Data.Accesslog.V3.AccessLogType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Accesslog.V3.TCPAccessLogEntry), global::Envoy.Data.Accesslog.V3.TCPAccessLogEntry.Parser, new[]{ "CommonProperties", "ConnectionProperties" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry), global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Parser, new[]{ "CommonProperties", "ProtocolVersion", "Request", "Response" }, null, new[]{ typeof(global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Types.HTTPVersion) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Accesslog.V3.ConnectionProperties), global::Envoy.Data.Accesslog.V3.ConnectionProperties.Parser, new[]{ "ReceivedBytes", "SentBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Accesslog.V3.AccessLogCommon), global::Envoy.Data.Accesslog.V3.AccessLogCommon.Parser, new[]{ "SampleRate", "DownstreamRemoteAddress", "DownstreamLocalAddress", "TlsProperties", "StartTime", "TimeToLastRxByte", "TimeToFirstUpstreamTxByte", "TimeToLastUpstreamTxByte", "TimeToFirstUpstreamRxByte", "TimeToLastUpstreamRxByte", "TimeToFirstDownstreamTxByte", "TimeToLastDownstreamTxByte", "UpstreamRemoteAddress", "UpstreamLocalAddress", "UpstreamCluster", "ResponseFlags", "Metadata", "UpstreamTransportFailureReason", "RouteName", "DownstreamDirectRemoteAddress", "FilterStateObjects", "CustomTags", "Duration", "UpstreamRequestAttemptCount", "ConnectionTerminationDetails", "StreamId", "IntermediateLogEntry", "DownstreamTransportFailureReason", "DownstreamWireBytesSent", "DownstreamWireBytesReceived", "UpstreamWireBytesSent", "UpstreamWireBytesReceived", "AccessLogType" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Accesslog.V3.ResponseFlags), global::Envoy.Data.Accesslog.V3.ResponseFlags.Parser, new[]{ "FailedLocalHealthcheck", "NoHealthyUpstream", "UpstreamRequestTimeout", "LocalReset", "UpstreamRemoteReset", "UpstreamConnectionFailure", "UpstreamConnectionTermination", "UpstreamOverflow", "NoRouteFound", "DelayInjected", "FaultInjected", "RateLimited", "UnauthorizedDetails", "RateLimitServiceError", "DownstreamConnectionTermination", "UpstreamRetryLimitExceeded", "StreamIdleTimeout", "InvalidEnvoyRequestHeaders", "DownstreamProtocolError", "UpstreamMaxStreamDurationReached", "ResponseFromCacheFilter", "NoFilterConfigFound", "DurationTimeout", "UpstreamProtocolError", "NoClusterFound", "OverloadManager", "DnsResolutionFailure" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized), global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Parser, new[]{ "Reason" }, null, new[]{ typeof(global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Types.Reason) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Accesslog.V3.TLSProperties), global::Envoy.Data.Accesslog.V3.TLSProperties.Parser, new[]{ "TlsVersion", "TlsCipherSuite", "TlsSniHostname", "LocalCertificateProperties", "PeerCertificateProperties", "TlsSessionId", "Ja3Fingerprint" }, null, new[]{ typeof(global::Envoy.Data.Accesslog.V3.TLSProperties.Types.TLSVersion) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties), global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties.Parser, new[]{ "SubjectAltName", "Subject" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties.Types.SubjectAltName), global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties.Types.SubjectAltName.Parser, new[]{ "Uri", "Dns" }, new[]{ "San" }, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Accesslog.V3.HTTPRequestProperties), global::Envoy.Data.Accesslog.V3.HTTPRequestProperties.Parser, new[]{ "RequestMethod", "Scheme", "Authority", "Port", "Path", "UserAgent", "Referer", "ForwardedFor", "RequestId", "OriginalPath", "RequestHeadersBytes", "RequestBodyBytes", "RequestHeaders", "UpstreamHeaderBytesSent", "DownstreamHeaderBytesReceived" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Accesslog.V3.HTTPResponseProperties), global::Envoy.Data.Accesslog.V3.HTTPResponseProperties.Parser, new[]{ "ResponseCode", "ResponseHeadersBytes", "ResponseBodyBytes", "ResponseHeaders", "ResponseTrailers", "ResponseCodeDetails", "UpstreamHeaderBytesReceived", "DownstreamHeaderBytesSent" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum AccessLogType {
    [pbr::OriginalName("NotSet")] NotSet = 0,
    [pbr::OriginalName("TcpUpstreamConnected")] TcpUpstreamConnected = 1,
    [pbr::OriginalName("TcpPeriodic")] TcpPeriodic = 2,
    [pbr::OriginalName("TcpConnectionEnd")] TcpConnectionEnd = 3,
    [pbr::OriginalName("DownstreamStart")] DownstreamStart = 4,
    [pbr::OriginalName("DownstreamPeriodic")] DownstreamPeriodic = 5,
    [pbr::OriginalName("DownstreamEnd")] DownstreamEnd = 6,
    [pbr::OriginalName("UpstreamPoolReady")] UpstreamPoolReady = 7,
    [pbr::OriginalName("UpstreamPeriodic")] UpstreamPeriodic = 8,
    [pbr::OriginalName("UpstreamEnd")] UpstreamEnd = 9,
    [pbr::OriginalName("DownstreamTunnelSuccessfullyEstablished")] DownstreamTunnelSuccessfullyEstablished = 10,
  }

  #endregion

  #region Messages
  public sealed partial class TCPAccessLogEntry : pb::IMessage<TCPAccessLogEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TCPAccessLogEntry> _parser = new pb::MessageParser<TCPAccessLogEntry>(() => new TCPAccessLogEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TCPAccessLogEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Accesslog.V3.AccesslogReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TCPAccessLogEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TCPAccessLogEntry(TCPAccessLogEntry other) : this() {
      commonProperties_ = other.commonProperties_ != null ? other.commonProperties_.Clone() : null;
      connectionProperties_ = other.connectionProperties_ != null ? other.connectionProperties_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TCPAccessLogEntry Clone() {
      return new TCPAccessLogEntry(this);
    }

    /// <summary>Field number for the "common_properties" field.</summary>
    public const int CommonPropertiesFieldNumber = 1;
    private global::Envoy.Data.Accesslog.V3.AccessLogCommon commonProperties_;
    /// <summary>
    /// Common properties shared by all Envoy access logs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.AccessLogCommon CommonProperties {
      get { return commonProperties_; }
      set {
        commonProperties_ = value;
      }
    }

    /// <summary>Field number for the "connection_properties" field.</summary>
    public const int ConnectionPropertiesFieldNumber = 2;
    private global::Envoy.Data.Accesslog.V3.ConnectionProperties connectionProperties_;
    /// <summary>
    /// Properties of the TCP connection.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.ConnectionProperties ConnectionProperties {
      get { return connectionProperties_; }
      set {
        connectionProperties_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TCPAccessLogEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TCPAccessLogEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CommonProperties, other.CommonProperties)) return false;
      if (!object.Equals(ConnectionProperties, other.ConnectionProperties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (commonProperties_ != null) hash ^= CommonProperties.GetHashCode();
      if (connectionProperties_ != null) hash ^= ConnectionProperties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (commonProperties_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CommonProperties);
      }
      if (connectionProperties_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConnectionProperties);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (commonProperties_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CommonProperties);
      }
      if (connectionProperties_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConnectionProperties);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (commonProperties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommonProperties);
      }
      if (connectionProperties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectionProperties);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TCPAccessLogEntry other) {
      if (other == null) {
        return;
      }
      if (other.commonProperties_ != null) {
        if (commonProperties_ == null) {
          CommonProperties = new global::Envoy.Data.Accesslog.V3.AccessLogCommon();
        }
        CommonProperties.MergeFrom(other.CommonProperties);
      }
      if (other.connectionProperties_ != null) {
        if (connectionProperties_ == null) {
          ConnectionProperties = new global::Envoy.Data.Accesslog.V3.ConnectionProperties();
        }
        ConnectionProperties.MergeFrom(other.ConnectionProperties);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (commonProperties_ == null) {
              CommonProperties = new global::Envoy.Data.Accesslog.V3.AccessLogCommon();
            }
            input.ReadMessage(CommonProperties);
            break;
          }
          case 18: {
            if (connectionProperties_ == null) {
              ConnectionProperties = new global::Envoy.Data.Accesslog.V3.ConnectionProperties();
            }
            input.ReadMessage(ConnectionProperties);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (commonProperties_ == null) {
              CommonProperties = new global::Envoy.Data.Accesslog.V3.AccessLogCommon();
            }
            input.ReadMessage(CommonProperties);
            break;
          }
          case 18: {
            if (connectionProperties_ == null) {
              ConnectionProperties = new global::Envoy.Data.Accesslog.V3.ConnectionProperties();
            }
            input.ReadMessage(ConnectionProperties);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HTTPAccessLogEntry : pb::IMessage<HTTPAccessLogEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HTTPAccessLogEntry> _parser = new pb::MessageParser<HTTPAccessLogEntry>(() => new HTTPAccessLogEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HTTPAccessLogEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Accesslog.V3.AccesslogReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HTTPAccessLogEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HTTPAccessLogEntry(HTTPAccessLogEntry other) : this() {
      commonProperties_ = other.commonProperties_ != null ? other.commonProperties_.Clone() : null;
      protocolVersion_ = other.protocolVersion_;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HTTPAccessLogEntry Clone() {
      return new HTTPAccessLogEntry(this);
    }

    /// <summary>Field number for the "common_properties" field.</summary>
    public const int CommonPropertiesFieldNumber = 1;
    private global::Envoy.Data.Accesslog.V3.AccessLogCommon commonProperties_;
    /// <summary>
    /// Common properties shared by all Envoy access logs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.AccessLogCommon CommonProperties {
      get { return commonProperties_; }
      set {
        commonProperties_ = value;
      }
    }

    /// <summary>Field number for the "protocol_version" field.</summary>
    public const int ProtocolVersionFieldNumber = 2;
    private global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Types.HTTPVersion protocolVersion_ = global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Types.HTTPVersion.ProtocolUnspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Types.HTTPVersion ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 3;
    private global::Envoy.Data.Accesslog.V3.HTTPRequestProperties request_;
    /// <summary>
    /// Description of the incoming HTTP request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.HTTPRequestProperties Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 4;
    private global::Envoy.Data.Accesslog.V3.HTTPResponseProperties response_;
    /// <summary>
    /// Description of the outgoing HTTP response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.HTTPResponseProperties Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HTTPAccessLogEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HTTPAccessLogEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CommonProperties, other.CommonProperties)) return false;
      if (ProtocolVersion != other.ProtocolVersion) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (commonProperties_ != null) hash ^= CommonProperties.GetHashCode();
      if (ProtocolVersion != global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Types.HTTPVersion.ProtocolUnspecified) hash ^= ProtocolVersion.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (commonProperties_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CommonProperties);
      }
      if (ProtocolVersion != global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Types.HTTPVersion.ProtocolUnspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtocolVersion);
      }
      if (request_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Request);
      }
      if (response_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (commonProperties_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CommonProperties);
      }
      if (ProtocolVersion != global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Types.HTTPVersion.ProtocolUnspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtocolVersion);
      }
      if (request_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Request);
      }
      if (response_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (commonProperties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommonProperties);
      }
      if (ProtocolVersion != global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Types.HTTPVersion.ProtocolUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtocolVersion);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HTTPAccessLogEntry other) {
      if (other == null) {
        return;
      }
      if (other.commonProperties_ != null) {
        if (commonProperties_ == null) {
          CommonProperties = new global::Envoy.Data.Accesslog.V3.AccessLogCommon();
        }
        CommonProperties.MergeFrom(other.CommonProperties);
      }
      if (other.ProtocolVersion != global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Types.HTTPVersion.ProtocolUnspecified) {
        ProtocolVersion = other.ProtocolVersion;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Envoy.Data.Accesslog.V3.HTTPRequestProperties();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::Envoy.Data.Accesslog.V3.HTTPResponseProperties();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (commonProperties_ == null) {
              CommonProperties = new global::Envoy.Data.Accesslog.V3.AccessLogCommon();
            }
            input.ReadMessage(CommonProperties);
            break;
          }
          case 16: {
            ProtocolVersion = (global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Types.HTTPVersion) input.ReadEnum();
            break;
          }
          case 26: {
            if (request_ == null) {
              Request = new global::Envoy.Data.Accesslog.V3.HTTPRequestProperties();
            }
            input.ReadMessage(Request);
            break;
          }
          case 34: {
            if (response_ == null) {
              Response = new global::Envoy.Data.Accesslog.V3.HTTPResponseProperties();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (commonProperties_ == null) {
              CommonProperties = new global::Envoy.Data.Accesslog.V3.AccessLogCommon();
            }
            input.ReadMessage(CommonProperties);
            break;
          }
          case 16: {
            ProtocolVersion = (global::Envoy.Data.Accesslog.V3.HTTPAccessLogEntry.Types.HTTPVersion) input.ReadEnum();
            break;
          }
          case 26: {
            if (request_ == null) {
              Request = new global::Envoy.Data.Accesslog.V3.HTTPRequestProperties();
            }
            input.ReadMessage(Request);
            break;
          }
          case 34: {
            if (response_ == null) {
              Response = new global::Envoy.Data.Accesslog.V3.HTTPResponseProperties();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the HTTPAccessLogEntry message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// HTTP version
      /// </summary>
      public enum HTTPVersion {
        [pbr::OriginalName("PROTOCOL_UNSPECIFIED")] ProtocolUnspecified = 0,
        [pbr::OriginalName("HTTP10")] Http10 = 1,
        [pbr::OriginalName("HTTP11")] Http11 = 2,
        [pbr::OriginalName("HTTP2")] Http2 = 3,
        [pbr::OriginalName("HTTP3")] Http3 = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Defines fields for a connection
  /// </summary>
  public sealed partial class ConnectionProperties : pb::IMessage<ConnectionProperties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectionProperties> _parser = new pb::MessageParser<ConnectionProperties>(() => new ConnectionProperties());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConnectionProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Accesslog.V3.AccesslogReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectionProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectionProperties(ConnectionProperties other) : this() {
      receivedBytes_ = other.receivedBytes_;
      sentBytes_ = other.sentBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectionProperties Clone() {
      return new ConnectionProperties(this);
    }

    /// <summary>Field number for the "received_bytes" field.</summary>
    public const int ReceivedBytesFieldNumber = 1;
    private ulong receivedBytes_;
    /// <summary>
    /// Number of bytes received from downstream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ReceivedBytes {
      get { return receivedBytes_; }
      set {
        receivedBytes_ = value;
      }
    }

    /// <summary>Field number for the "sent_bytes" field.</summary>
    public const int SentBytesFieldNumber = 2;
    private ulong sentBytes_;
    /// <summary>
    /// Number of bytes sent to downstream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SentBytes {
      get { return sentBytes_; }
      set {
        sentBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConnectionProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConnectionProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceivedBytes != other.ReceivedBytes) return false;
      if (SentBytes != other.SentBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceivedBytes != 0UL) hash ^= ReceivedBytes.GetHashCode();
      if (SentBytes != 0UL) hash ^= SentBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReceivedBytes != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ReceivedBytes);
      }
      if (SentBytes != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SentBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReceivedBytes != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ReceivedBytes);
      }
      if (SentBytes != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SentBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ReceivedBytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReceivedBytes);
      }
      if (SentBytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SentBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConnectionProperties other) {
      if (other == null) {
        return;
      }
      if (other.ReceivedBytes != 0UL) {
        ReceivedBytes = other.ReceivedBytes;
      }
      if (other.SentBytes != 0UL) {
        SentBytes = other.SentBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceivedBytes = input.ReadUInt64();
            break;
          }
          case 16: {
            SentBytes = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReceivedBytes = input.ReadUInt64();
            break;
          }
          case 16: {
            SentBytes = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines fields that are shared by all Envoy access logs.
  /// [#next-free-field: 34]
  /// </summary>
  public sealed partial class AccessLogCommon : pb::IMessage<AccessLogCommon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccessLogCommon> _parser = new pb::MessageParser<AccessLogCommon>(() => new AccessLogCommon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccessLogCommon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Accesslog.V3.AccesslogReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccessLogCommon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccessLogCommon(AccessLogCommon other) : this() {
      sampleRate_ = other.sampleRate_;
      downstreamRemoteAddress_ = other.downstreamRemoteAddress_ != null ? other.downstreamRemoteAddress_.Clone() : null;
      downstreamLocalAddress_ = other.downstreamLocalAddress_ != null ? other.downstreamLocalAddress_.Clone() : null;
      tlsProperties_ = other.tlsProperties_ != null ? other.tlsProperties_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      timeToLastRxByte_ = other.timeToLastRxByte_ != null ? other.timeToLastRxByte_.Clone() : null;
      timeToFirstUpstreamTxByte_ = other.timeToFirstUpstreamTxByte_ != null ? other.timeToFirstUpstreamTxByte_.Clone() : null;
      timeToLastUpstreamTxByte_ = other.timeToLastUpstreamTxByte_ != null ? other.timeToLastUpstreamTxByte_.Clone() : null;
      timeToFirstUpstreamRxByte_ = other.timeToFirstUpstreamRxByte_ != null ? other.timeToFirstUpstreamRxByte_.Clone() : null;
      timeToLastUpstreamRxByte_ = other.timeToLastUpstreamRxByte_ != null ? other.timeToLastUpstreamRxByte_.Clone() : null;
      timeToFirstDownstreamTxByte_ = other.timeToFirstDownstreamTxByte_ != null ? other.timeToFirstDownstreamTxByte_.Clone() : null;
      timeToLastDownstreamTxByte_ = other.timeToLastDownstreamTxByte_ != null ? other.timeToLastDownstreamTxByte_.Clone() : null;
      upstreamRemoteAddress_ = other.upstreamRemoteAddress_ != null ? other.upstreamRemoteAddress_.Clone() : null;
      upstreamLocalAddress_ = other.upstreamLocalAddress_ != null ? other.upstreamLocalAddress_.Clone() : null;
      upstreamCluster_ = other.upstreamCluster_;
      responseFlags_ = other.responseFlags_ != null ? other.responseFlags_.Clone() : null;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      upstreamTransportFailureReason_ = other.upstreamTransportFailureReason_;
      routeName_ = other.routeName_;
      downstreamDirectRemoteAddress_ = other.downstreamDirectRemoteAddress_ != null ? other.downstreamDirectRemoteAddress_.Clone() : null;
      filterStateObjects_ = other.filterStateObjects_.Clone();
      customTags_ = other.customTags_.Clone();
      duration_ = other.duration_ != null ? other.duration_.Clone() : null;
      upstreamRequestAttemptCount_ = other.upstreamRequestAttemptCount_;
      connectionTerminationDetails_ = other.connectionTerminationDetails_;
      streamId_ = other.streamId_;
      intermediateLogEntry_ = other.intermediateLogEntry_;
      downstreamTransportFailureReason_ = other.downstreamTransportFailureReason_;
      downstreamWireBytesSent_ = other.downstreamWireBytesSent_;
      downstreamWireBytesReceived_ = other.downstreamWireBytesReceived_;
      upstreamWireBytesSent_ = other.upstreamWireBytesSent_;
      upstreamWireBytesReceived_ = other.upstreamWireBytesReceived_;
      accessLogType_ = other.accessLogType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccessLogCommon Clone() {
      return new AccessLogCommon(this);
    }

    /// <summary>Field number for the "sample_rate" field.</summary>
    public const int SampleRateFieldNumber = 1;
    private double sampleRate_;
    /// <summary>
    /// [#not-implemented-hide:]
    /// This field indicates the rate at which this log entry was sampled.
    /// Valid range is (0.0, 1.0].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SampleRate {
      get { return sampleRate_; }
      set {
        sampleRate_ = value;
      }
    }

    /// <summary>Field number for the "downstream_remote_address" field.</summary>
    public const int DownstreamRemoteAddressFieldNumber = 2;
    private global::Envoy.Config.Core.V3.Address downstreamRemoteAddress_;
    /// <summary>
    /// This field is the remote/origin address on which the request from the user was received.
    /// Note: This may not be the physical peer. E.g, if the remote address is inferred from for
    /// example the x-forwarder-for header, proxy protocol, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.Address DownstreamRemoteAddress {
      get { return downstreamRemoteAddress_; }
      set {
        downstreamRemoteAddress_ = value;
      }
    }

    /// <summary>Field number for the "downstream_local_address" field.</summary>
    public const int DownstreamLocalAddressFieldNumber = 3;
    private global::Envoy.Config.Core.V3.Address downstreamLocalAddress_;
    /// <summary>
    /// This field is the local/destination address on which the request from the user was received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.Address DownstreamLocalAddress {
      get { return downstreamLocalAddress_; }
      set {
        downstreamLocalAddress_ = value;
      }
    }

    /// <summary>Field number for the "tls_properties" field.</summary>
    public const int TlsPropertiesFieldNumber = 4;
    private global::Envoy.Data.Accesslog.V3.TLSProperties tlsProperties_;
    /// <summary>
    /// If the connection is secure,S this field will contain TLS properties.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.TLSProperties TlsProperties {
      get { return tlsProperties_; }
      set {
        tlsProperties_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The time that Envoy started servicing this request. This is effectively the time that the first
    /// downstream byte is received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "time_to_last_rx_byte" field.</summary>
    public const int TimeToLastRxByteFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Duration timeToLastRxByte_;
    /// <summary>
    /// Interval between the first downstream byte received and the last
    /// downstream byte received (i.e. time it takes to receive a request).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeToLastRxByte {
      get { return timeToLastRxByte_; }
      set {
        timeToLastRxByte_ = value;
      }
    }

    /// <summary>Field number for the "time_to_first_upstream_tx_byte" field.</summary>
    public const int TimeToFirstUpstreamTxByteFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Duration timeToFirstUpstreamTxByte_;
    /// <summary>
    /// Interval between the first downstream byte received and the first upstream byte sent. There may
    /// by considerable delta between ``time_to_last_rx_byte`` and this value due to filters.
    /// Additionally, the same caveats apply as documented in ``time_to_last_downstream_tx_byte`` about
    /// not accounting for kernel socket buffer time, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeToFirstUpstreamTxByte {
      get { return timeToFirstUpstreamTxByte_; }
      set {
        timeToFirstUpstreamTxByte_ = value;
      }
    }

    /// <summary>Field number for the "time_to_last_upstream_tx_byte" field.</summary>
    public const int TimeToLastUpstreamTxByteFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Duration timeToLastUpstreamTxByte_;
    /// <summary>
    /// Interval between the first downstream byte received and the last upstream byte sent. There may
    /// by considerable delta between ``time_to_last_rx_byte`` and this value due to filters.
    /// Additionally, the same caveats apply as documented in ``time_to_last_downstream_tx_byte`` about
    /// not accounting for kernel socket buffer time, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeToLastUpstreamTxByte {
      get { return timeToLastUpstreamTxByte_; }
      set {
        timeToLastUpstreamTxByte_ = value;
      }
    }

    /// <summary>Field number for the "time_to_first_upstream_rx_byte" field.</summary>
    public const int TimeToFirstUpstreamRxByteFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Duration timeToFirstUpstreamRxByte_;
    /// <summary>
    /// Interval between the first downstream byte received and the first upstream
    /// byte received (i.e. time it takes to start receiving a response).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeToFirstUpstreamRxByte {
      get { return timeToFirstUpstreamRxByte_; }
      set {
        timeToFirstUpstreamRxByte_ = value;
      }
    }

    /// <summary>Field number for the "time_to_last_upstream_rx_byte" field.</summary>
    public const int TimeToLastUpstreamRxByteFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Duration timeToLastUpstreamRxByte_;
    /// <summary>
    /// Interval between the first downstream byte received and the last upstream
    /// byte received (i.e. time it takes to receive a complete response).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeToLastUpstreamRxByte {
      get { return timeToLastUpstreamRxByte_; }
      set {
        timeToLastUpstreamRxByte_ = value;
      }
    }

    /// <summary>Field number for the "time_to_first_downstream_tx_byte" field.</summary>
    public const int TimeToFirstDownstreamTxByteFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Duration timeToFirstDownstreamTxByte_;
    /// <summary>
    /// Interval between the first downstream byte received and the first downstream byte sent.
    /// There may be a considerable delta between the ``time_to_first_upstream_rx_byte`` and this field
    /// due to filters. Additionally, the same caveats apply as documented in
    /// ``time_to_last_downstream_tx_byte`` about not accounting for kernel socket buffer time, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeToFirstDownstreamTxByte {
      get { return timeToFirstDownstreamTxByte_; }
      set {
        timeToFirstDownstreamTxByte_ = value;
      }
    }

    /// <summary>Field number for the "time_to_last_downstream_tx_byte" field.</summary>
    public const int TimeToLastDownstreamTxByteFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Duration timeToLastDownstreamTxByte_;
    /// <summary>
    /// Interval between the first downstream byte received and the last downstream byte sent.
    /// Depending on protocol, buffering, windowing, filters, etc. there may be a considerable delta
    /// between ``time_to_last_upstream_rx_byte`` and this field. Note also that this is an approximate
    /// time. In the current implementation it does not include kernel socket buffer time. In the
    /// current implementation it also does not include send window buffering inside the HTTP/2 codec.
    /// In the future it is likely that work will be done to make this duration more accurate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeToLastDownstreamTxByte {
      get { return timeToLastDownstreamTxByte_; }
      set {
        timeToLastDownstreamTxByte_ = value;
      }
    }

    /// <summary>Field number for the "upstream_remote_address" field.</summary>
    public const int UpstreamRemoteAddressFieldNumber = 13;
    private global::Envoy.Config.Core.V3.Address upstreamRemoteAddress_;
    /// <summary>
    /// The upstream remote/destination address that handles this exchange. This does not include
    /// retries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.Address UpstreamRemoteAddress {
      get { return upstreamRemoteAddress_; }
      set {
        upstreamRemoteAddress_ = value;
      }
    }

    /// <summary>Field number for the "upstream_local_address" field.</summary>
    public const int UpstreamLocalAddressFieldNumber = 14;
    private global::Envoy.Config.Core.V3.Address upstreamLocalAddress_;
    /// <summary>
    /// The upstream local/origin address that handles this exchange. This does not include retries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.Address UpstreamLocalAddress {
      get { return upstreamLocalAddress_; }
      set {
        upstreamLocalAddress_ = value;
      }
    }

    /// <summary>Field number for the "upstream_cluster" field.</summary>
    public const int UpstreamClusterFieldNumber = 15;
    private string upstreamCluster_ = "";
    /// <summary>
    /// The upstream cluster that ``upstream_remote_address`` belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UpstreamCluster {
      get { return upstreamCluster_; }
      set {
        upstreamCluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response_flags" field.</summary>
    public const int ResponseFlagsFieldNumber = 16;
    private global::Envoy.Data.Accesslog.V3.ResponseFlags responseFlags_;
    /// <summary>
    /// Flags indicating occurrences during request/response processing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.ResponseFlags ResponseFlags {
      get { return responseFlags_; }
      set {
        responseFlags_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 17;
    private global::Envoy.Config.Core.V3.Metadata metadata_;
    /// <summary>
    /// All metadata encountered during request processing, including endpoint
    /// selection.
    ///
    /// This can be used to associate IDs attached to the various configurations
    /// used to process this request with the access log entry. For example, a
    /// route created from a higher level forwarding rule with some ID can place
    /// that ID in this field and cross reference later. It can also be used to
    /// determine if a canary endpoint was used or not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.Metadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "upstream_transport_failure_reason" field.</summary>
    public const int UpstreamTransportFailureReasonFieldNumber = 18;
    private string upstreamTransportFailureReason_ = "";
    /// <summary>
    /// If upstream connection failed due to transport socket (e.g. TLS handshake), provides the
    /// failure reason from the transport socket. The format of this field depends on the configured
    /// upstream transport socket. Common TLS failures are in
    /// :ref:`TLS trouble shooting &lt;arch_overview_ssl_trouble_shooting>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UpstreamTransportFailureReason {
      get { return upstreamTransportFailureReason_; }
      set {
        upstreamTransportFailureReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "route_name" field.</summary>
    public const int RouteNameFieldNumber = 19;
    private string routeName_ = "";
    /// <summary>
    /// The name of the route
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RouteName {
      get { return routeName_; }
      set {
        routeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "downstream_direct_remote_address" field.</summary>
    public const int DownstreamDirectRemoteAddressFieldNumber = 20;
    private global::Envoy.Config.Core.V3.Address downstreamDirectRemoteAddress_;
    /// <summary>
    /// This field is the downstream direct remote address on which the request from the user was
    /// received. Note: This is always the physical peer, even if the remote address is inferred from
    /// for example the x-forwarder-for header, proxy protocol, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.Address DownstreamDirectRemoteAddress {
      get { return downstreamDirectRemoteAddress_; }
      set {
        downstreamDirectRemoteAddress_ = value;
      }
    }

    /// <summary>Field number for the "filter_state_objects" field.</summary>
    public const int FilterStateObjectsFieldNumber = 21;
    private static readonly pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Any>.Codec _map_filterStateObjects_codec
        = new pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Any>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Protobuf.WellKnownTypes.Any.Parser), 170);
    private readonly pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Any> filterStateObjects_ = new pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Any>();
    /// <summary>
    /// Map of filter state in stream info that have been configured to be logged. If the filter
    /// state serialized to any message other than ``google.protobuf.Any`` it will be packed into
    /// ``google.protobuf.Any``.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Any> FilterStateObjects {
      get { return filterStateObjects_; }
    }

    /// <summary>Field number for the "custom_tags" field.</summary>
    public const int CustomTagsFieldNumber = 22;
    private static readonly pbc::MapField<string, string>.Codec _map_customTags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 178);
    private readonly pbc::MapField<string, string> customTags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// A list of custom tags, which annotate logs with additional information.
    /// To configure this value, users should configure
    /// :ref:`custom_tags &lt;envoy_v3_api_field_extensions.access_loggers.grpc.v3.CommonGrpcAccessLogConfig.custom_tags>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> CustomTags {
      get { return customTags_; }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 23;
    private global::Google.Protobuf.WellKnownTypes.Duration duration_;
    /// <summary>
    /// For HTTP: Total duration in milliseconds of the request from the start time to the last byte out.
    /// For TCP: Total duration in milliseconds of the downstream connection.
    /// This is the total duration of the request (i.e., when the request's ActiveStream is destroyed)
    /// and may be longer than ``time_to_last_downstream_tx_byte``.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "upstream_request_attempt_count" field.</summary>
    public const int UpstreamRequestAttemptCountFieldNumber = 24;
    private uint upstreamRequestAttemptCount_;
    /// <summary>
    /// For HTTP: Number of times the request is attempted upstream. Note that the field is omitted when the request was never attempted upstream.
    /// For TCP: Number of times the connection request is attempted upstream. Note that the field is omitted when the connect request was never attempted upstream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UpstreamRequestAttemptCount {
      get { return upstreamRequestAttemptCount_; }
      set {
        upstreamRequestAttemptCount_ = value;
      }
    }

    /// <summary>Field number for the "connection_termination_details" field.</summary>
    public const int ConnectionTerminationDetailsFieldNumber = 25;
    private string connectionTerminationDetails_ = "";
    /// <summary>
    /// Connection termination details may provide additional information about why the connection was terminated by Envoy for L4 reasons.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ConnectionTerminationDetails {
      get { return connectionTerminationDetails_; }
      set {
        connectionTerminationDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 26;
    private string streamId_ = "";
    /// <summary>
    /// Optional unique id of stream (TCP connection, long-live HTTP2 stream, HTTP request) for logging and tracing.
    /// This could be any format string that could be used to identify one stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamId {
      get { return streamId_; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "intermediate_log_entry" field.</summary>
    public const int IntermediateLogEntryFieldNumber = 27;
    private bool intermediateLogEntry_;
    /// <summary>
    /// If this log entry is final log entry that flushed after the stream completed or
    /// intermediate log entry that flushed periodically during the stream.
    /// There may be multiple intermediate log entries and only one final log entry for each
    /// long-live stream (TCP connection, long-live HTTP2 stream).
    /// And if it is necessary, unique ID or identifier can be added to the log entry
    /// :ref:`stream_id &lt;envoy_v3_api_field_data.accesslog.v3.AccessLogCommon.stream_id>` to
    /// correlate all these intermediate log entries and final log entry.
    ///
    /// .. attention::
    ///
    ///   This field is deprecated in favor of ``access_log_type`` for better indication of the
    ///   type of the access log record.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IntermediateLogEntry {
      get { return intermediateLogEntry_; }
      set {
        intermediateLogEntry_ = value;
      }
    }

    /// <summary>Field number for the "downstream_transport_failure_reason" field.</summary>
    public const int DownstreamTransportFailureReasonFieldNumber = 28;
    private string downstreamTransportFailureReason_ = "";
    /// <summary>
    /// If downstream connection in listener failed due to transport socket (e.g. TLS handshake), provides the
    /// failure reason from the transport socket. The format of this field depends on the configured downstream
    /// transport socket. Common TLS failures are in :ref:`TLS trouble shooting &lt;arch_overview_ssl_trouble_shooting>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DownstreamTransportFailureReason {
      get { return downstreamTransportFailureReason_; }
      set {
        downstreamTransportFailureReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "downstream_wire_bytes_sent" field.</summary>
    public const int DownstreamWireBytesSentFieldNumber = 29;
    private ulong downstreamWireBytesSent_;
    /// <summary>
    /// For HTTP: Total number of bytes sent to the downstream by the http stream.
    /// For TCP: Total number of bytes sent to the downstream by the tcp proxy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DownstreamWireBytesSent {
      get { return downstreamWireBytesSent_; }
      set {
        downstreamWireBytesSent_ = value;
      }
    }

    /// <summary>Field number for the "downstream_wire_bytes_received" field.</summary>
    public const int DownstreamWireBytesReceivedFieldNumber = 30;
    private ulong downstreamWireBytesReceived_;
    /// <summary>
    /// For HTTP: Total number of bytes received from the downstream by the http stream. Envoy over counts sizes of received HTTP/1.1 pipelined requests by adding up bytes of requests in the pipeline to the one currently being processed.
    /// For TCP: Total number of bytes received from the downstream by the tcp proxy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DownstreamWireBytesReceived {
      get { return downstreamWireBytesReceived_; }
      set {
        downstreamWireBytesReceived_ = value;
      }
    }

    /// <summary>Field number for the "upstream_wire_bytes_sent" field.</summary>
    public const int UpstreamWireBytesSentFieldNumber = 31;
    private ulong upstreamWireBytesSent_;
    /// <summary>
    /// For HTTP: Total number of bytes sent to the upstream by the http stream. This value accumulates during upstream retries.
    /// For TCP: Total number of bytes sent to the upstream by the tcp proxy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UpstreamWireBytesSent {
      get { return upstreamWireBytesSent_; }
      set {
        upstreamWireBytesSent_ = value;
      }
    }

    /// <summary>Field number for the "upstream_wire_bytes_received" field.</summary>
    public const int UpstreamWireBytesReceivedFieldNumber = 32;
    private ulong upstreamWireBytesReceived_;
    /// <summary>
    /// For HTTP: Total number of bytes received from the upstream by the http stream.
    /// For TCP: Total number of bytes sent to the upstream by the tcp proxy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UpstreamWireBytesReceived {
      get { return upstreamWireBytesReceived_; }
      set {
        upstreamWireBytesReceived_ = value;
      }
    }

    /// <summary>Field number for the "access_log_type" field.</summary>
    public const int AccessLogTypeFieldNumber = 33;
    private global::Envoy.Data.Accesslog.V3.AccessLogType accessLogType_ = global::Envoy.Data.Accesslog.V3.AccessLogType.NotSet;
    /// <summary>
    /// The type of the access log, which indicates when the log was recorded.
    /// See :ref:`ACCESS_LOG_TYPE &lt;config_access_log_format_access_log_type>` for the available values.
    /// In case the access log was recorded by a flow which does not correspond to one of the supported
    /// values, then the default value will be ``NotSet``.
    /// For more information about how access log behaves and when it is being recorded,
    /// please refer to :ref:`access logging &lt;arch_overview_access_logs>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.AccessLogType AccessLogType {
      get { return accessLogType_; }
      set {
        accessLogType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccessLogCommon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccessLogCommon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SampleRate, other.SampleRate)) return false;
      if (!object.Equals(DownstreamRemoteAddress, other.DownstreamRemoteAddress)) return false;
      if (!object.Equals(DownstreamLocalAddress, other.DownstreamLocalAddress)) return false;
      if (!object.Equals(TlsProperties, other.TlsProperties)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(TimeToLastRxByte, other.TimeToLastRxByte)) return false;
      if (!object.Equals(TimeToFirstUpstreamTxByte, other.TimeToFirstUpstreamTxByte)) return false;
      if (!object.Equals(TimeToLastUpstreamTxByte, other.TimeToLastUpstreamTxByte)) return false;
      if (!object.Equals(TimeToFirstUpstreamRxByte, other.TimeToFirstUpstreamRxByte)) return false;
      if (!object.Equals(TimeToLastUpstreamRxByte, other.TimeToLastUpstreamRxByte)) return false;
      if (!object.Equals(TimeToFirstDownstreamTxByte, other.TimeToFirstDownstreamTxByte)) return false;
      if (!object.Equals(TimeToLastDownstreamTxByte, other.TimeToLastDownstreamTxByte)) return false;
      if (!object.Equals(UpstreamRemoteAddress, other.UpstreamRemoteAddress)) return false;
      if (!object.Equals(UpstreamLocalAddress, other.UpstreamLocalAddress)) return false;
      if (UpstreamCluster != other.UpstreamCluster) return false;
      if (!object.Equals(ResponseFlags, other.ResponseFlags)) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (UpstreamTransportFailureReason != other.UpstreamTransportFailureReason) return false;
      if (RouteName != other.RouteName) return false;
      if (!object.Equals(DownstreamDirectRemoteAddress, other.DownstreamDirectRemoteAddress)) return false;
      if (!FilterStateObjects.Equals(other.FilterStateObjects)) return false;
      if (!CustomTags.Equals(other.CustomTags)) return false;
      if (!object.Equals(Duration, other.Duration)) return false;
      if (UpstreamRequestAttemptCount != other.UpstreamRequestAttemptCount) return false;
      if (ConnectionTerminationDetails != other.ConnectionTerminationDetails) return false;
      if (StreamId != other.StreamId) return false;
      if (IntermediateLogEntry != other.IntermediateLogEntry) return false;
      if (DownstreamTransportFailureReason != other.DownstreamTransportFailureReason) return false;
      if (DownstreamWireBytesSent != other.DownstreamWireBytesSent) return false;
      if (DownstreamWireBytesReceived != other.DownstreamWireBytesReceived) return false;
      if (UpstreamWireBytesSent != other.UpstreamWireBytesSent) return false;
      if (UpstreamWireBytesReceived != other.UpstreamWireBytesReceived) return false;
      if (AccessLogType != other.AccessLogType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SampleRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SampleRate);
      if (downstreamRemoteAddress_ != null) hash ^= DownstreamRemoteAddress.GetHashCode();
      if (downstreamLocalAddress_ != null) hash ^= DownstreamLocalAddress.GetHashCode();
      if (tlsProperties_ != null) hash ^= TlsProperties.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (timeToLastRxByte_ != null) hash ^= TimeToLastRxByte.GetHashCode();
      if (timeToFirstUpstreamTxByte_ != null) hash ^= TimeToFirstUpstreamTxByte.GetHashCode();
      if (timeToLastUpstreamTxByte_ != null) hash ^= TimeToLastUpstreamTxByte.GetHashCode();
      if (timeToFirstUpstreamRxByte_ != null) hash ^= TimeToFirstUpstreamRxByte.GetHashCode();
      if (timeToLastUpstreamRxByte_ != null) hash ^= TimeToLastUpstreamRxByte.GetHashCode();
      if (timeToFirstDownstreamTxByte_ != null) hash ^= TimeToFirstDownstreamTxByte.GetHashCode();
      if (timeToLastDownstreamTxByte_ != null) hash ^= TimeToLastDownstreamTxByte.GetHashCode();
      if (upstreamRemoteAddress_ != null) hash ^= UpstreamRemoteAddress.GetHashCode();
      if (upstreamLocalAddress_ != null) hash ^= UpstreamLocalAddress.GetHashCode();
      if (UpstreamCluster.Length != 0) hash ^= UpstreamCluster.GetHashCode();
      if (responseFlags_ != null) hash ^= ResponseFlags.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (UpstreamTransportFailureReason.Length != 0) hash ^= UpstreamTransportFailureReason.GetHashCode();
      if (RouteName.Length != 0) hash ^= RouteName.GetHashCode();
      if (downstreamDirectRemoteAddress_ != null) hash ^= DownstreamDirectRemoteAddress.GetHashCode();
      hash ^= FilterStateObjects.GetHashCode();
      hash ^= CustomTags.GetHashCode();
      if (duration_ != null) hash ^= Duration.GetHashCode();
      if (UpstreamRequestAttemptCount != 0) hash ^= UpstreamRequestAttemptCount.GetHashCode();
      if (ConnectionTerminationDetails.Length != 0) hash ^= ConnectionTerminationDetails.GetHashCode();
      if (StreamId.Length != 0) hash ^= StreamId.GetHashCode();
      if (IntermediateLogEntry != false) hash ^= IntermediateLogEntry.GetHashCode();
      if (DownstreamTransportFailureReason.Length != 0) hash ^= DownstreamTransportFailureReason.GetHashCode();
      if (DownstreamWireBytesSent != 0UL) hash ^= DownstreamWireBytesSent.GetHashCode();
      if (DownstreamWireBytesReceived != 0UL) hash ^= DownstreamWireBytesReceived.GetHashCode();
      if (UpstreamWireBytesSent != 0UL) hash ^= UpstreamWireBytesSent.GetHashCode();
      if (UpstreamWireBytesReceived != 0UL) hash ^= UpstreamWireBytesReceived.GetHashCode();
      if (AccessLogType != global::Envoy.Data.Accesslog.V3.AccessLogType.NotSet) hash ^= AccessLogType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SampleRate != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(SampleRate);
      }
      if (downstreamRemoteAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DownstreamRemoteAddress);
      }
      if (downstreamLocalAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DownstreamLocalAddress);
      }
      if (tlsProperties_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TlsProperties);
      }
      if (startTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StartTime);
      }
      if (timeToLastRxByte_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TimeToLastRxByte);
      }
      if (timeToFirstUpstreamTxByte_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TimeToFirstUpstreamTxByte);
      }
      if (timeToLastUpstreamTxByte_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TimeToLastUpstreamTxByte);
      }
      if (timeToFirstUpstreamRxByte_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TimeToFirstUpstreamRxByte);
      }
      if (timeToLastUpstreamRxByte_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TimeToLastUpstreamRxByte);
      }
      if (timeToFirstDownstreamTxByte_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(TimeToFirstDownstreamTxByte);
      }
      if (timeToLastDownstreamTxByte_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(TimeToLastDownstreamTxByte);
      }
      if (upstreamRemoteAddress_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(UpstreamRemoteAddress);
      }
      if (upstreamLocalAddress_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(UpstreamLocalAddress);
      }
      if (UpstreamCluster.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(UpstreamCluster);
      }
      if (responseFlags_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ResponseFlags);
      }
      if (metadata_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Metadata);
      }
      if (UpstreamTransportFailureReason.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(UpstreamTransportFailureReason);
      }
      if (RouteName.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(RouteName);
      }
      if (downstreamDirectRemoteAddress_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(DownstreamDirectRemoteAddress);
      }
      filterStateObjects_.WriteTo(output, _map_filterStateObjects_codec);
      customTags_.WriteTo(output, _map_customTags_codec);
      if (duration_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Duration);
      }
      if (UpstreamRequestAttemptCount != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(UpstreamRequestAttemptCount);
      }
      if (ConnectionTerminationDetails.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ConnectionTerminationDetails);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(StreamId);
      }
      if (IntermediateLogEntry != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(IntermediateLogEntry);
      }
      if (DownstreamTransportFailureReason.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(DownstreamTransportFailureReason);
      }
      if (DownstreamWireBytesSent != 0UL) {
        output.WriteRawTag(232, 1);
        output.WriteUInt64(DownstreamWireBytesSent);
      }
      if (DownstreamWireBytesReceived != 0UL) {
        output.WriteRawTag(240, 1);
        output.WriteUInt64(DownstreamWireBytesReceived);
      }
      if (UpstreamWireBytesSent != 0UL) {
        output.WriteRawTag(248, 1);
        output.WriteUInt64(UpstreamWireBytesSent);
      }
      if (UpstreamWireBytesReceived != 0UL) {
        output.WriteRawTag(128, 2);
        output.WriteUInt64(UpstreamWireBytesReceived);
      }
      if (AccessLogType != global::Envoy.Data.Accesslog.V3.AccessLogType.NotSet) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) AccessLogType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SampleRate != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(SampleRate);
      }
      if (downstreamRemoteAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DownstreamRemoteAddress);
      }
      if (downstreamLocalAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DownstreamLocalAddress);
      }
      if (tlsProperties_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TlsProperties);
      }
      if (startTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StartTime);
      }
      if (timeToLastRxByte_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TimeToLastRxByte);
      }
      if (timeToFirstUpstreamTxByte_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TimeToFirstUpstreamTxByte);
      }
      if (timeToLastUpstreamTxByte_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TimeToLastUpstreamTxByte);
      }
      if (timeToFirstUpstreamRxByte_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TimeToFirstUpstreamRxByte);
      }
      if (timeToLastUpstreamRxByte_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TimeToLastUpstreamRxByte);
      }
      if (timeToFirstDownstreamTxByte_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(TimeToFirstDownstreamTxByte);
      }
      if (timeToLastDownstreamTxByte_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(TimeToLastDownstreamTxByte);
      }
      if (upstreamRemoteAddress_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(UpstreamRemoteAddress);
      }
      if (upstreamLocalAddress_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(UpstreamLocalAddress);
      }
      if (UpstreamCluster.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(UpstreamCluster);
      }
      if (responseFlags_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ResponseFlags);
      }
      if (metadata_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Metadata);
      }
      if (UpstreamTransportFailureReason.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(UpstreamTransportFailureReason);
      }
      if (RouteName.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(RouteName);
      }
      if (downstreamDirectRemoteAddress_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(DownstreamDirectRemoteAddress);
      }
      filterStateObjects_.WriteTo(ref output, _map_filterStateObjects_codec);
      customTags_.WriteTo(ref output, _map_customTags_codec);
      if (duration_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Duration);
      }
      if (UpstreamRequestAttemptCount != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(UpstreamRequestAttemptCount);
      }
      if (ConnectionTerminationDetails.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ConnectionTerminationDetails);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(StreamId);
      }
      if (IntermediateLogEntry != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(IntermediateLogEntry);
      }
      if (DownstreamTransportFailureReason.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(DownstreamTransportFailureReason);
      }
      if (DownstreamWireBytesSent != 0UL) {
        output.WriteRawTag(232, 1);
        output.WriteUInt64(DownstreamWireBytesSent);
      }
      if (DownstreamWireBytesReceived != 0UL) {
        output.WriteRawTag(240, 1);
        output.WriteUInt64(DownstreamWireBytesReceived);
      }
      if (UpstreamWireBytesSent != 0UL) {
        output.WriteRawTag(248, 1);
        output.WriteUInt64(UpstreamWireBytesSent);
      }
      if (UpstreamWireBytesReceived != 0UL) {
        output.WriteRawTag(128, 2);
        output.WriteUInt64(UpstreamWireBytesReceived);
      }
      if (AccessLogType != global::Envoy.Data.Accesslog.V3.AccessLogType.NotSet) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) AccessLogType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SampleRate != 0D) {
        size += 1 + 8;
      }
      if (downstreamRemoteAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownstreamRemoteAddress);
      }
      if (downstreamLocalAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownstreamLocalAddress);
      }
      if (tlsProperties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TlsProperties);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (timeToLastRxByte_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeToLastRxByte);
      }
      if (timeToFirstUpstreamTxByte_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeToFirstUpstreamTxByte);
      }
      if (timeToLastUpstreamTxByte_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeToLastUpstreamTxByte);
      }
      if (timeToFirstUpstreamRxByte_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeToFirstUpstreamRxByte);
      }
      if (timeToLastUpstreamRxByte_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeToLastUpstreamRxByte);
      }
      if (timeToFirstDownstreamTxByte_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeToFirstDownstreamTxByte);
      }
      if (timeToLastDownstreamTxByte_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeToLastDownstreamTxByte);
      }
      if (upstreamRemoteAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpstreamRemoteAddress);
      }
      if (upstreamLocalAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpstreamLocalAddress);
      }
      if (UpstreamCluster.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpstreamCluster);
      }
      if (responseFlags_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResponseFlags);
      }
      if (metadata_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (UpstreamTransportFailureReason.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpstreamTransportFailureReason);
      }
      if (RouteName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RouteName);
      }
      if (downstreamDirectRemoteAddress_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DownstreamDirectRemoteAddress);
      }
      size += filterStateObjects_.CalculateSize(_map_filterStateObjects_codec);
      size += customTags_.CalculateSize(_map_customTags_codec);
      if (duration_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Duration);
      }
      if (UpstreamRequestAttemptCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UpstreamRequestAttemptCount);
      }
      if (ConnectionTerminationDetails.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConnectionTerminationDetails);
      }
      if (StreamId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StreamId);
      }
      if (IntermediateLogEntry != false) {
        size += 2 + 1;
      }
      if (DownstreamTransportFailureReason.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DownstreamTransportFailureReason);
      }
      if (DownstreamWireBytesSent != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(DownstreamWireBytesSent);
      }
      if (DownstreamWireBytesReceived != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(DownstreamWireBytesReceived);
      }
      if (UpstreamWireBytesSent != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(UpstreamWireBytesSent);
      }
      if (UpstreamWireBytesReceived != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(UpstreamWireBytesReceived);
      }
      if (AccessLogType != global::Envoy.Data.Accesslog.V3.AccessLogType.NotSet) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AccessLogType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccessLogCommon other) {
      if (other == null) {
        return;
      }
      if (other.SampleRate != 0D) {
        SampleRate = other.SampleRate;
      }
      if (other.downstreamRemoteAddress_ != null) {
        if (downstreamRemoteAddress_ == null) {
          DownstreamRemoteAddress = new global::Envoy.Config.Core.V3.Address();
        }
        DownstreamRemoteAddress.MergeFrom(other.DownstreamRemoteAddress);
      }
      if (other.downstreamLocalAddress_ != null) {
        if (downstreamLocalAddress_ == null) {
          DownstreamLocalAddress = new global::Envoy.Config.Core.V3.Address();
        }
        DownstreamLocalAddress.MergeFrom(other.DownstreamLocalAddress);
      }
      if (other.tlsProperties_ != null) {
        if (tlsProperties_ == null) {
          TlsProperties = new global::Envoy.Data.Accesslog.V3.TLSProperties();
        }
        TlsProperties.MergeFrom(other.TlsProperties);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.timeToLastRxByte_ != null) {
        if (timeToLastRxByte_ == null) {
          TimeToLastRxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeToLastRxByte.MergeFrom(other.TimeToLastRxByte);
      }
      if (other.timeToFirstUpstreamTxByte_ != null) {
        if (timeToFirstUpstreamTxByte_ == null) {
          TimeToFirstUpstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeToFirstUpstreamTxByte.MergeFrom(other.TimeToFirstUpstreamTxByte);
      }
      if (other.timeToLastUpstreamTxByte_ != null) {
        if (timeToLastUpstreamTxByte_ == null) {
          TimeToLastUpstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeToLastUpstreamTxByte.MergeFrom(other.TimeToLastUpstreamTxByte);
      }
      if (other.timeToFirstUpstreamRxByte_ != null) {
        if (timeToFirstUpstreamRxByte_ == null) {
          TimeToFirstUpstreamRxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeToFirstUpstreamRxByte.MergeFrom(other.TimeToFirstUpstreamRxByte);
      }
      if (other.timeToLastUpstreamRxByte_ != null) {
        if (timeToLastUpstreamRxByte_ == null) {
          TimeToLastUpstreamRxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeToLastUpstreamRxByte.MergeFrom(other.TimeToLastUpstreamRxByte);
      }
      if (other.timeToFirstDownstreamTxByte_ != null) {
        if (timeToFirstDownstreamTxByte_ == null) {
          TimeToFirstDownstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeToFirstDownstreamTxByte.MergeFrom(other.TimeToFirstDownstreamTxByte);
      }
      if (other.timeToLastDownstreamTxByte_ != null) {
        if (timeToLastDownstreamTxByte_ == null) {
          TimeToLastDownstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeToLastDownstreamTxByte.MergeFrom(other.TimeToLastDownstreamTxByte);
      }
      if (other.upstreamRemoteAddress_ != null) {
        if (upstreamRemoteAddress_ == null) {
          UpstreamRemoteAddress = new global::Envoy.Config.Core.V3.Address();
        }
        UpstreamRemoteAddress.MergeFrom(other.UpstreamRemoteAddress);
      }
      if (other.upstreamLocalAddress_ != null) {
        if (upstreamLocalAddress_ == null) {
          UpstreamLocalAddress = new global::Envoy.Config.Core.V3.Address();
        }
        UpstreamLocalAddress.MergeFrom(other.UpstreamLocalAddress);
      }
      if (other.UpstreamCluster.Length != 0) {
        UpstreamCluster = other.UpstreamCluster;
      }
      if (other.responseFlags_ != null) {
        if (responseFlags_ == null) {
          ResponseFlags = new global::Envoy.Data.Accesslog.V3.ResponseFlags();
        }
        ResponseFlags.MergeFrom(other.ResponseFlags);
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Envoy.Config.Core.V3.Metadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.UpstreamTransportFailureReason.Length != 0) {
        UpstreamTransportFailureReason = other.UpstreamTransportFailureReason;
      }
      if (other.RouteName.Length != 0) {
        RouteName = other.RouteName;
      }
      if (other.downstreamDirectRemoteAddress_ != null) {
        if (downstreamDirectRemoteAddress_ == null) {
          DownstreamDirectRemoteAddress = new global::Envoy.Config.Core.V3.Address();
        }
        DownstreamDirectRemoteAddress.MergeFrom(other.DownstreamDirectRemoteAddress);
      }
      filterStateObjects_.MergeFrom(other.filterStateObjects_);
      customTags_.MergeFrom(other.customTags_);
      if (other.duration_ != null) {
        if (duration_ == null) {
          Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Duration.MergeFrom(other.Duration);
      }
      if (other.UpstreamRequestAttemptCount != 0) {
        UpstreamRequestAttemptCount = other.UpstreamRequestAttemptCount;
      }
      if (other.ConnectionTerminationDetails.Length != 0) {
        ConnectionTerminationDetails = other.ConnectionTerminationDetails;
      }
      if (other.StreamId.Length != 0) {
        StreamId = other.StreamId;
      }
      if (other.IntermediateLogEntry != false) {
        IntermediateLogEntry = other.IntermediateLogEntry;
      }
      if (other.DownstreamTransportFailureReason.Length != 0) {
        DownstreamTransportFailureReason = other.DownstreamTransportFailureReason;
      }
      if (other.DownstreamWireBytesSent != 0UL) {
        DownstreamWireBytesSent = other.DownstreamWireBytesSent;
      }
      if (other.DownstreamWireBytesReceived != 0UL) {
        DownstreamWireBytesReceived = other.DownstreamWireBytesReceived;
      }
      if (other.UpstreamWireBytesSent != 0UL) {
        UpstreamWireBytesSent = other.UpstreamWireBytesSent;
      }
      if (other.UpstreamWireBytesReceived != 0UL) {
        UpstreamWireBytesReceived = other.UpstreamWireBytesReceived;
      }
      if (other.AccessLogType != global::Envoy.Data.Accesslog.V3.AccessLogType.NotSet) {
        AccessLogType = other.AccessLogType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SampleRate = input.ReadDouble();
            break;
          }
          case 18: {
            if (downstreamRemoteAddress_ == null) {
              DownstreamRemoteAddress = new global::Envoy.Config.Core.V3.Address();
            }
            input.ReadMessage(DownstreamRemoteAddress);
            break;
          }
          case 26: {
            if (downstreamLocalAddress_ == null) {
              DownstreamLocalAddress = new global::Envoy.Config.Core.V3.Address();
            }
            input.ReadMessage(DownstreamLocalAddress);
            break;
          }
          case 34: {
            if (tlsProperties_ == null) {
              TlsProperties = new global::Envoy.Data.Accesslog.V3.TLSProperties();
            }
            input.ReadMessage(TlsProperties);
            break;
          }
          case 42: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 50: {
            if (timeToLastRxByte_ == null) {
              TimeToLastRxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToLastRxByte);
            break;
          }
          case 58: {
            if (timeToFirstUpstreamTxByte_ == null) {
              TimeToFirstUpstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToFirstUpstreamTxByte);
            break;
          }
          case 66: {
            if (timeToLastUpstreamTxByte_ == null) {
              TimeToLastUpstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToLastUpstreamTxByte);
            break;
          }
          case 74: {
            if (timeToFirstUpstreamRxByte_ == null) {
              TimeToFirstUpstreamRxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToFirstUpstreamRxByte);
            break;
          }
          case 82: {
            if (timeToLastUpstreamRxByte_ == null) {
              TimeToLastUpstreamRxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToLastUpstreamRxByte);
            break;
          }
          case 90: {
            if (timeToFirstDownstreamTxByte_ == null) {
              TimeToFirstDownstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToFirstDownstreamTxByte);
            break;
          }
          case 98: {
            if (timeToLastDownstreamTxByte_ == null) {
              TimeToLastDownstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToLastDownstreamTxByte);
            break;
          }
          case 106: {
            if (upstreamRemoteAddress_ == null) {
              UpstreamRemoteAddress = new global::Envoy.Config.Core.V3.Address();
            }
            input.ReadMessage(UpstreamRemoteAddress);
            break;
          }
          case 114: {
            if (upstreamLocalAddress_ == null) {
              UpstreamLocalAddress = new global::Envoy.Config.Core.V3.Address();
            }
            input.ReadMessage(UpstreamLocalAddress);
            break;
          }
          case 122: {
            UpstreamCluster = input.ReadString();
            break;
          }
          case 130: {
            if (responseFlags_ == null) {
              ResponseFlags = new global::Envoy.Data.Accesslog.V3.ResponseFlags();
            }
            input.ReadMessage(ResponseFlags);
            break;
          }
          case 138: {
            if (metadata_ == null) {
              Metadata = new global::Envoy.Config.Core.V3.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 146: {
            UpstreamTransportFailureReason = input.ReadString();
            break;
          }
          case 154: {
            RouteName = input.ReadString();
            break;
          }
          case 162: {
            if (downstreamDirectRemoteAddress_ == null) {
              DownstreamDirectRemoteAddress = new global::Envoy.Config.Core.V3.Address();
            }
            input.ReadMessage(DownstreamDirectRemoteAddress);
            break;
          }
          case 170: {
            filterStateObjects_.AddEntriesFrom(input, _map_filterStateObjects_codec);
            break;
          }
          case 178: {
            customTags_.AddEntriesFrom(input, _map_customTags_codec);
            break;
          }
          case 186: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 192: {
            UpstreamRequestAttemptCount = input.ReadUInt32();
            break;
          }
          case 202: {
            ConnectionTerminationDetails = input.ReadString();
            break;
          }
          case 210: {
            StreamId = input.ReadString();
            break;
          }
          case 216: {
            IntermediateLogEntry = input.ReadBool();
            break;
          }
          case 226: {
            DownstreamTransportFailureReason = input.ReadString();
            break;
          }
          case 232: {
            DownstreamWireBytesSent = input.ReadUInt64();
            break;
          }
          case 240: {
            DownstreamWireBytesReceived = input.ReadUInt64();
            break;
          }
          case 248: {
            UpstreamWireBytesSent = input.ReadUInt64();
            break;
          }
          case 256: {
            UpstreamWireBytesReceived = input.ReadUInt64();
            break;
          }
          case 264: {
            AccessLogType = (global::Envoy.Data.Accesslog.V3.AccessLogType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            SampleRate = input.ReadDouble();
            break;
          }
          case 18: {
            if (downstreamRemoteAddress_ == null) {
              DownstreamRemoteAddress = new global::Envoy.Config.Core.V3.Address();
            }
            input.ReadMessage(DownstreamRemoteAddress);
            break;
          }
          case 26: {
            if (downstreamLocalAddress_ == null) {
              DownstreamLocalAddress = new global::Envoy.Config.Core.V3.Address();
            }
            input.ReadMessage(DownstreamLocalAddress);
            break;
          }
          case 34: {
            if (tlsProperties_ == null) {
              TlsProperties = new global::Envoy.Data.Accesslog.V3.TLSProperties();
            }
            input.ReadMessage(TlsProperties);
            break;
          }
          case 42: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 50: {
            if (timeToLastRxByte_ == null) {
              TimeToLastRxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToLastRxByte);
            break;
          }
          case 58: {
            if (timeToFirstUpstreamTxByte_ == null) {
              TimeToFirstUpstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToFirstUpstreamTxByte);
            break;
          }
          case 66: {
            if (timeToLastUpstreamTxByte_ == null) {
              TimeToLastUpstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToLastUpstreamTxByte);
            break;
          }
          case 74: {
            if (timeToFirstUpstreamRxByte_ == null) {
              TimeToFirstUpstreamRxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToFirstUpstreamRxByte);
            break;
          }
          case 82: {
            if (timeToLastUpstreamRxByte_ == null) {
              TimeToLastUpstreamRxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToLastUpstreamRxByte);
            break;
          }
          case 90: {
            if (timeToFirstDownstreamTxByte_ == null) {
              TimeToFirstDownstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToFirstDownstreamTxByte);
            break;
          }
          case 98: {
            if (timeToLastDownstreamTxByte_ == null) {
              TimeToLastDownstreamTxByte = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeToLastDownstreamTxByte);
            break;
          }
          case 106: {
            if (upstreamRemoteAddress_ == null) {
              UpstreamRemoteAddress = new global::Envoy.Config.Core.V3.Address();
            }
            input.ReadMessage(UpstreamRemoteAddress);
            break;
          }
          case 114: {
            if (upstreamLocalAddress_ == null) {
              UpstreamLocalAddress = new global::Envoy.Config.Core.V3.Address();
            }
            input.ReadMessage(UpstreamLocalAddress);
            break;
          }
          case 122: {
            UpstreamCluster = input.ReadString();
            break;
          }
          case 130: {
            if (responseFlags_ == null) {
              ResponseFlags = new global::Envoy.Data.Accesslog.V3.ResponseFlags();
            }
            input.ReadMessage(ResponseFlags);
            break;
          }
          case 138: {
            if (metadata_ == null) {
              Metadata = new global::Envoy.Config.Core.V3.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 146: {
            UpstreamTransportFailureReason = input.ReadString();
            break;
          }
          case 154: {
            RouteName = input.ReadString();
            break;
          }
          case 162: {
            if (downstreamDirectRemoteAddress_ == null) {
              DownstreamDirectRemoteAddress = new global::Envoy.Config.Core.V3.Address();
            }
            input.ReadMessage(DownstreamDirectRemoteAddress);
            break;
          }
          case 170: {
            filterStateObjects_.AddEntriesFrom(ref input, _map_filterStateObjects_codec);
            break;
          }
          case 178: {
            customTags_.AddEntriesFrom(ref input, _map_customTags_codec);
            break;
          }
          case 186: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 192: {
            UpstreamRequestAttemptCount = input.ReadUInt32();
            break;
          }
          case 202: {
            ConnectionTerminationDetails = input.ReadString();
            break;
          }
          case 210: {
            StreamId = input.ReadString();
            break;
          }
          case 216: {
            IntermediateLogEntry = input.ReadBool();
            break;
          }
          case 226: {
            DownstreamTransportFailureReason = input.ReadString();
            break;
          }
          case 232: {
            DownstreamWireBytesSent = input.ReadUInt64();
            break;
          }
          case 240: {
            DownstreamWireBytesReceived = input.ReadUInt64();
            break;
          }
          case 248: {
            UpstreamWireBytesSent = input.ReadUInt64();
            break;
          }
          case 256: {
            UpstreamWireBytesReceived = input.ReadUInt64();
            break;
          }
          case 264: {
            AccessLogType = (global::Envoy.Data.Accesslog.V3.AccessLogType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Flags indicating occurrences during request/response processing.
  /// [#next-free-field: 28]
  /// </summary>
  public sealed partial class ResponseFlags : pb::IMessage<ResponseFlags>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResponseFlags> _parser = new pb::MessageParser<ResponseFlags>(() => new ResponseFlags());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResponseFlags> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Accesslog.V3.AccesslogReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseFlags() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseFlags(ResponseFlags other) : this() {
      failedLocalHealthcheck_ = other.failedLocalHealthcheck_;
      noHealthyUpstream_ = other.noHealthyUpstream_;
      upstreamRequestTimeout_ = other.upstreamRequestTimeout_;
      localReset_ = other.localReset_;
      upstreamRemoteReset_ = other.upstreamRemoteReset_;
      upstreamConnectionFailure_ = other.upstreamConnectionFailure_;
      upstreamConnectionTermination_ = other.upstreamConnectionTermination_;
      upstreamOverflow_ = other.upstreamOverflow_;
      noRouteFound_ = other.noRouteFound_;
      delayInjected_ = other.delayInjected_;
      faultInjected_ = other.faultInjected_;
      rateLimited_ = other.rateLimited_;
      unauthorizedDetails_ = other.unauthorizedDetails_ != null ? other.unauthorizedDetails_.Clone() : null;
      rateLimitServiceError_ = other.rateLimitServiceError_;
      downstreamConnectionTermination_ = other.downstreamConnectionTermination_;
      upstreamRetryLimitExceeded_ = other.upstreamRetryLimitExceeded_;
      streamIdleTimeout_ = other.streamIdleTimeout_;
      invalidEnvoyRequestHeaders_ = other.invalidEnvoyRequestHeaders_;
      downstreamProtocolError_ = other.downstreamProtocolError_;
      upstreamMaxStreamDurationReached_ = other.upstreamMaxStreamDurationReached_;
      responseFromCacheFilter_ = other.responseFromCacheFilter_;
      noFilterConfigFound_ = other.noFilterConfigFound_;
      durationTimeout_ = other.durationTimeout_;
      upstreamProtocolError_ = other.upstreamProtocolError_;
      noClusterFound_ = other.noClusterFound_;
      overloadManager_ = other.overloadManager_;
      dnsResolutionFailure_ = other.dnsResolutionFailure_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseFlags Clone() {
      return new ResponseFlags(this);
    }

    /// <summary>Field number for the "failed_local_healthcheck" field.</summary>
    public const int FailedLocalHealthcheckFieldNumber = 1;
    private bool failedLocalHealthcheck_;
    /// <summary>
    /// Indicates local server healthcheck failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FailedLocalHealthcheck {
      get { return failedLocalHealthcheck_; }
      set {
        failedLocalHealthcheck_ = value;
      }
    }

    /// <summary>Field number for the "no_healthy_upstream" field.</summary>
    public const int NoHealthyUpstreamFieldNumber = 2;
    private bool noHealthyUpstream_;
    /// <summary>
    /// Indicates there was no healthy upstream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NoHealthyUpstream {
      get { return noHealthyUpstream_; }
      set {
        noHealthyUpstream_ = value;
      }
    }

    /// <summary>Field number for the "upstream_request_timeout" field.</summary>
    public const int UpstreamRequestTimeoutFieldNumber = 3;
    private bool upstreamRequestTimeout_;
    /// <summary>
    /// Indicates an there was an upstream request timeout.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UpstreamRequestTimeout {
      get { return upstreamRequestTimeout_; }
      set {
        upstreamRequestTimeout_ = value;
      }
    }

    /// <summary>Field number for the "local_reset" field.</summary>
    public const int LocalResetFieldNumber = 4;
    private bool localReset_;
    /// <summary>
    /// Indicates local codec level reset was sent on the stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LocalReset {
      get { return localReset_; }
      set {
        localReset_ = value;
      }
    }

    /// <summary>Field number for the "upstream_remote_reset" field.</summary>
    public const int UpstreamRemoteResetFieldNumber = 5;
    private bool upstreamRemoteReset_;
    /// <summary>
    /// Indicates remote codec level reset was received on the stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UpstreamRemoteReset {
      get { return upstreamRemoteReset_; }
      set {
        upstreamRemoteReset_ = value;
      }
    }

    /// <summary>Field number for the "upstream_connection_failure" field.</summary>
    public const int UpstreamConnectionFailureFieldNumber = 6;
    private bool upstreamConnectionFailure_;
    /// <summary>
    /// Indicates there was a local reset by a connection pool due to an initial connection failure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UpstreamConnectionFailure {
      get { return upstreamConnectionFailure_; }
      set {
        upstreamConnectionFailure_ = value;
      }
    }

    /// <summary>Field number for the "upstream_connection_termination" field.</summary>
    public const int UpstreamConnectionTerminationFieldNumber = 7;
    private bool upstreamConnectionTermination_;
    /// <summary>
    /// Indicates the stream was reset due to an upstream connection termination.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UpstreamConnectionTermination {
      get { return upstreamConnectionTermination_; }
      set {
        upstreamConnectionTermination_ = value;
      }
    }

    /// <summary>Field number for the "upstream_overflow" field.</summary>
    public const int UpstreamOverflowFieldNumber = 8;
    private bool upstreamOverflow_;
    /// <summary>
    /// Indicates the stream was reset because of a resource overflow.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UpstreamOverflow {
      get { return upstreamOverflow_; }
      set {
        upstreamOverflow_ = value;
      }
    }

    /// <summary>Field number for the "no_route_found" field.</summary>
    public const int NoRouteFoundFieldNumber = 9;
    private bool noRouteFound_;
    /// <summary>
    /// Indicates no route was found for the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NoRouteFound {
      get { return noRouteFound_; }
      set {
        noRouteFound_ = value;
      }
    }

    /// <summary>Field number for the "delay_injected" field.</summary>
    public const int DelayInjectedFieldNumber = 10;
    private bool delayInjected_;
    /// <summary>
    /// Indicates that the request was delayed before proxying.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DelayInjected {
      get { return delayInjected_; }
      set {
        delayInjected_ = value;
      }
    }

    /// <summary>Field number for the "fault_injected" field.</summary>
    public const int FaultInjectedFieldNumber = 11;
    private bool faultInjected_;
    /// <summary>
    /// Indicates that the request was aborted with an injected error code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FaultInjected {
      get { return faultInjected_; }
      set {
        faultInjected_ = value;
      }
    }

    /// <summary>Field number for the "rate_limited" field.</summary>
    public const int RateLimitedFieldNumber = 12;
    private bool rateLimited_;
    /// <summary>
    /// Indicates that the request was rate-limited locally.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RateLimited {
      get { return rateLimited_; }
      set {
        rateLimited_ = value;
      }
    }

    /// <summary>Field number for the "unauthorized_details" field.</summary>
    public const int UnauthorizedDetailsFieldNumber = 13;
    private global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized unauthorizedDetails_;
    /// <summary>
    /// Indicates if the request was deemed unauthorized and the reason for it.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized UnauthorizedDetails {
      get { return unauthorizedDetails_; }
      set {
        unauthorizedDetails_ = value;
      }
    }

    /// <summary>Field number for the "rate_limit_service_error" field.</summary>
    public const int RateLimitServiceErrorFieldNumber = 14;
    private bool rateLimitServiceError_;
    /// <summary>
    /// Indicates that the request was rejected because there was an error in rate limit service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RateLimitServiceError {
      get { return rateLimitServiceError_; }
      set {
        rateLimitServiceError_ = value;
      }
    }

    /// <summary>Field number for the "downstream_connection_termination" field.</summary>
    public const int DownstreamConnectionTerminationFieldNumber = 15;
    private bool downstreamConnectionTermination_;
    /// <summary>
    /// Indicates the stream was reset due to a downstream connection termination.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DownstreamConnectionTermination {
      get { return downstreamConnectionTermination_; }
      set {
        downstreamConnectionTermination_ = value;
      }
    }

    /// <summary>Field number for the "upstream_retry_limit_exceeded" field.</summary>
    public const int UpstreamRetryLimitExceededFieldNumber = 16;
    private bool upstreamRetryLimitExceeded_;
    /// <summary>
    /// Indicates that the upstream retry limit was exceeded, resulting in a downstream error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UpstreamRetryLimitExceeded {
      get { return upstreamRetryLimitExceeded_; }
      set {
        upstreamRetryLimitExceeded_ = value;
      }
    }

    /// <summary>Field number for the "stream_idle_timeout" field.</summary>
    public const int StreamIdleTimeoutFieldNumber = 17;
    private bool streamIdleTimeout_;
    /// <summary>
    /// Indicates that the stream idle timeout was hit, resulting in a downstream 408.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StreamIdleTimeout {
      get { return streamIdleTimeout_; }
      set {
        streamIdleTimeout_ = value;
      }
    }

    /// <summary>Field number for the "invalid_envoy_request_headers" field.</summary>
    public const int InvalidEnvoyRequestHeadersFieldNumber = 18;
    private bool invalidEnvoyRequestHeaders_;
    /// <summary>
    /// Indicates that the request was rejected because an envoy request header failed strict
    /// validation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InvalidEnvoyRequestHeaders {
      get { return invalidEnvoyRequestHeaders_; }
      set {
        invalidEnvoyRequestHeaders_ = value;
      }
    }

    /// <summary>Field number for the "downstream_protocol_error" field.</summary>
    public const int DownstreamProtocolErrorFieldNumber = 19;
    private bool downstreamProtocolError_;
    /// <summary>
    /// Indicates there was an HTTP protocol error on the downstream request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DownstreamProtocolError {
      get { return downstreamProtocolError_; }
      set {
        downstreamProtocolError_ = value;
      }
    }

    /// <summary>Field number for the "upstream_max_stream_duration_reached" field.</summary>
    public const int UpstreamMaxStreamDurationReachedFieldNumber = 20;
    private bool upstreamMaxStreamDurationReached_;
    /// <summary>
    /// Indicates there was a max stream duration reached on the upstream request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UpstreamMaxStreamDurationReached {
      get { return upstreamMaxStreamDurationReached_; }
      set {
        upstreamMaxStreamDurationReached_ = value;
      }
    }

    /// <summary>Field number for the "response_from_cache_filter" field.</summary>
    public const int ResponseFromCacheFilterFieldNumber = 21;
    private bool responseFromCacheFilter_;
    /// <summary>
    /// Indicates the response was served from a cache filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ResponseFromCacheFilter {
      get { return responseFromCacheFilter_; }
      set {
        responseFromCacheFilter_ = value;
      }
    }

    /// <summary>Field number for the "no_filter_config_found" field.</summary>
    public const int NoFilterConfigFoundFieldNumber = 22;
    private bool noFilterConfigFound_;
    /// <summary>
    /// Indicates that a filter configuration is not available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NoFilterConfigFound {
      get { return noFilterConfigFound_; }
      set {
        noFilterConfigFound_ = value;
      }
    }

    /// <summary>Field number for the "duration_timeout" field.</summary>
    public const int DurationTimeoutFieldNumber = 23;
    private bool durationTimeout_;
    /// <summary>
    /// Indicates that request or connection exceeded the downstream connection duration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DurationTimeout {
      get { return durationTimeout_; }
      set {
        durationTimeout_ = value;
      }
    }

    /// <summary>Field number for the "upstream_protocol_error" field.</summary>
    public const int UpstreamProtocolErrorFieldNumber = 24;
    private bool upstreamProtocolError_;
    /// <summary>
    /// Indicates there was an HTTP protocol error in the upstream response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UpstreamProtocolError {
      get { return upstreamProtocolError_; }
      set {
        upstreamProtocolError_ = value;
      }
    }

    /// <summary>Field number for the "no_cluster_found" field.</summary>
    public const int NoClusterFoundFieldNumber = 25;
    private bool noClusterFound_;
    /// <summary>
    /// Indicates no cluster was found for the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NoClusterFound {
      get { return noClusterFound_; }
      set {
        noClusterFound_ = value;
      }
    }

    /// <summary>Field number for the "overload_manager" field.</summary>
    public const int OverloadManagerFieldNumber = 26;
    private bool overloadManager_;
    /// <summary>
    /// Indicates overload manager terminated the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OverloadManager {
      get { return overloadManager_; }
      set {
        overloadManager_ = value;
      }
    }

    /// <summary>Field number for the "dns_resolution_failure" field.</summary>
    public const int DnsResolutionFailureFieldNumber = 27;
    private bool dnsResolutionFailure_;
    /// <summary>
    /// Indicates a DNS resolution failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DnsResolutionFailure {
      get { return dnsResolutionFailure_; }
      set {
        dnsResolutionFailure_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResponseFlags);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResponseFlags other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FailedLocalHealthcheck != other.FailedLocalHealthcheck) return false;
      if (NoHealthyUpstream != other.NoHealthyUpstream) return false;
      if (UpstreamRequestTimeout != other.UpstreamRequestTimeout) return false;
      if (LocalReset != other.LocalReset) return false;
      if (UpstreamRemoteReset != other.UpstreamRemoteReset) return false;
      if (UpstreamConnectionFailure != other.UpstreamConnectionFailure) return false;
      if (UpstreamConnectionTermination != other.UpstreamConnectionTermination) return false;
      if (UpstreamOverflow != other.UpstreamOverflow) return false;
      if (NoRouteFound != other.NoRouteFound) return false;
      if (DelayInjected != other.DelayInjected) return false;
      if (FaultInjected != other.FaultInjected) return false;
      if (RateLimited != other.RateLimited) return false;
      if (!object.Equals(UnauthorizedDetails, other.UnauthorizedDetails)) return false;
      if (RateLimitServiceError != other.RateLimitServiceError) return false;
      if (DownstreamConnectionTermination != other.DownstreamConnectionTermination) return false;
      if (UpstreamRetryLimitExceeded != other.UpstreamRetryLimitExceeded) return false;
      if (StreamIdleTimeout != other.StreamIdleTimeout) return false;
      if (InvalidEnvoyRequestHeaders != other.InvalidEnvoyRequestHeaders) return false;
      if (DownstreamProtocolError != other.DownstreamProtocolError) return false;
      if (UpstreamMaxStreamDurationReached != other.UpstreamMaxStreamDurationReached) return false;
      if (ResponseFromCacheFilter != other.ResponseFromCacheFilter) return false;
      if (NoFilterConfigFound != other.NoFilterConfigFound) return false;
      if (DurationTimeout != other.DurationTimeout) return false;
      if (UpstreamProtocolError != other.UpstreamProtocolError) return false;
      if (NoClusterFound != other.NoClusterFound) return false;
      if (OverloadManager != other.OverloadManager) return false;
      if (DnsResolutionFailure != other.DnsResolutionFailure) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FailedLocalHealthcheck != false) hash ^= FailedLocalHealthcheck.GetHashCode();
      if (NoHealthyUpstream != false) hash ^= NoHealthyUpstream.GetHashCode();
      if (UpstreamRequestTimeout != false) hash ^= UpstreamRequestTimeout.GetHashCode();
      if (LocalReset != false) hash ^= LocalReset.GetHashCode();
      if (UpstreamRemoteReset != false) hash ^= UpstreamRemoteReset.GetHashCode();
      if (UpstreamConnectionFailure != false) hash ^= UpstreamConnectionFailure.GetHashCode();
      if (UpstreamConnectionTermination != false) hash ^= UpstreamConnectionTermination.GetHashCode();
      if (UpstreamOverflow != false) hash ^= UpstreamOverflow.GetHashCode();
      if (NoRouteFound != false) hash ^= NoRouteFound.GetHashCode();
      if (DelayInjected != false) hash ^= DelayInjected.GetHashCode();
      if (FaultInjected != false) hash ^= FaultInjected.GetHashCode();
      if (RateLimited != false) hash ^= RateLimited.GetHashCode();
      if (unauthorizedDetails_ != null) hash ^= UnauthorizedDetails.GetHashCode();
      if (RateLimitServiceError != false) hash ^= RateLimitServiceError.GetHashCode();
      if (DownstreamConnectionTermination != false) hash ^= DownstreamConnectionTermination.GetHashCode();
      if (UpstreamRetryLimitExceeded != false) hash ^= UpstreamRetryLimitExceeded.GetHashCode();
      if (StreamIdleTimeout != false) hash ^= StreamIdleTimeout.GetHashCode();
      if (InvalidEnvoyRequestHeaders != false) hash ^= InvalidEnvoyRequestHeaders.GetHashCode();
      if (DownstreamProtocolError != false) hash ^= DownstreamProtocolError.GetHashCode();
      if (UpstreamMaxStreamDurationReached != false) hash ^= UpstreamMaxStreamDurationReached.GetHashCode();
      if (ResponseFromCacheFilter != false) hash ^= ResponseFromCacheFilter.GetHashCode();
      if (NoFilterConfigFound != false) hash ^= NoFilterConfigFound.GetHashCode();
      if (DurationTimeout != false) hash ^= DurationTimeout.GetHashCode();
      if (UpstreamProtocolError != false) hash ^= UpstreamProtocolError.GetHashCode();
      if (NoClusterFound != false) hash ^= NoClusterFound.GetHashCode();
      if (OverloadManager != false) hash ^= OverloadManager.GetHashCode();
      if (DnsResolutionFailure != false) hash ^= DnsResolutionFailure.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FailedLocalHealthcheck != false) {
        output.WriteRawTag(8);
        output.WriteBool(FailedLocalHealthcheck);
      }
      if (NoHealthyUpstream != false) {
        output.WriteRawTag(16);
        output.WriteBool(NoHealthyUpstream);
      }
      if (UpstreamRequestTimeout != false) {
        output.WriteRawTag(24);
        output.WriteBool(UpstreamRequestTimeout);
      }
      if (LocalReset != false) {
        output.WriteRawTag(32);
        output.WriteBool(LocalReset);
      }
      if (UpstreamRemoteReset != false) {
        output.WriteRawTag(40);
        output.WriteBool(UpstreamRemoteReset);
      }
      if (UpstreamConnectionFailure != false) {
        output.WriteRawTag(48);
        output.WriteBool(UpstreamConnectionFailure);
      }
      if (UpstreamConnectionTermination != false) {
        output.WriteRawTag(56);
        output.WriteBool(UpstreamConnectionTermination);
      }
      if (UpstreamOverflow != false) {
        output.WriteRawTag(64);
        output.WriteBool(UpstreamOverflow);
      }
      if (NoRouteFound != false) {
        output.WriteRawTag(72);
        output.WriteBool(NoRouteFound);
      }
      if (DelayInjected != false) {
        output.WriteRawTag(80);
        output.WriteBool(DelayInjected);
      }
      if (FaultInjected != false) {
        output.WriteRawTag(88);
        output.WriteBool(FaultInjected);
      }
      if (RateLimited != false) {
        output.WriteRawTag(96);
        output.WriteBool(RateLimited);
      }
      if (unauthorizedDetails_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(UnauthorizedDetails);
      }
      if (RateLimitServiceError != false) {
        output.WriteRawTag(112);
        output.WriteBool(RateLimitServiceError);
      }
      if (DownstreamConnectionTermination != false) {
        output.WriteRawTag(120);
        output.WriteBool(DownstreamConnectionTermination);
      }
      if (UpstreamRetryLimitExceeded != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(UpstreamRetryLimitExceeded);
      }
      if (StreamIdleTimeout != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(StreamIdleTimeout);
      }
      if (InvalidEnvoyRequestHeaders != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(InvalidEnvoyRequestHeaders);
      }
      if (DownstreamProtocolError != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(DownstreamProtocolError);
      }
      if (UpstreamMaxStreamDurationReached != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(UpstreamMaxStreamDurationReached);
      }
      if (ResponseFromCacheFilter != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(ResponseFromCacheFilter);
      }
      if (NoFilterConfigFound != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(NoFilterConfigFound);
      }
      if (DurationTimeout != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(DurationTimeout);
      }
      if (UpstreamProtocolError != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(UpstreamProtocolError);
      }
      if (NoClusterFound != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(NoClusterFound);
      }
      if (OverloadManager != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(OverloadManager);
      }
      if (DnsResolutionFailure != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(DnsResolutionFailure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FailedLocalHealthcheck != false) {
        output.WriteRawTag(8);
        output.WriteBool(FailedLocalHealthcheck);
      }
      if (NoHealthyUpstream != false) {
        output.WriteRawTag(16);
        output.WriteBool(NoHealthyUpstream);
      }
      if (UpstreamRequestTimeout != false) {
        output.WriteRawTag(24);
        output.WriteBool(UpstreamRequestTimeout);
      }
      if (LocalReset != false) {
        output.WriteRawTag(32);
        output.WriteBool(LocalReset);
      }
      if (UpstreamRemoteReset != false) {
        output.WriteRawTag(40);
        output.WriteBool(UpstreamRemoteReset);
      }
      if (UpstreamConnectionFailure != false) {
        output.WriteRawTag(48);
        output.WriteBool(UpstreamConnectionFailure);
      }
      if (UpstreamConnectionTermination != false) {
        output.WriteRawTag(56);
        output.WriteBool(UpstreamConnectionTermination);
      }
      if (UpstreamOverflow != false) {
        output.WriteRawTag(64);
        output.WriteBool(UpstreamOverflow);
      }
      if (NoRouteFound != false) {
        output.WriteRawTag(72);
        output.WriteBool(NoRouteFound);
      }
      if (DelayInjected != false) {
        output.WriteRawTag(80);
        output.WriteBool(DelayInjected);
      }
      if (FaultInjected != false) {
        output.WriteRawTag(88);
        output.WriteBool(FaultInjected);
      }
      if (RateLimited != false) {
        output.WriteRawTag(96);
        output.WriteBool(RateLimited);
      }
      if (unauthorizedDetails_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(UnauthorizedDetails);
      }
      if (RateLimitServiceError != false) {
        output.WriteRawTag(112);
        output.WriteBool(RateLimitServiceError);
      }
      if (DownstreamConnectionTermination != false) {
        output.WriteRawTag(120);
        output.WriteBool(DownstreamConnectionTermination);
      }
      if (UpstreamRetryLimitExceeded != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(UpstreamRetryLimitExceeded);
      }
      if (StreamIdleTimeout != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(StreamIdleTimeout);
      }
      if (InvalidEnvoyRequestHeaders != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(InvalidEnvoyRequestHeaders);
      }
      if (DownstreamProtocolError != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(DownstreamProtocolError);
      }
      if (UpstreamMaxStreamDurationReached != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(UpstreamMaxStreamDurationReached);
      }
      if (ResponseFromCacheFilter != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(ResponseFromCacheFilter);
      }
      if (NoFilterConfigFound != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(NoFilterConfigFound);
      }
      if (DurationTimeout != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(DurationTimeout);
      }
      if (UpstreamProtocolError != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(UpstreamProtocolError);
      }
      if (NoClusterFound != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(NoClusterFound);
      }
      if (OverloadManager != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(OverloadManager);
      }
      if (DnsResolutionFailure != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(DnsResolutionFailure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FailedLocalHealthcheck != false) {
        size += 1 + 1;
      }
      if (NoHealthyUpstream != false) {
        size += 1 + 1;
      }
      if (UpstreamRequestTimeout != false) {
        size += 1 + 1;
      }
      if (LocalReset != false) {
        size += 1 + 1;
      }
      if (UpstreamRemoteReset != false) {
        size += 1 + 1;
      }
      if (UpstreamConnectionFailure != false) {
        size += 1 + 1;
      }
      if (UpstreamConnectionTermination != false) {
        size += 1 + 1;
      }
      if (UpstreamOverflow != false) {
        size += 1 + 1;
      }
      if (NoRouteFound != false) {
        size += 1 + 1;
      }
      if (DelayInjected != false) {
        size += 1 + 1;
      }
      if (FaultInjected != false) {
        size += 1 + 1;
      }
      if (RateLimited != false) {
        size += 1 + 1;
      }
      if (unauthorizedDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnauthorizedDetails);
      }
      if (RateLimitServiceError != false) {
        size += 1 + 1;
      }
      if (DownstreamConnectionTermination != false) {
        size += 1 + 1;
      }
      if (UpstreamRetryLimitExceeded != false) {
        size += 2 + 1;
      }
      if (StreamIdleTimeout != false) {
        size += 2 + 1;
      }
      if (InvalidEnvoyRequestHeaders != false) {
        size += 2 + 1;
      }
      if (DownstreamProtocolError != false) {
        size += 2 + 1;
      }
      if (UpstreamMaxStreamDurationReached != false) {
        size += 2 + 1;
      }
      if (ResponseFromCacheFilter != false) {
        size += 2 + 1;
      }
      if (NoFilterConfigFound != false) {
        size += 2 + 1;
      }
      if (DurationTimeout != false) {
        size += 2 + 1;
      }
      if (UpstreamProtocolError != false) {
        size += 2 + 1;
      }
      if (NoClusterFound != false) {
        size += 2 + 1;
      }
      if (OverloadManager != false) {
        size += 2 + 1;
      }
      if (DnsResolutionFailure != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResponseFlags other) {
      if (other == null) {
        return;
      }
      if (other.FailedLocalHealthcheck != false) {
        FailedLocalHealthcheck = other.FailedLocalHealthcheck;
      }
      if (other.NoHealthyUpstream != false) {
        NoHealthyUpstream = other.NoHealthyUpstream;
      }
      if (other.UpstreamRequestTimeout != false) {
        UpstreamRequestTimeout = other.UpstreamRequestTimeout;
      }
      if (other.LocalReset != false) {
        LocalReset = other.LocalReset;
      }
      if (other.UpstreamRemoteReset != false) {
        UpstreamRemoteReset = other.UpstreamRemoteReset;
      }
      if (other.UpstreamConnectionFailure != false) {
        UpstreamConnectionFailure = other.UpstreamConnectionFailure;
      }
      if (other.UpstreamConnectionTermination != false) {
        UpstreamConnectionTermination = other.UpstreamConnectionTermination;
      }
      if (other.UpstreamOverflow != false) {
        UpstreamOverflow = other.UpstreamOverflow;
      }
      if (other.NoRouteFound != false) {
        NoRouteFound = other.NoRouteFound;
      }
      if (other.DelayInjected != false) {
        DelayInjected = other.DelayInjected;
      }
      if (other.FaultInjected != false) {
        FaultInjected = other.FaultInjected;
      }
      if (other.RateLimited != false) {
        RateLimited = other.RateLimited;
      }
      if (other.unauthorizedDetails_ != null) {
        if (unauthorizedDetails_ == null) {
          UnauthorizedDetails = new global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized();
        }
        UnauthorizedDetails.MergeFrom(other.UnauthorizedDetails);
      }
      if (other.RateLimitServiceError != false) {
        RateLimitServiceError = other.RateLimitServiceError;
      }
      if (other.DownstreamConnectionTermination != false) {
        DownstreamConnectionTermination = other.DownstreamConnectionTermination;
      }
      if (other.UpstreamRetryLimitExceeded != false) {
        UpstreamRetryLimitExceeded = other.UpstreamRetryLimitExceeded;
      }
      if (other.StreamIdleTimeout != false) {
        StreamIdleTimeout = other.StreamIdleTimeout;
      }
      if (other.InvalidEnvoyRequestHeaders != false) {
        InvalidEnvoyRequestHeaders = other.InvalidEnvoyRequestHeaders;
      }
      if (other.DownstreamProtocolError != false) {
        DownstreamProtocolError = other.DownstreamProtocolError;
      }
      if (other.UpstreamMaxStreamDurationReached != false) {
        UpstreamMaxStreamDurationReached = other.UpstreamMaxStreamDurationReached;
      }
      if (other.ResponseFromCacheFilter != false) {
        ResponseFromCacheFilter = other.ResponseFromCacheFilter;
      }
      if (other.NoFilterConfigFound != false) {
        NoFilterConfigFound = other.NoFilterConfigFound;
      }
      if (other.DurationTimeout != false) {
        DurationTimeout = other.DurationTimeout;
      }
      if (other.UpstreamProtocolError != false) {
        UpstreamProtocolError = other.UpstreamProtocolError;
      }
      if (other.NoClusterFound != false) {
        NoClusterFound = other.NoClusterFound;
      }
      if (other.OverloadManager != false) {
        OverloadManager = other.OverloadManager;
      }
      if (other.DnsResolutionFailure != false) {
        DnsResolutionFailure = other.DnsResolutionFailure;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FailedLocalHealthcheck = input.ReadBool();
            break;
          }
          case 16: {
            NoHealthyUpstream = input.ReadBool();
            break;
          }
          case 24: {
            UpstreamRequestTimeout = input.ReadBool();
            break;
          }
          case 32: {
            LocalReset = input.ReadBool();
            break;
          }
          case 40: {
            UpstreamRemoteReset = input.ReadBool();
            break;
          }
          case 48: {
            UpstreamConnectionFailure = input.ReadBool();
            break;
          }
          case 56: {
            UpstreamConnectionTermination = input.ReadBool();
            break;
          }
          case 64: {
            UpstreamOverflow = input.ReadBool();
            break;
          }
          case 72: {
            NoRouteFound = input.ReadBool();
            break;
          }
          case 80: {
            DelayInjected = input.ReadBool();
            break;
          }
          case 88: {
            FaultInjected = input.ReadBool();
            break;
          }
          case 96: {
            RateLimited = input.ReadBool();
            break;
          }
          case 106: {
            if (unauthorizedDetails_ == null) {
              UnauthorizedDetails = new global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized();
            }
            input.ReadMessage(UnauthorizedDetails);
            break;
          }
          case 112: {
            RateLimitServiceError = input.ReadBool();
            break;
          }
          case 120: {
            DownstreamConnectionTermination = input.ReadBool();
            break;
          }
          case 128: {
            UpstreamRetryLimitExceeded = input.ReadBool();
            break;
          }
          case 136: {
            StreamIdleTimeout = input.ReadBool();
            break;
          }
          case 144: {
            InvalidEnvoyRequestHeaders = input.ReadBool();
            break;
          }
          case 152: {
            DownstreamProtocolError = input.ReadBool();
            break;
          }
          case 160: {
            UpstreamMaxStreamDurationReached = input.ReadBool();
            break;
          }
          case 168: {
            ResponseFromCacheFilter = input.ReadBool();
            break;
          }
          case 176: {
            NoFilterConfigFound = input.ReadBool();
            break;
          }
          case 184: {
            DurationTimeout = input.ReadBool();
            break;
          }
          case 192: {
            UpstreamProtocolError = input.ReadBool();
            break;
          }
          case 200: {
            NoClusterFound = input.ReadBool();
            break;
          }
          case 208: {
            OverloadManager = input.ReadBool();
            break;
          }
          case 216: {
            DnsResolutionFailure = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FailedLocalHealthcheck = input.ReadBool();
            break;
          }
          case 16: {
            NoHealthyUpstream = input.ReadBool();
            break;
          }
          case 24: {
            UpstreamRequestTimeout = input.ReadBool();
            break;
          }
          case 32: {
            LocalReset = input.ReadBool();
            break;
          }
          case 40: {
            UpstreamRemoteReset = input.ReadBool();
            break;
          }
          case 48: {
            UpstreamConnectionFailure = input.ReadBool();
            break;
          }
          case 56: {
            UpstreamConnectionTermination = input.ReadBool();
            break;
          }
          case 64: {
            UpstreamOverflow = input.ReadBool();
            break;
          }
          case 72: {
            NoRouteFound = input.ReadBool();
            break;
          }
          case 80: {
            DelayInjected = input.ReadBool();
            break;
          }
          case 88: {
            FaultInjected = input.ReadBool();
            break;
          }
          case 96: {
            RateLimited = input.ReadBool();
            break;
          }
          case 106: {
            if (unauthorizedDetails_ == null) {
              UnauthorizedDetails = new global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized();
            }
            input.ReadMessage(UnauthorizedDetails);
            break;
          }
          case 112: {
            RateLimitServiceError = input.ReadBool();
            break;
          }
          case 120: {
            DownstreamConnectionTermination = input.ReadBool();
            break;
          }
          case 128: {
            UpstreamRetryLimitExceeded = input.ReadBool();
            break;
          }
          case 136: {
            StreamIdleTimeout = input.ReadBool();
            break;
          }
          case 144: {
            InvalidEnvoyRequestHeaders = input.ReadBool();
            break;
          }
          case 152: {
            DownstreamProtocolError = input.ReadBool();
            break;
          }
          case 160: {
            UpstreamMaxStreamDurationReached = input.ReadBool();
            break;
          }
          case 168: {
            ResponseFromCacheFilter = input.ReadBool();
            break;
          }
          case 176: {
            NoFilterConfigFound = input.ReadBool();
            break;
          }
          case 184: {
            DurationTimeout = input.ReadBool();
            break;
          }
          case 192: {
            UpstreamProtocolError = input.ReadBool();
            break;
          }
          case 200: {
            NoClusterFound = input.ReadBool();
            break;
          }
          case 208: {
            OverloadManager = input.ReadBool();
            break;
          }
          case 216: {
            DnsResolutionFailure = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ResponseFlags message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Unauthorized : pb::IMessage<Unauthorized>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Unauthorized> _parser = new pb::MessageParser<Unauthorized>(() => new Unauthorized());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Unauthorized> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Accesslog.V3.ResponseFlags.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unauthorized() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unauthorized(Unauthorized other) : this() {
          reason_ = other.reason_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unauthorized Clone() {
          return new Unauthorized(this);
        }

        /// <summary>Field number for the "reason" field.</summary>
        public const int ReasonFieldNumber = 1;
        private global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Types.Reason reason_ = global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Types.Reason.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Types.Reason Reason {
          get { return reason_; }
          set {
            reason_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Unauthorized);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Unauthorized other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Reason != other.Reason) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Reason != global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Types.Reason.Unspecified) hash ^= Reason.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Reason != global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Types.Reason.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Reason);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Reason != global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Types.Reason.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Reason);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Reason != global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Types.Reason.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Unauthorized other) {
          if (other == null) {
            return;
          }
          if (other.Reason != global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Types.Reason.Unspecified) {
            Reason = other.Reason;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Reason = (global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Types.Reason) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Reason = (global::Envoy.Data.Accesslog.V3.ResponseFlags.Types.Unauthorized.Types.Reason) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Unauthorized message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Reasons why the request was unauthorized
          /// </summary>
          public enum Reason {
            [pbr::OriginalName("REASON_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The request was denied by the external authorization service.
            /// </summary>
            [pbr::OriginalName("EXTERNAL_SERVICE")] ExternalService = 1,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Properties of a negotiated TLS connection.
  /// [#next-free-field: 8]
  /// </summary>
  public sealed partial class TLSProperties : pb::IMessage<TLSProperties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TLSProperties> _parser = new pb::MessageParser<TLSProperties>(() => new TLSProperties());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TLSProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Accesslog.V3.AccesslogReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TLSProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TLSProperties(TLSProperties other) : this() {
      tlsVersion_ = other.tlsVersion_;
      TlsCipherSuite = other.TlsCipherSuite;
      tlsSniHostname_ = other.tlsSniHostname_;
      localCertificateProperties_ = other.localCertificateProperties_ != null ? other.localCertificateProperties_.Clone() : null;
      peerCertificateProperties_ = other.peerCertificateProperties_ != null ? other.peerCertificateProperties_.Clone() : null;
      tlsSessionId_ = other.tlsSessionId_;
      ja3Fingerprint_ = other.ja3Fingerprint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TLSProperties Clone() {
      return new TLSProperties(this);
    }

    /// <summary>Field number for the "tls_version" field.</summary>
    public const int TlsVersionFieldNumber = 1;
    private global::Envoy.Data.Accesslog.V3.TLSProperties.Types.TLSVersion tlsVersion_ = global::Envoy.Data.Accesslog.V3.TLSProperties.Types.TLSVersion.VersionUnspecified;
    /// <summary>
    /// Version of TLS that was negotiated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.TLSProperties.Types.TLSVersion TlsVersion {
      get { return tlsVersion_; }
      set {
        tlsVersion_ = value;
      }
    }

    /// <summary>Field number for the "tls_cipher_suite" field.</summary>
    public const int TlsCipherSuiteFieldNumber = 2;
    private static readonly pb::FieldCodec<uint?> _single_tlsCipherSuite_codec = pb::FieldCodec.ForStructWrapper<uint>(18);
    private uint? tlsCipherSuite_;
    /// <summary>
    /// TLS cipher suite negotiated during handshake. The value is a
    /// four-digit hex code defined by the IANA TLS Cipher Suite Registry
    /// (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
    ///
    /// Here it is expressed as an integer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint? TlsCipherSuite {
      get { return tlsCipherSuite_; }
      set {
        tlsCipherSuite_ = value;
      }
    }


    /// <summary>Field number for the "tls_sni_hostname" field.</summary>
    public const int TlsSniHostnameFieldNumber = 3;
    private string tlsSniHostname_ = "";
    /// <summary>
    /// SNI hostname from handshake.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TlsSniHostname {
      get { return tlsSniHostname_; }
      set {
        tlsSniHostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "local_certificate_properties" field.</summary>
    public const int LocalCertificatePropertiesFieldNumber = 4;
    private global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties localCertificateProperties_;
    /// <summary>
    /// Properties of the local certificate used to negotiate TLS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties LocalCertificateProperties {
      get { return localCertificateProperties_; }
      set {
        localCertificateProperties_ = value;
      }
    }

    /// <summary>Field number for the "peer_certificate_properties" field.</summary>
    public const int PeerCertificatePropertiesFieldNumber = 5;
    private global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties peerCertificateProperties_;
    /// <summary>
    /// Properties of the peer certificate used to negotiate TLS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties PeerCertificateProperties {
      get { return peerCertificateProperties_; }
      set {
        peerCertificateProperties_ = value;
      }
    }

    /// <summary>Field number for the "tls_session_id" field.</summary>
    public const int TlsSessionIdFieldNumber = 6;
    private string tlsSessionId_ = "";
    /// <summary>
    /// The TLS session ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TlsSessionId {
      get { return tlsSessionId_; }
      set {
        tlsSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ja3_fingerprint" field.</summary>
    public const int Ja3FingerprintFieldNumber = 7;
    private string ja3Fingerprint_ = "";
    /// <summary>
    /// The ``JA3`` fingerprint when ``JA3`` fingerprinting is enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ja3Fingerprint {
      get { return ja3Fingerprint_; }
      set {
        ja3Fingerprint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TLSProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TLSProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TlsVersion != other.TlsVersion) return false;
      if (TlsCipherSuite != other.TlsCipherSuite) return false;
      if (TlsSniHostname != other.TlsSniHostname) return false;
      if (!object.Equals(LocalCertificateProperties, other.LocalCertificateProperties)) return false;
      if (!object.Equals(PeerCertificateProperties, other.PeerCertificateProperties)) return false;
      if (TlsSessionId != other.TlsSessionId) return false;
      if (Ja3Fingerprint != other.Ja3Fingerprint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TlsVersion != global::Envoy.Data.Accesslog.V3.TLSProperties.Types.TLSVersion.VersionUnspecified) hash ^= TlsVersion.GetHashCode();
      if (tlsCipherSuite_ != null) hash ^= TlsCipherSuite.GetHashCode();
      if (TlsSniHostname.Length != 0) hash ^= TlsSniHostname.GetHashCode();
      if (localCertificateProperties_ != null) hash ^= LocalCertificateProperties.GetHashCode();
      if (peerCertificateProperties_ != null) hash ^= PeerCertificateProperties.GetHashCode();
      if (TlsSessionId.Length != 0) hash ^= TlsSessionId.GetHashCode();
      if (Ja3Fingerprint.Length != 0) hash ^= Ja3Fingerprint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TlsVersion != global::Envoy.Data.Accesslog.V3.TLSProperties.Types.TLSVersion.VersionUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TlsVersion);
      }
      if (tlsCipherSuite_ != null) {
        _single_tlsCipherSuite_codec.WriteTagAndValue(output, TlsCipherSuite);
      }
      if (TlsSniHostname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TlsSniHostname);
      }
      if (localCertificateProperties_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocalCertificateProperties);
      }
      if (peerCertificateProperties_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PeerCertificateProperties);
      }
      if (TlsSessionId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TlsSessionId);
      }
      if (Ja3Fingerprint.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Ja3Fingerprint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TlsVersion != global::Envoy.Data.Accesslog.V3.TLSProperties.Types.TLSVersion.VersionUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TlsVersion);
      }
      if (tlsCipherSuite_ != null) {
        _single_tlsCipherSuite_codec.WriteTagAndValue(ref output, TlsCipherSuite);
      }
      if (TlsSniHostname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TlsSniHostname);
      }
      if (localCertificateProperties_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocalCertificateProperties);
      }
      if (peerCertificateProperties_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PeerCertificateProperties);
      }
      if (TlsSessionId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TlsSessionId);
      }
      if (Ja3Fingerprint.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Ja3Fingerprint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TlsVersion != global::Envoy.Data.Accesslog.V3.TLSProperties.Types.TLSVersion.VersionUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TlsVersion);
      }
      if (tlsCipherSuite_ != null) {
        size += _single_tlsCipherSuite_codec.CalculateSizeWithTag(TlsCipherSuite);
      }
      if (TlsSniHostname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TlsSniHostname);
      }
      if (localCertificateProperties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalCertificateProperties);
      }
      if (peerCertificateProperties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeerCertificateProperties);
      }
      if (TlsSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TlsSessionId);
      }
      if (Ja3Fingerprint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ja3Fingerprint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TLSProperties other) {
      if (other == null) {
        return;
      }
      if (other.TlsVersion != global::Envoy.Data.Accesslog.V3.TLSProperties.Types.TLSVersion.VersionUnspecified) {
        TlsVersion = other.TlsVersion;
      }
      if (other.tlsCipherSuite_ != null) {
        if (tlsCipherSuite_ == null || other.TlsCipherSuite != 0) {
          TlsCipherSuite = other.TlsCipherSuite;
        }
      }
      if (other.TlsSniHostname.Length != 0) {
        TlsSniHostname = other.TlsSniHostname;
      }
      if (other.localCertificateProperties_ != null) {
        if (localCertificateProperties_ == null) {
          LocalCertificateProperties = new global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties();
        }
        LocalCertificateProperties.MergeFrom(other.LocalCertificateProperties);
      }
      if (other.peerCertificateProperties_ != null) {
        if (peerCertificateProperties_ == null) {
          PeerCertificateProperties = new global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties();
        }
        PeerCertificateProperties.MergeFrom(other.PeerCertificateProperties);
      }
      if (other.TlsSessionId.Length != 0) {
        TlsSessionId = other.TlsSessionId;
      }
      if (other.Ja3Fingerprint.Length != 0) {
        Ja3Fingerprint = other.Ja3Fingerprint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TlsVersion = (global::Envoy.Data.Accesslog.V3.TLSProperties.Types.TLSVersion) input.ReadEnum();
            break;
          }
          case 18: {
            uint? value = _single_tlsCipherSuite_codec.Read(input);
            if (tlsCipherSuite_ == null || value != 0) {
              TlsCipherSuite = value;
            }
            break;
          }
          case 26: {
            TlsSniHostname = input.ReadString();
            break;
          }
          case 34: {
            if (localCertificateProperties_ == null) {
              LocalCertificateProperties = new global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties();
            }
            input.ReadMessage(LocalCertificateProperties);
            break;
          }
          case 42: {
            if (peerCertificateProperties_ == null) {
              PeerCertificateProperties = new global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties();
            }
            input.ReadMessage(PeerCertificateProperties);
            break;
          }
          case 50: {
            TlsSessionId = input.ReadString();
            break;
          }
          case 58: {
            Ja3Fingerprint = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TlsVersion = (global::Envoy.Data.Accesslog.V3.TLSProperties.Types.TLSVersion) input.ReadEnum();
            break;
          }
          case 18: {
            uint? value = _single_tlsCipherSuite_codec.Read(ref input);
            if (tlsCipherSuite_ == null || value != 0) {
              TlsCipherSuite = value;
            }
            break;
          }
          case 26: {
            TlsSniHostname = input.ReadString();
            break;
          }
          case 34: {
            if (localCertificateProperties_ == null) {
              LocalCertificateProperties = new global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties();
            }
            input.ReadMessage(LocalCertificateProperties);
            break;
          }
          case 42: {
            if (peerCertificateProperties_ == null) {
              PeerCertificateProperties = new global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties();
            }
            input.ReadMessage(PeerCertificateProperties);
            break;
          }
          case 50: {
            TlsSessionId = input.ReadString();
            break;
          }
          case 58: {
            Ja3Fingerprint = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TLSProperties message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum TLSVersion {
        [pbr::OriginalName("VERSION_UNSPECIFIED")] VersionUnspecified = 0,
        [pbr::OriginalName("TLSv1")] Tlsv1 = 1,
        [pbr::OriginalName("TLSv1_1")] Tlsv11 = 2,
        [pbr::OriginalName("TLSv1_2")] Tlsv12 = 3,
        [pbr::OriginalName("TLSv1_3")] Tlsv13 = 4,
      }

      public sealed partial class CertificateProperties : pb::IMessage<CertificateProperties>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CertificateProperties> _parser = new pb::MessageParser<CertificateProperties>(() => new CertificateProperties());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<CertificateProperties> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Accesslog.V3.TLSProperties.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CertificateProperties() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CertificateProperties(CertificateProperties other) : this() {
          subjectAltName_ = other.subjectAltName_.Clone();
          subject_ = other.subject_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CertificateProperties Clone() {
          return new CertificateProperties(this);
        }

        /// <summary>Field number for the "subject_alt_name" field.</summary>
        public const int SubjectAltNameFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties.Types.SubjectAltName> _repeated_subjectAltName_codec
            = pb::FieldCodec.ForMessage(10, global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties.Types.SubjectAltName.Parser);
        private readonly pbc::RepeatedField<global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties.Types.SubjectAltName> subjectAltName_ = new pbc::RepeatedField<global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties.Types.SubjectAltName>();
        /// <summary>
        /// SANs present in the certificate.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties.Types.SubjectAltName> SubjectAltName {
          get { return subjectAltName_; }
        }

        /// <summary>Field number for the "subject" field.</summary>
        public const int SubjectFieldNumber = 2;
        private string subject_ = "";
        /// <summary>
        /// The subject field of the certificate.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Subject {
          get { return subject_; }
          set {
            subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as CertificateProperties);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(CertificateProperties other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!subjectAltName_.Equals(other.subjectAltName_)) return false;
          if (Subject != other.Subject) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= subjectAltName_.GetHashCode();
          if (Subject.Length != 0) hash ^= Subject.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          subjectAltName_.WriteTo(output, _repeated_subjectAltName_codec);
          if (Subject.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Subject);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          subjectAltName_.WriteTo(ref output, _repeated_subjectAltName_codec);
          if (Subject.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Subject);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += subjectAltName_.CalculateSize(_repeated_subjectAltName_codec);
          if (Subject.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(CertificateProperties other) {
          if (other == null) {
            return;
          }
          subjectAltName_.Add(other.subjectAltName_);
          if (other.Subject.Length != 0) {
            Subject = other.Subject;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                subjectAltName_.AddEntriesFrom(input, _repeated_subjectAltName_codec);
                break;
              }
              case 18: {
                Subject = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                subjectAltName_.AddEntriesFrom(ref input, _repeated_subjectAltName_codec);
                break;
              }
              case 18: {
                Subject = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the CertificateProperties message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public sealed partial class SubjectAltName : pb::IMessage<SubjectAltName>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<SubjectAltName> _parser = new pb::MessageParser<SubjectAltName>(() => new SubjectAltName());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<SubjectAltName> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Envoy.Data.Accesslog.V3.TLSProperties.Types.CertificateProperties.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SubjectAltName() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SubjectAltName(SubjectAltName other) : this() {
              switch (other.SanCase) {
                case SanOneofCase.Uri:
                  Uri = other.Uri;
                  break;
                case SanOneofCase.Dns:
                  Dns = other.Dns;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SubjectAltName Clone() {
              return new SubjectAltName(this);
            }

            /// <summary>Field number for the "uri" field.</summary>
            public const int UriFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Uri {
              get { return HasUri ? (string) san_ : ""; }
              set {
                san_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                sanCase_ = SanOneofCase.Uri;
              }
            }
            /// <summary>Gets whether the "uri" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasUri {
              get { return sanCase_ == SanOneofCase.Uri; }
            }
            /// <summary> Clears the value of the oneof if it's currently set to "uri" </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearUri() {
              if (HasUri) {
                ClearSan();
              }
            }

            /// <summary>Field number for the "dns" field.</summary>
            public const int DnsFieldNumber = 2;
            /// <summary>
            /// [#not-implemented-hide:]
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Dns {
              get { return HasDns ? (string) san_ : ""; }
              set {
                san_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                sanCase_ = SanOneofCase.Dns;
              }
            }
            /// <summary>Gets whether the "dns" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasDns {
              get { return sanCase_ == SanOneofCase.Dns; }
            }
            /// <summary> Clears the value of the oneof if it's currently set to "dns" </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearDns() {
              if (HasDns) {
                ClearSan();
              }
            }

            private object san_;
            /// <summary>Enum of possible cases for the "san" oneof.</summary>
            public enum SanOneofCase {
              None = 0,
              Uri = 1,
              Dns = 2,
            }
            private SanOneofCase sanCase_ = SanOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SanOneofCase SanCase {
              get { return sanCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearSan() {
              sanCase_ = SanOneofCase.None;
              san_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as SubjectAltName);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(SubjectAltName other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Uri != other.Uri) return false;
              if (Dns != other.Dns) return false;
              if (SanCase != other.SanCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (HasUri) hash ^= Uri.GetHashCode();
              if (HasDns) hash ^= Dns.GetHashCode();
              hash ^= (int) sanCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasUri) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (HasDns) {
                output.WriteRawTag(18);
                output.WriteString(Dns);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasUri) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (HasDns) {
                output.WriteRawTag(18);
                output.WriteString(Dns);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (HasUri) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
              }
              if (HasDns) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Dns);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(SubjectAltName other) {
              if (other == null) {
                return;
              }
              switch (other.SanCase) {
                case SanOneofCase.Uri:
                  Uri = other.Uri;
                  break;
                case SanOneofCase.Dns:
                  Dns = other.Dns;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 18: {
                    Dns = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 18: {
                    Dns = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// [#next-free-field: 16]
  /// </summary>
  public sealed partial class HTTPRequestProperties : pb::IMessage<HTTPRequestProperties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HTTPRequestProperties> _parser = new pb::MessageParser<HTTPRequestProperties>(() => new HTTPRequestProperties());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HTTPRequestProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Accesslog.V3.AccesslogReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HTTPRequestProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HTTPRequestProperties(HTTPRequestProperties other) : this() {
      requestMethod_ = other.requestMethod_;
      scheme_ = other.scheme_;
      authority_ = other.authority_;
      Port = other.Port;
      path_ = other.path_;
      userAgent_ = other.userAgent_;
      referer_ = other.referer_;
      forwardedFor_ = other.forwardedFor_;
      requestId_ = other.requestId_;
      originalPath_ = other.originalPath_;
      requestHeadersBytes_ = other.requestHeadersBytes_;
      requestBodyBytes_ = other.requestBodyBytes_;
      requestHeaders_ = other.requestHeaders_.Clone();
      upstreamHeaderBytesSent_ = other.upstreamHeaderBytesSent_;
      downstreamHeaderBytesReceived_ = other.downstreamHeaderBytesReceived_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HTTPRequestProperties Clone() {
      return new HTTPRequestProperties(this);
    }

    /// <summary>Field number for the "request_method" field.</summary>
    public const int RequestMethodFieldNumber = 1;
    private global::Envoy.Config.Core.V3.RequestMethod requestMethod_ = global::Envoy.Config.Core.V3.RequestMethod.MethodUnspecified;
    /// <summary>
    /// The request method (RFC 7231/2616).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Envoy.Config.Core.V3.RequestMethod RequestMethod {
      get { return requestMethod_; }
      set {
        requestMethod_ = value;
      }
    }

    /// <summary>Field number for the "scheme" field.</summary>
    public const int SchemeFieldNumber = 2;
    private string scheme_ = "";
    /// <summary>
    /// The scheme portion of the incoming request URI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Scheme {
      get { return scheme_; }
      set {
        scheme_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "authority" field.</summary>
    public const int AuthorityFieldNumber = 3;
    private string authority_ = "";
    /// <summary>
    /// HTTP/2 ``:authority`` or HTTP/1.1 ``Host`` header value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Authority {
      get { return authority_; }
      set {
        authority_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private static readonly pb::FieldCodec<uint?> _single_port_codec = pb::FieldCodec.ForStructWrapper<uint>(34);
    private uint? port_;
    /// <summary>
    /// The port of the incoming request URI
    /// (unused currently, as port is composed onto authority).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint? Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }


    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 5;
    private string path_ = "";
    /// <summary>
    /// The path portion from the incoming request URI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_agent" field.</summary>
    public const int UserAgentFieldNumber = 6;
    private string userAgent_ = "";
    /// <summary>
    /// Value of the ``User-Agent`` request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserAgent {
      get { return userAgent_; }
      set {
        userAgent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "referer" field.</summary>
    public const int RefererFieldNumber = 7;
    private string referer_ = "";
    /// <summary>
    /// Value of the ``Referer`` request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Referer {
      get { return referer_; }
      set {
        referer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "forwarded_for" field.</summary>
    public const int ForwardedForFieldNumber = 8;
    private string forwardedFor_ = "";
    /// <summary>
    /// Value of the ``X-Forwarded-For`` request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ForwardedFor {
      get { return forwardedFor_; }
      set {
        forwardedFor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 9;
    private string requestId_ = "";
    /// <summary>
    /// Value of the ``X-Request-Id`` request header
    ///
    /// This header is used by Envoy to uniquely identify a request.
    /// It will be generated for all external requests and internal requests that
    /// do not already have a request ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "original_path" field.</summary>
    public const int OriginalPathFieldNumber = 10;
    private string originalPath_ = "";
    /// <summary>
    /// Value of the ``X-Envoy-Original-Path`` request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OriginalPath {
      get { return originalPath_; }
      set {
        originalPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_headers_bytes" field.</summary>
    public const int RequestHeadersBytesFieldNumber = 11;
    private ulong requestHeadersBytes_;
    /// <summary>
    /// Size of the HTTP request headers in bytes.
    ///
    /// This value is captured from the OSI layer 7 perspective, i.e. it does not
    /// include overhead from framing or encoding at other networking layers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RequestHeadersBytes {
      get { return requestHeadersBytes_; }
      set {
        requestHeadersBytes_ = value;
      }
    }

    /// <summary>Field number for the "request_body_bytes" field.</summary>
    public const int RequestBodyBytesFieldNumber = 12;
    private ulong requestBodyBytes_;
    /// <summary>
    /// Size of the HTTP request body in bytes.
    ///
    /// This value is captured from the OSI layer 7 perspective, i.e. it does not
    /// include overhead from framing or encoding at other networking layers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RequestBodyBytes {
      get { return requestBodyBytes_; }
      set {
        requestBodyBytes_ = value;
      }
    }

    /// <summary>Field number for the "request_headers" field.</summary>
    public const int RequestHeadersFieldNumber = 13;
    private static readonly pbc::MapField<string, string>.Codec _map_requestHeaders_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 106);
    private readonly pbc::MapField<string, string> requestHeaders_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Map of additional headers that have been configured to be logged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> RequestHeaders {
      get { return requestHeaders_; }
    }

    /// <summary>Field number for the "upstream_header_bytes_sent" field.</summary>
    public const int UpstreamHeaderBytesSentFieldNumber = 14;
    private ulong upstreamHeaderBytesSent_;
    /// <summary>
    /// Number of header bytes sent to the upstream by the http stream, including protocol overhead.
    ///
    /// This value accumulates during upstream retries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UpstreamHeaderBytesSent {
      get { return upstreamHeaderBytesSent_; }
      set {
        upstreamHeaderBytesSent_ = value;
      }
    }

    /// <summary>Field number for the "downstream_header_bytes_received" field.</summary>
    public const int DownstreamHeaderBytesReceivedFieldNumber = 15;
    private ulong downstreamHeaderBytesReceived_;
    /// <summary>
    /// Number of header bytes received from the downstream by the http stream, including protocol overhead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DownstreamHeaderBytesReceived {
      get { return downstreamHeaderBytesReceived_; }
      set {
        downstreamHeaderBytesReceived_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HTTPRequestProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HTTPRequestProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestMethod != other.RequestMethod) return false;
      if (Scheme != other.Scheme) return false;
      if (Authority != other.Authority) return false;
      if (Port != other.Port) return false;
      if (Path != other.Path) return false;
      if (UserAgent != other.UserAgent) return false;
      if (Referer != other.Referer) return false;
      if (ForwardedFor != other.ForwardedFor) return false;
      if (RequestId != other.RequestId) return false;
      if (OriginalPath != other.OriginalPath) return false;
      if (RequestHeadersBytes != other.RequestHeadersBytes) return false;
      if (RequestBodyBytes != other.RequestBodyBytes) return false;
      if (!RequestHeaders.Equals(other.RequestHeaders)) return false;
      if (UpstreamHeaderBytesSent != other.UpstreamHeaderBytesSent) return false;
      if (DownstreamHeaderBytesReceived != other.DownstreamHeaderBytesReceived) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestMethod != global::Envoy.Config.Core.V3.RequestMethod.MethodUnspecified) hash ^= RequestMethod.GetHashCode();
      if (Scheme.Length != 0) hash ^= Scheme.GetHashCode();
      if (Authority.Length != 0) hash ^= Authority.GetHashCode();
      if (port_ != null) hash ^= Port.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (UserAgent.Length != 0) hash ^= UserAgent.GetHashCode();
      if (Referer.Length != 0) hash ^= Referer.GetHashCode();
      if (ForwardedFor.Length != 0) hash ^= ForwardedFor.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (OriginalPath.Length != 0) hash ^= OriginalPath.GetHashCode();
      if (RequestHeadersBytes != 0UL) hash ^= RequestHeadersBytes.GetHashCode();
      if (RequestBodyBytes != 0UL) hash ^= RequestBodyBytes.GetHashCode();
      hash ^= RequestHeaders.GetHashCode();
      if (UpstreamHeaderBytesSent != 0UL) hash ^= UpstreamHeaderBytesSent.GetHashCode();
      if (DownstreamHeaderBytesReceived != 0UL) hash ^= DownstreamHeaderBytesReceived.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestMethod != global::Envoy.Config.Core.V3.RequestMethod.MethodUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestMethod);
      }
      if (Scheme.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Scheme);
      }
      if (Authority.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Authority);
      }
      if (port_ != null) {
        _single_port_codec.WriteTagAndValue(output, Port);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Path);
      }
      if (UserAgent.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(UserAgent);
      }
      if (Referer.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Referer);
      }
      if (ForwardedFor.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ForwardedFor);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RequestId);
      }
      if (OriginalPath.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OriginalPath);
      }
      if (RequestHeadersBytes != 0UL) {
        output.WriteRawTag(88);
        output.WriteUInt64(RequestHeadersBytes);
      }
      if (RequestBodyBytes != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(RequestBodyBytes);
      }
      requestHeaders_.WriteTo(output, _map_requestHeaders_codec);
      if (UpstreamHeaderBytesSent != 0UL) {
        output.WriteRawTag(112);
        output.WriteUInt64(UpstreamHeaderBytesSent);
      }
      if (DownstreamHeaderBytesReceived != 0UL) {
        output.WriteRawTag(120);
        output.WriteUInt64(DownstreamHeaderBytesReceived);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestMethod != global::Envoy.Config.Core.V3.RequestMethod.MethodUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestMethod);
      }
      if (Scheme.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Scheme);
      }
      if (Authority.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Authority);
      }
      if (port_ != null) {
        _single_port_codec.WriteTagAndValue(ref output, Port);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Path);
      }
      if (UserAgent.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(UserAgent);
      }
      if (Referer.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Referer);
      }
      if (ForwardedFor.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ForwardedFor);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RequestId);
      }
      if (OriginalPath.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OriginalPath);
      }
      if (RequestHeadersBytes != 0UL) {
        output.WriteRawTag(88);
        output.WriteUInt64(RequestHeadersBytes);
      }
      if (RequestBodyBytes != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(RequestBodyBytes);
      }
      requestHeaders_.WriteTo(ref output, _map_requestHeaders_codec);
      if (UpstreamHeaderBytesSent != 0UL) {
        output.WriteRawTag(112);
        output.WriteUInt64(UpstreamHeaderBytesSent);
      }
      if (DownstreamHeaderBytesReceived != 0UL) {
        output.WriteRawTag(120);
        output.WriteUInt64(DownstreamHeaderBytesReceived);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestMethod != global::Envoy.Config.Core.V3.RequestMethod.MethodUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestMethod);
      }
      if (Scheme.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Scheme);
      }
      if (Authority.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Authority);
      }
      if (port_ != null) {
        size += _single_port_codec.CalculateSizeWithTag(Port);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (UserAgent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAgent);
      }
      if (Referer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Referer);
      }
      if (ForwardedFor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ForwardedFor);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (OriginalPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalPath);
      }
      if (RequestHeadersBytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestHeadersBytes);
      }
      if (RequestBodyBytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestBodyBytes);
      }
      size += requestHeaders_.CalculateSize(_map_requestHeaders_codec);
      if (UpstreamHeaderBytesSent != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UpstreamHeaderBytesSent);
      }
      if (DownstreamHeaderBytesReceived != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DownstreamHeaderBytesReceived);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HTTPRequestProperties other) {
      if (other == null) {
        return;
      }
      if (other.RequestMethod != global::Envoy.Config.Core.V3.RequestMethod.MethodUnspecified) {
        RequestMethod = other.RequestMethod;
      }
      if (other.Scheme.Length != 0) {
        Scheme = other.Scheme;
      }
      if (other.Authority.Length != 0) {
        Authority = other.Authority;
      }
      if (other.port_ != null) {
        if (port_ == null || other.Port != 0) {
          Port = other.Port;
        }
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.UserAgent.Length != 0) {
        UserAgent = other.UserAgent;
      }
      if (other.Referer.Length != 0) {
        Referer = other.Referer;
      }
      if (other.ForwardedFor.Length != 0) {
        ForwardedFor = other.ForwardedFor;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      if (other.OriginalPath.Length != 0) {
        OriginalPath = other.OriginalPath;
      }
      if (other.RequestHeadersBytes != 0UL) {
        RequestHeadersBytes = other.RequestHeadersBytes;
      }
      if (other.RequestBodyBytes != 0UL) {
        RequestBodyBytes = other.RequestBodyBytes;
      }
      requestHeaders_.MergeFrom(other.requestHeaders_);
      if (other.UpstreamHeaderBytesSent != 0UL) {
        UpstreamHeaderBytesSent = other.UpstreamHeaderBytesSent;
      }
      if (other.DownstreamHeaderBytesReceived != 0UL) {
        DownstreamHeaderBytesReceived = other.DownstreamHeaderBytesReceived;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestMethod = (global::Envoy.Config.Core.V3.RequestMethod) input.ReadEnum();
            break;
          }
          case 18: {
            Scheme = input.ReadString();
            break;
          }
          case 26: {
            Authority = input.ReadString();
            break;
          }
          case 34: {
            uint? value = _single_port_codec.Read(input);
            if (port_ == null || value != 0) {
              Port = value;
            }
            break;
          }
          case 42: {
            Path = input.ReadString();
            break;
          }
          case 50: {
            UserAgent = input.ReadString();
            break;
          }
          case 58: {
            Referer = input.ReadString();
            break;
          }
          case 66: {
            ForwardedFor = input.ReadString();
            break;
          }
          case 74: {
            RequestId = input.ReadString();
            break;
          }
          case 82: {
            OriginalPath = input.ReadString();
            break;
          }
          case 88: {
            RequestHeadersBytes = input.ReadUInt64();
            break;
          }
          case 96: {
            RequestBodyBytes = input.ReadUInt64();
            break;
          }
          case 106: {
            requestHeaders_.AddEntriesFrom(input, _map_requestHeaders_codec);
            break;
          }
          case 112: {
            UpstreamHeaderBytesSent = input.ReadUInt64();
            break;
          }
          case 120: {
            DownstreamHeaderBytesReceived = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestMethod = (global::Envoy.Config.Core.V3.RequestMethod) input.ReadEnum();
            break;
          }
          case 18: {
            Scheme = input.ReadString();
            break;
          }
          case 26: {
            Authority = input.ReadString();
            break;
          }
          case 34: {
            uint? value = _single_port_codec.Read(ref input);
            if (port_ == null || value != 0) {
              Port = value;
            }
            break;
          }
          case 42: {
            Path = input.ReadString();
            break;
          }
          case 50: {
            UserAgent = input.ReadString();
            break;
          }
          case 58: {
            Referer = input.ReadString();
            break;
          }
          case 66: {
            ForwardedFor = input.ReadString();
            break;
          }
          case 74: {
            RequestId = input.ReadString();
            break;
          }
          case 82: {
            OriginalPath = input.ReadString();
            break;
          }
          case 88: {
            RequestHeadersBytes = input.ReadUInt64();
            break;
          }
          case 96: {
            RequestBodyBytes = input.ReadUInt64();
            break;
          }
          case 106: {
            requestHeaders_.AddEntriesFrom(ref input, _map_requestHeaders_codec);
            break;
          }
          case 112: {
            UpstreamHeaderBytesSent = input.ReadUInt64();
            break;
          }
          case 120: {
            DownstreamHeaderBytesReceived = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [#next-free-field: 9]
  /// </summary>
  public sealed partial class HTTPResponseProperties : pb::IMessage<HTTPResponseProperties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HTTPResponseProperties> _parser = new pb::MessageParser<HTTPResponseProperties>(() => new HTTPResponseProperties());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HTTPResponseProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Accesslog.V3.AccesslogReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HTTPResponseProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HTTPResponseProperties(HTTPResponseProperties other) : this() {
      ResponseCode = other.ResponseCode;
      responseHeadersBytes_ = other.responseHeadersBytes_;
      responseBodyBytes_ = other.responseBodyBytes_;
      responseHeaders_ = other.responseHeaders_.Clone();
      responseTrailers_ = other.responseTrailers_.Clone();
      responseCodeDetails_ = other.responseCodeDetails_;
      upstreamHeaderBytesReceived_ = other.upstreamHeaderBytesReceived_;
      downstreamHeaderBytesSent_ = other.downstreamHeaderBytesSent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HTTPResponseProperties Clone() {
      return new HTTPResponseProperties(this);
    }

    /// <summary>Field number for the "response_code" field.</summary>
    public const int ResponseCodeFieldNumber = 1;
    private static readonly pb::FieldCodec<uint?> _single_responseCode_codec = pb::FieldCodec.ForStructWrapper<uint>(10);
    private uint? responseCode_;
    /// <summary>
    /// The HTTP response code returned by Envoy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint? ResponseCode {
      get { return responseCode_; }
      set {
        responseCode_ = value;
      }
    }


    /// <summary>Field number for the "response_headers_bytes" field.</summary>
    public const int ResponseHeadersBytesFieldNumber = 2;
    private ulong responseHeadersBytes_;
    /// <summary>
    /// Size of the HTTP response headers in bytes.
    ///
    /// This value is captured from the OSI layer 7 perspective, i.e. it does not
    /// include protocol overhead or overhead from framing or encoding at other networking layers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ResponseHeadersBytes {
      get { return responseHeadersBytes_; }
      set {
        responseHeadersBytes_ = value;
      }
    }

    /// <summary>Field number for the "response_body_bytes" field.</summary>
    public const int ResponseBodyBytesFieldNumber = 3;
    private ulong responseBodyBytes_;
    /// <summary>
    /// Size of the HTTP response body in bytes.
    ///
    /// This value is captured from the OSI layer 7 perspective, i.e. it does not
    /// include overhead from framing or encoding at other networking layers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ResponseBodyBytes {
      get { return responseBodyBytes_; }
      set {
        responseBodyBytes_ = value;
      }
    }

    /// <summary>Field number for the "response_headers" field.</summary>
    public const int ResponseHeadersFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_responseHeaders_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 34);
    private readonly pbc::MapField<string, string> responseHeaders_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Map of additional headers configured to be logged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> ResponseHeaders {
      get { return responseHeaders_; }
    }

    /// <summary>Field number for the "response_trailers" field.</summary>
    public const int ResponseTrailersFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_responseTrailers_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<string, string> responseTrailers_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Map of trailers configured to be logged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> ResponseTrailers {
      get { return responseTrailers_; }
    }

    /// <summary>Field number for the "response_code_details" field.</summary>
    public const int ResponseCodeDetailsFieldNumber = 6;
    private string responseCodeDetails_ = "";
    /// <summary>
    /// The HTTP response code details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResponseCodeDetails {
      get { return responseCodeDetails_; }
      set {
        responseCodeDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "upstream_header_bytes_received" field.</summary>
    public const int UpstreamHeaderBytesReceivedFieldNumber = 7;
    private ulong upstreamHeaderBytesReceived_;
    /// <summary>
    /// Number of header bytes received from the upstream by the http stream, including protocol overhead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UpstreamHeaderBytesReceived {
      get { return upstreamHeaderBytesReceived_; }
      set {
        upstreamHeaderBytesReceived_ = value;
      }
    }

    /// <summary>Field number for the "downstream_header_bytes_sent" field.</summary>
    public const int DownstreamHeaderBytesSentFieldNumber = 8;
    private ulong downstreamHeaderBytesSent_;
    /// <summary>
    /// Number of header bytes sent to the downstream by the http stream, including protocol overhead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DownstreamHeaderBytesSent {
      get { return downstreamHeaderBytesSent_; }
      set {
        downstreamHeaderBytesSent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HTTPResponseProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HTTPResponseProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseCode != other.ResponseCode) return false;
      if (ResponseHeadersBytes != other.ResponseHeadersBytes) return false;
      if (ResponseBodyBytes != other.ResponseBodyBytes) return false;
      if (!ResponseHeaders.Equals(other.ResponseHeaders)) return false;
      if (!ResponseTrailers.Equals(other.ResponseTrailers)) return false;
      if (ResponseCodeDetails != other.ResponseCodeDetails) return false;
      if (UpstreamHeaderBytesReceived != other.UpstreamHeaderBytesReceived) return false;
      if (DownstreamHeaderBytesSent != other.DownstreamHeaderBytesSent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCode_ != null) hash ^= ResponseCode.GetHashCode();
      if (ResponseHeadersBytes != 0UL) hash ^= ResponseHeadersBytes.GetHashCode();
      if (ResponseBodyBytes != 0UL) hash ^= ResponseBodyBytes.GetHashCode();
      hash ^= ResponseHeaders.GetHashCode();
      hash ^= ResponseTrailers.GetHashCode();
      if (ResponseCodeDetails.Length != 0) hash ^= ResponseCodeDetails.GetHashCode();
      if (UpstreamHeaderBytesReceived != 0UL) hash ^= UpstreamHeaderBytesReceived.GetHashCode();
      if (DownstreamHeaderBytesSent != 0UL) hash ^= DownstreamHeaderBytesSent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseCode_ != null) {
        _single_responseCode_codec.WriteTagAndValue(output, ResponseCode);
      }
      if (ResponseHeadersBytes != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ResponseHeadersBytes);
      }
      if (ResponseBodyBytes != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ResponseBodyBytes);
      }
      responseHeaders_.WriteTo(output, _map_responseHeaders_codec);
      responseTrailers_.WriteTo(output, _map_responseTrailers_codec);
      if (ResponseCodeDetails.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ResponseCodeDetails);
      }
      if (UpstreamHeaderBytesReceived != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(UpstreamHeaderBytesReceived);
      }
      if (DownstreamHeaderBytesSent != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(DownstreamHeaderBytesSent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseCode_ != null) {
        _single_responseCode_codec.WriteTagAndValue(ref output, ResponseCode);
      }
      if (ResponseHeadersBytes != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ResponseHeadersBytes);
      }
      if (ResponseBodyBytes != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ResponseBodyBytes);
      }
      responseHeaders_.WriteTo(ref output, _map_responseHeaders_codec);
      responseTrailers_.WriteTo(ref output, _map_responseTrailers_codec);
      if (ResponseCodeDetails.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ResponseCodeDetails);
      }
      if (UpstreamHeaderBytesReceived != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(UpstreamHeaderBytesReceived);
      }
      if (DownstreamHeaderBytesSent != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(DownstreamHeaderBytesSent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (responseCode_ != null) {
        size += _single_responseCode_codec.CalculateSizeWithTag(ResponseCode);
      }
      if (ResponseHeadersBytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ResponseHeadersBytes);
      }
      if (ResponseBodyBytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ResponseBodyBytes);
      }
      size += responseHeaders_.CalculateSize(_map_responseHeaders_codec);
      size += responseTrailers_.CalculateSize(_map_responseTrailers_codec);
      if (ResponseCodeDetails.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseCodeDetails);
      }
      if (UpstreamHeaderBytesReceived != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UpstreamHeaderBytesReceived);
      }
      if (DownstreamHeaderBytesSent != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DownstreamHeaderBytesSent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HTTPResponseProperties other) {
      if (other == null) {
        return;
      }
      if (other.responseCode_ != null) {
        if (responseCode_ == null || other.ResponseCode != 0) {
          ResponseCode = other.ResponseCode;
        }
      }
      if (other.ResponseHeadersBytes != 0UL) {
        ResponseHeadersBytes = other.ResponseHeadersBytes;
      }
      if (other.ResponseBodyBytes != 0UL) {
        ResponseBodyBytes = other.ResponseBodyBytes;
      }
      responseHeaders_.MergeFrom(other.responseHeaders_);
      responseTrailers_.MergeFrom(other.responseTrailers_);
      if (other.ResponseCodeDetails.Length != 0) {
        ResponseCodeDetails = other.ResponseCodeDetails;
      }
      if (other.UpstreamHeaderBytesReceived != 0UL) {
        UpstreamHeaderBytesReceived = other.UpstreamHeaderBytesReceived;
      }
      if (other.DownstreamHeaderBytesSent != 0UL) {
        DownstreamHeaderBytesSent = other.DownstreamHeaderBytesSent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            uint? value = _single_responseCode_codec.Read(input);
            if (responseCode_ == null || value != 0) {
              ResponseCode = value;
            }
            break;
          }
          case 16: {
            ResponseHeadersBytes = input.ReadUInt64();
            break;
          }
          case 24: {
            ResponseBodyBytes = input.ReadUInt64();
            break;
          }
          case 34: {
            responseHeaders_.AddEntriesFrom(input, _map_responseHeaders_codec);
            break;
          }
          case 42: {
            responseTrailers_.AddEntriesFrom(input, _map_responseTrailers_codec);
            break;
          }
          case 50: {
            ResponseCodeDetails = input.ReadString();
            break;
          }
          case 56: {
            UpstreamHeaderBytesReceived = input.ReadUInt64();
            break;
          }
          case 64: {
            DownstreamHeaderBytesSent = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            uint? value = _single_responseCode_codec.Read(ref input);
            if (responseCode_ == null || value != 0) {
              ResponseCode = value;
            }
            break;
          }
          case 16: {
            ResponseHeadersBytes = input.ReadUInt64();
            break;
          }
          case 24: {
            ResponseBodyBytes = input.ReadUInt64();
            break;
          }
          case 34: {
            responseHeaders_.AddEntriesFrom(ref input, _map_responseHeaders_codec);
            break;
          }
          case 42: {
            responseTrailers_.AddEntriesFrom(ref input, _map_responseTrailers_codec);
            break;
          }
          case 50: {
            ResponseCodeDetails = input.ReadString();
            break;
          }
          case 56: {
            UpstreamHeaderBytesReceived = input.ReadUInt64();
            break;
          }
          case 64: {
            DownstreamHeaderBytesSent = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
